!function(e){var t=window.webpackHotUpdate;window.webpackHotUpdate=function(e,n){!function(e,t){if(!w[e]||!b[e])return;for(var n in b[e]=!1,t)Object.prototype.hasOwnProperty.call(t,n)&&(h[n]=t[n]);0==--g&&0===v&&x()}(e,n),t&&t(e,n)};var n,r=!0,o="71deaff2a6e0a454ae61",a=1e4,i={},l=[],u=[];function s(e){var t=T[e];if(!t)return S;var r=function(r){return t.hot.active?(T[r]?-1===T[r].parents.indexOf(e)&&T[r].parents.push(e):(l=[e],n=r),-1===t.children.indexOf(r)&&t.children.push(r)):(console.warn("[HMR] unexpected require("+r+") from disposed module "+e),l=[]),S(r)},o=function(e){return{configurable:!0,enumerable:!0,get:function(){return S[e]},set:function(t){S[e]=t}}};for(var a in S)Object.prototype.hasOwnProperty.call(S,a)&&"e"!==a&&Object.defineProperty(r,a,o(a));return r.e=function(e){return"ready"===f&&p("prepare"),v++,S.e(e).then(t,function(e){throw t(),e});function t(){v--,"prepare"===f&&(y[e]||C(e),0===v&&0===g&&x())}},r}var c=[],f="idle";function p(e){f=e;for(var t=0;t<c.length;t++)c[t].call(null,e)}var d,h,m,g=0,v=0,y={},b={},w={};function k(e){return+e+""===e?+e:e}function _(e){if("idle"!==f)throw new Error("check() is only allowed in idle status");return r=e,p("check"),(t=a,t=t||1e4,new Promise(function(e,n){if("undefined"==typeof XMLHttpRequest)return n(new Error("No browser support"));try{var r=new XMLHttpRequest,a=S.p+""+o+".hot-update.json";r.open("GET",a,!0),r.timeout=t,r.send(null)}catch(e){return n(e)}r.onreadystatechange=function(){if(4===r.readyState)if(0===r.status)n(new Error("Manifest request to "+a+" timed out."));else if(404===r.status)e();else if(200!==r.status&&304!==r.status)n(new Error("Manifest request to "+a+" failed."));else{try{var t=JSON.parse(r.responseText)}catch(e){return void n(e)}e(t)}}})).then(function(e){if(!e)return p("idle"),null;b={},y={},w=e.c,m=e.h,p("prepare");var t=new Promise(function(e,t){d={resolve:e,reject:t}});h={};return C(0),"prepare"===f&&0===v&&0===g&&x(),t});var t}function C(e){w[e]?(b[e]=!0,g++,function(e){var t=document.getElementsByTagName("head")[0],n=document.createElement("script");n.charset="utf-8",n.src=S.p+""+e+"."+o+".hot-update.js",t.appendChild(n)}(e)):y[e]=!0}function x(){p("ready");var e=d;if(d=null,e)if(r)Promise.resolve().then(function(){return E(r)}).then(function(t){e.resolve(t)},function(t){e.reject(t)});else{var t=[];for(var n in h)Object.prototype.hasOwnProperty.call(h,n)&&t.push(k(n));e.resolve(t)}}function E(t){if("ready"!==f)throw new Error("apply() is only allowed in ready status");var n,r,a,u,s;function c(e){for(var t=[e],n={},r=t.slice().map(function(e){return{chain:[e],id:e}});r.length>0;){var o=r.pop(),a=o.id,i=o.chain;if((u=T[a])&&!u.hot._selfAccepted){if(u.hot._selfDeclined)return{type:"self-declined",chain:i,moduleId:a};if(u.hot._main)return{type:"unaccepted",chain:i,moduleId:a};for(var l=0;l<u.parents.length;l++){var s=u.parents[l],c=T[s];if(c){if(c.hot._declinedDependencies[a])return{type:"declined",chain:i.concat([s]),moduleId:a,parentId:s};-1===t.indexOf(s)&&(c.hot._acceptedDependencies[a]?(n[s]||(n[s]=[]),d(n[s],[a])):(delete n[s],t.push(s),r.push({chain:i.concat([s]),id:s})))}}}}return{type:"accepted",moduleId:e,outdatedModules:t,outdatedDependencies:n}}function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];-1===e.indexOf(r)&&e.push(r)}}t=t||{};var g={},v=[],y={},b=function(){console.warn("[HMR] unexpected require("+C.moduleId+") to disposed module")};for(var _ in h)if(Object.prototype.hasOwnProperty.call(h,_)){var C;s=k(_);var x=!1,E=!1,O=!1,P="";switch((C=h[_]?c(s):{type:"disposed",moduleId:_}).chain&&(P="\nUpdate propagation: "+C.chain.join(" -> ")),C.type){case"self-declined":t.onDeclined&&t.onDeclined(C),t.ignoreDeclined||(x=new Error("Aborted because of self decline: "+C.moduleId+P));break;case"declined":t.onDeclined&&t.onDeclined(C),t.ignoreDeclined||(x=new Error("Aborted because of declined dependency: "+C.moduleId+" in "+C.parentId+P));break;case"unaccepted":t.onUnaccepted&&t.onUnaccepted(C),t.ignoreUnaccepted||(x=new Error("Aborted because "+s+" is not accepted"+P));break;case"accepted":t.onAccepted&&t.onAccepted(C),E=!0;break;case"disposed":t.onDisposed&&t.onDisposed(C),O=!0;break;default:throw new Error("Unexception type "+C.type)}if(x)return p("abort"),Promise.reject(x);if(E)for(s in y[s]=h[s],d(v,C.outdatedModules),C.outdatedDependencies)Object.prototype.hasOwnProperty.call(C.outdatedDependencies,s)&&(g[s]||(g[s]=[]),d(g[s],C.outdatedDependencies[s]));O&&(d(v,[C.moduleId]),y[s]=b)}var N,j=[];for(r=0;r<v.length;r++)s=v[r],T[s]&&T[s].hot._selfAccepted&&j.push({module:s,errorHandler:T[s].hot._selfAccepted});p("dispose"),Object.keys(w).forEach(function(e){!1===w[e]&&function(e){delete installedChunks[e]}(e)});for(var I,M,D=v.slice();D.length>0;)if(s=D.pop(),u=T[s]){var R={},A=u.hot._disposeHandlers;for(a=0;a<A.length;a++)(n=A[a])(R);for(i[s]=R,u.hot.active=!1,delete T[s],delete g[s],a=0;a<u.children.length;a++){var L=T[u.children[a]];L&&((N=L.parents.indexOf(s))>=0&&L.parents.splice(N,1))}}for(s in g)if(Object.prototype.hasOwnProperty.call(g,s)&&(u=T[s]))for(M=g[s],a=0;a<M.length;a++)I=M[a],(N=u.children.indexOf(I))>=0&&u.children.splice(N,1);for(s in p("apply"),o=m,y)Object.prototype.hasOwnProperty.call(y,s)&&(e[s]=y[s]);var F=null;for(s in g)if(Object.prototype.hasOwnProperty.call(g,s)&&(u=T[s])){M=g[s];var H=[];for(r=0;r<M.length;r++)if(I=M[r],n=u.hot._acceptedDependencies[I]){if(-1!==H.indexOf(n))continue;H.push(n)}for(r=0;r<H.length;r++){n=H[r];try{n(M)}catch(e){t.onErrored&&t.onErrored({type:"accept-errored",moduleId:s,dependencyId:M[r],error:e}),t.ignoreErrored||F||(F=e)}}}for(r=0;r<j.length;r++){var U=j[r];s=U.module,l=[s];try{S(s)}catch(e){if("function"==typeof U.errorHandler)try{U.errorHandler(e)}catch(n){t.onErrored&&t.onErrored({type:"self-accept-error-handler-errored",moduleId:s,error:n,originalError:e}),t.ignoreErrored||F||(F=n),F||(F=e)}else t.onErrored&&t.onErrored({type:"self-accept-errored",moduleId:s,error:e}),t.ignoreErrored||F||(F=e)}}return F?(p("fail"),Promise.reject(F)):(p("idle"),new Promise(function(e){e(v)}))}var T={};function S(t){if(T[t])return T[t].exports;var r=T[t]={i:t,l:!1,exports:{},hot:function(e){var t={_acceptedDependencies:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_disposeHandlers:[],_main:n!==e,active:!0,accept:function(e,n){if(void 0===e)t._selfAccepted=!0;else if("function"==typeof e)t._selfAccepted=e;else if("object"==typeof e)for(var r=0;r<e.length;r++)t._acceptedDependencies[e[r]]=n||function(){};else t._acceptedDependencies[e]=n||function(){}},decline:function(e){if(void 0===e)t._selfDeclined=!0;else if("object"==typeof e)for(var n=0;n<e.length;n++)t._declinedDependencies[e[n]]=!0;else t._declinedDependencies[e]=!0},dispose:function(e){t._disposeHandlers.push(e)},addDisposeHandler:function(e){t._disposeHandlers.push(e)},removeDisposeHandler:function(e){var n=t._disposeHandlers.indexOf(e);n>=0&&t._disposeHandlers.splice(n,1)},check:_,apply:E,status:function(e){if(!e)return f;c.push(e)},addStatusHandler:function(e){c.push(e)},removeStatusHandler:function(e){var t=c.indexOf(e);t>=0&&c.splice(t,1)},data:i[e]};return n=void 0,t}(t),parents:(u=l,l=[],u),children:[]};return e[t].call(r.exports,r,r.exports,s(t)),r.l=!0,r.exports}S.m=e,S.c=T,S.d=function(e,t,n){S.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},S.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},S.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return S.d(t,"a",t),t},S.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},S.p="",S.h=function(){return o},s("./src/index.js")(S.s="./src/index.js")}({"./node_modules/fbjs/lib/EventListener.js":function(e,t,n){"use strict";var r=n("./node_modules/fbjs/lib/emptyFunction.js"),o={listen:function(e,t,n){return e.addEventListener?(e.addEventListener(t,n,!1),{remove:function(){e.removeEventListener(t,n,!1)}}):e.attachEvent?(e.attachEvent("on"+t,n),{remove:function(){e.detachEvent("on"+t,n)}}):void 0},capture:function(e,t,n){return e.addEventListener?(e.addEventListener(t,n,!0),{remove:function(){e.removeEventListener(t,n,!0)}}):{remove:r}},registerDefault:function(){}};e.exports=o},"./node_modules/fbjs/lib/ExecutionEnvironment.js":function(e,t,n){"use strict";var r=!("undefined"==typeof window||!window.document||!window.document.createElement),o={canUseDOM:r,canUseWorkers:"undefined"!=typeof Worker,canUseEventListeners:r&&!(!window.addEventListener&&!window.attachEvent),canUseViewport:r&&!!window.screen,isInWorker:!r};e.exports=o},"./node_modules/fbjs/lib/containsNode.js":function(e,t,n){"use strict";var r=n("./node_modules/fbjs/lib/isTextNode.js");e.exports=function e(t,n){return!(!t||!n)&&(t===n||!r(t)&&(r(n)?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}},"./node_modules/fbjs/lib/emptyFunction.js":function(e,t,n){"use strict";function r(e){return function(){return e}}var o=function(){};o.thatReturns=r,o.thatReturnsFalse=r(!1),o.thatReturnsTrue=r(!0),o.thatReturnsNull=r(null),o.thatReturnsThis=function(){return this},o.thatReturnsArgument=function(e){return e},e.exports=o},"./node_modules/fbjs/lib/emptyObject.js":function(e,t,n){"use strict";e.exports={}},"./node_modules/fbjs/lib/focusNode.js":function(e,t,n){"use strict";e.exports=function(e){try{e.focus()}catch(e){}}},"./node_modules/fbjs/lib/getActiveElement.js":function(e,t,n){"use strict";e.exports=function(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}},"./node_modules/fbjs/lib/isNode.js":function(e,t,n){"use strict";e.exports=function(e){var t=(e?e.ownerDocument||e:document).defaultView||window;return!(!e||!("function"==typeof t.Node?e instanceof t.Node:"object"==typeof e&&"number"==typeof e.nodeType&&"string"==typeof e.nodeName))}},"./node_modules/fbjs/lib/isTextNode.js":function(e,t,n){"use strict";var r=n("./node_modules/fbjs/lib/isNode.js");e.exports=function(e){return r(e)&&3==e.nodeType}},"./node_modules/fbjs/lib/shallowEqual.js":function(e,t,n){"use strict";var r=Object.prototype.hasOwnProperty;function o(e,t){return e===t?0!==e||0!==t||1/e==1/t:e!=e&&t!=t}e.exports=function(e,t){if(o(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),a=Object.keys(t);if(n.length!==a.length)return!1;for(var i=0;i<n.length;i++)if(!r.call(t,n[i])||!o(e[n[i]],t[n[i]]))return!1;return!0}},"./node_modules/markdown/lib/index.js":function(e,t,n){t.markdown=n("./node_modules/markdown/lib/markdown.js"),t.parse=t.markdown.toHTML},"./node_modules/markdown/lib/markdown.js":function(e,t,n){!function(e){var t=e.Markdown=function(e){switch(typeof e){case"undefined":this.dialect=t.dialects.Gruber;break;case"object":this.dialect=e;break;default:if(!(e in t.dialects))throw new Error("Unknown Markdown dialect '"+String(e)+"'");this.dialect=t.dialects[e]}this.em_state=[],this.strong_state=[],this.debug_indent=""};function r(){return"Markdown.mk_block( "+uneval(this.toString())+", "+uneval(this.trailing)+", "+uneval(this.lineNumber)+" )"}function o(){var e=n("./node_modules/util/util.js");return"Markdown.mk_block( "+e.inspect(this.toString())+", "+e.inspect(this.trailing)+", "+e.inspect(this.lineNumber)+" )"}e.parse=function(e,n){return new t(n).toTree(e)},e.toHTML=function(t,n,r){var o=e.toHTMLTree(t,n,r);return e.renderJsonML(o)},e.toHTMLTree=function(e,t,n){"string"==typeof e&&(e=this.parse(e,t));var r=d(e),o={};r&&r.references&&(o=r.references);var a=function e(t,n,r){var o;r=r||{};var a=t.slice(0);"function"==typeof r.preprocessTreeNode&&(a=r.preprocessTreeNode(a,n));var i=d(a);if(i){for(o in a[1]={},i)a[1][o]=i[o];i=a[1]}if("string"==typeof a)return a;switch(a[0]){case"header":a[0]="h"+a[1].level,delete a[1].level;break;case"bulletlist":a[0]="ul";break;case"numberlist":a[0]="ol";break;case"listitem":a[0]="li";break;case"para":a[0]="p";break;case"markdown":a[0]="html",i&&delete i.references;break;case"code_block":a[0]="pre",o=i?2:1;var l=["code"];l.push.apply(l,a.splice(o,a.length-o)),a[o]=l;break;case"inlinecode":a[0]="code";break;case"img":a[1].src=a[1].href,delete a[1].href;break;case"linebreak":a[0]="br";break;case"link":a[0]="a";break;case"link_ref":a[0]="a";var u=n[i.ref];if(!u)return i.original;delete i.ref,i.href=u.href,u.title&&(i.title=u.title),delete i.original;break;case"img_ref":a[0]="img";var u=n[i.ref];if(!u)return i.original;delete i.ref,i.src=u.href,u.title&&(i.title=u.title),delete i.original}o=1;if(i){for(var s in a[1]){o=2;break}1===o&&a.splice(o,1)}for(;o<a.length;++o)a[o]=e(a[o],n,r);return a}(e,o,n);return function e(t){var n=d(t)?2:1;for(;n<t.length;)"string"==typeof t[n]?n+1<t.length&&"string"==typeof t[n+1]?t[n]+=t.splice(n+1,1)[0]:++n:(e(t[n]),++n)}(a),a};var i=t.mk_block=function(e,t,n){1==arguments.length&&(t="\n\n");var a=new String(e);return a.trailing=t,a.inspect=o,a.toSource=r,void 0!=n&&(a.lineNumber=n),a};function l(e){for(var t=0,n=-1;-1!==(n=e.indexOf("\n",n+1));)t++;return t}function u(e,t){var n=e+"_state",r="strong"==e?"em_state":"strong_state";function o(e){this.len_after=e,this.name="close_"+t}return function(a,i){if(this[n][0]==t)return this[n].shift(),[a.length,new o(a.length-t.length)];var l=this[r].slice(),u=this[n].slice();this[n].unshift(t);var s=this.processInline(a.substr(t.length)),c=s[s.length-1];this[n].shift();return c instanceof o?(s.pop(),[a.length-c.len_after,[e].concat(s)]):(this[r]=l,this[n]=u,[t.length,t])}}t.prototype.split_blocks=function(e,t){e=e.replace(/(\r\n|\n|\r)/g,"\n");var n,r=/([\s\S]+?)($|\n#|\n(?:\s*\n|$)+)/g,o=[],a=1;for(null!=(n=/^(\s*\n)/.exec(e))&&(a+=l(n[0]),r.lastIndex=n[0].length);null!==(n=r.exec(e));)"\n#"==n[2]&&(n[2]="\n",r.lastIndex--),o.push(i(n[1],n[2],a)),a+=l(n[0]);return o},t.prototype.processBlock=function(e,t){var n=this.dialect.block,r=n.__order__;if("__call__"in n)return n.__call__.call(this,e,t);for(var o=0;o<r.length;o++){var a=n[r[o]].call(this,e,t);if(a)return(!c(a)||a.length>0&&!c(a[0]))&&this.debug(r[o],"didn't return a proper array"),a}return[]},t.prototype.processInline=function(e){return this.dialect.inline.__call__.call(this,String(e))},t.prototype.toTree=function(e,t){var n=e instanceof Array?e:this.split_blocks(e),r=this.tree;try{for(this.tree=t||this.tree||["markdown"];n.length;){var o=this.processBlock(n.shift(),n);o.length&&this.tree.push.apply(this.tree,o)}return this.tree}finally{t&&(this.tree=r)}},t.prototype.debug=function(){var e=Array.prototype.slice.call(arguments);e.unshift(this.debug_indent),"undefined"!=typeof print&&print.apply(print,e),"undefined"!=typeof console&&void 0!==console.log&&console.log.apply(null,e)},t.prototype.loop_re_over_block=function(e,t,n){for(var r,o=t.valueOf();o.length&&null!=(r=e.exec(o));)o=o.substr(r[0].length),n.call(this,r);return o},t.dialects={},t.dialects.Gruber={block:{atxHeader:function(e,t){var n=e.match(/^(#{1,6})\s*(.*?)\s*#*\s*(?:\n|$)/);if(n){var r=["header",{level:n[1].length}];return Array.prototype.push.apply(r,this.processInline(n[2])),n[0].length<e.length&&t.unshift(i(e.substr(n[0].length),e.trailing,e.lineNumber+2)),[r]}},setextHeader:function(e,t){var n=e.match(/^(.*)\n([-=])\2\2+(?:\n|$)/);if(n){var r=["header",{level:"="===n[2]?1:2},n[1]];return n[0].length<e.length&&t.unshift(i(e.substr(n[0].length),e.trailing,e.lineNumber+2)),[r]}},code:function(e,t){var n=[],r=/^(?: {0,3}\t| {4})(.*)\n?/;if(e.match(r)){e:for(;;){var o=this.loop_re_over_block(r,e.valueOf(),function(e){n.push(e[1])});if(o.length){t.unshift(i(o,e.trailing));break e}if(!t.length)break e;if(!t[0].match(r))break e;n.push(e.trailing.replace(/[^\n]/g,"").substring(2)),e=t.shift()}return[["code_block",n.join("\n")]]}},horizRule:function(e,t){var n=e.match(/^(?:([\s\S]*?)\n)?[ \t]*([-_*])(?:[ \t]*\2){2,}[ \t]*(?:\n([\s\S]*))?$/);if(n){var r=[["hr"]];return n[1]&&r.unshift.apply(r,this.processBlock(n[1],[])),n[3]&&t.unshift(i(n[3])),r}},lists:function(){var e="[*+-]|\\d+\\.",t=/[*+-]/,n=new RegExp("^( {0,3})("+e+")[ \t]+"),r="(?: {0,3}\\t| {4})";function o(e,t,n,r){if(t)e.push(["para"].concat(n));else{var o=e[e.length-1]instanceof Array&&"para"==e[e.length-1][0]?e[e.length-1]:e;r&&e.length>1&&n.unshift(r);for(var a=0;a<n.length;a++){var i=n[a];"string"==typeof i&&o.length>1&&"string"==typeof o[o.length-1]?o[o.length-1]+=i:o.push(i)}}}function a(e,t){for(var n=new RegExp("^("+r+"{"+e+"}.*?\\n?)*$"),o=new RegExp("^"+r+"{"+e+"}","gm"),a=[];t.length>0&&n.exec(t[0]);){var l=t.shift(),u=l.replace(o,"");a.push(i(u,l.trailing,l.lineNumber))}return a}function l(e,t,n){var r=e.list,o=r[r.length-1];if(!(o[1]instanceof Array&&"para"==o[1][0]))if(t+1==n.length)o.push(["para"].concat(o.splice(1,o.length-1)));else{var a=o.pop();o.push(["para"].concat(o.splice(1,o.length-1)),a)}}return function(i,u){var c=i.match(n);if(c){for(var f,p,d,h=[],m=P(c),g=!1,v=[h[0].list];;){for(var y=i.split(/(?=\n)/),b="",w=0;w<y.length;w++){var k="",_=y[w].replace(/^\n/,function(e){return k=e,""}),C=(d=h.length,new RegExp("(?:^("+r+"{0,"+d+"} {0,3})("+e+")\\s+)|(^"+r+"{0,"+(d-1)+"}[ ]{0,4})"));if(void 0!==(c=_.match(C))[1]){b.length&&(o(f,g,this.processInline(b),k),g=!1,b=""),c[1]=c[1].replace(/ {0,3}\t/g,"    ");var x=Math.floor(c[1].length/4)+1;if(x>h.length)m=P(c),f.push(m),f=m[1]=["listitem"];else{var E=!1;for(p=0;p<h.length;p++)if(h[p].indent==c[1]){m=h[p].list,h.splice(p+1,h.length-(p+1)),E=!0;break}E||(++x<=h.length?(h.splice(x,h.length-x),m=h[x-1].list):(m=P(c),f.push(m))),f=["listitem"],m.push(f)}k=""}_.length>c[0].length&&(b+=k+_.substr(c[0].length))}b.length&&(o(f,g,this.processInline(b),k),g=!1,b="");var T=a(h.length,u);T.length>0&&(s(h,l,this),f.push.apply(f,this.toTree(T,[])));var S=u[0]&&u[0].valueOf()||"";if(!S.match(n)&&!S.match(/^ /))break;i=u.shift();var O=this.dialect.block.horizRule(i,u);if(O){v.push.apply(v,O);break}s(h,l,this),g=!0}return v}function P(e){var n=t.exec(e[2])?["bulletlist"]:["numberlist"];return h.push({list:n,indent:e[1]}),n}}}(),blockquote:function(e,t){if(e.match(/^>/m)){var n=[];if(">"!=e[0]){for(var r=e.split(/\n/),o=[],a=e.lineNumber;r.length&&">"!=r[0][0];)o.push(r.shift()),a++;var l=i(o.join("\n"),"\n",e.lineNumber);n.push.apply(n,this.processBlock(l,[])),e=i(r.join("\n"),e.trailing,a)}for(;t.length&&">"==t[0][0];){var u=t.shift();e=i(e+e.trailing+u,u.trailing,e.lineNumber)}var s=e.replace(/^> ?/gm,""),c=(this.tree,this.toTree(s,["blockquote"])),p=d(c);return p&&p.references&&(delete p.references,f(p)&&c.splice(1,1)),n.push(c),n}},referenceDefn:function(e,t){var n=/^\s*\[(.*?)\]:\s*(\S+)(?:\s+(?:(['"])(.*?)\3|\((.*?)\)))?\n?/;if(e.match(n)){d(this.tree)||this.tree.splice(1,0,{});var r=d(this.tree);void 0===r.references&&(r.references={});var o=this.loop_re_over_block(n,e,function(e){e[2]&&"<"==e[2][0]&&">"==e[2][e[2].length-1]&&(e[2]=e[2].substring(1,e[2].length-1));var t=r.references[e[1].toLowerCase()]={href:e[2]};void 0!==e[4]?t.title=e[4]:void 0!==e[5]&&(t.title=e[5])});return o.length&&t.unshift(i(o,e.trailing)),[]}},para:function(e,t){return[["para"].concat(this.processInline(e))]}}},t.dialects.Gruber.inline={__oneElement__:function(e,t,n){var r,o;return t=t||this.dialect.inline.__patterns__,(r=new RegExp("([\\s\\S]*?)("+(t.source||t)+")").exec(e))?r[1]?[r[1].length,r[1]]:(r[2]in this.dialect.inline&&(o=this.dialect.inline[r[2]].call(this,e.substr(r.index),r,n||[])),o=o||[r[2].length,r[2]]):[e.length,e]},__call__:function(e,t){var n,r=[];function o(e){"string"==typeof e&&"string"==typeof r[r.length-1]?r[r.length-1]+=e:r.push(e)}for(;e.length>0;)n=this.dialect.inline.__oneElement__.call(this,e,t,r),e=e.substr(n.shift()),s(n,o);return r},"]":function(){},"}":function(){},__escape__:/^\\[\\`\*_{}\[\]()#\+.!\-]/,"\\":function(e){return this.dialect.inline.__escape__.exec(e)?[2,e.charAt(1)]:[1,"\\"]},"![":function(e){var t=e.match(/^!\[(.*?)\][ \t]*\([ \t]*([^")]*?)(?:[ \t]+(["'])(.*?)\3)?[ \t]*\)/);if(t){t[2]&&"<"==t[2][0]&&">"==t[2][t[2].length-1]&&(t[2]=t[2].substring(1,t[2].length-1)),t[2]=this.dialect.inline.__call__.call(this,t[2],/\\/)[0];var n={alt:t[1],href:t[2]||""};return void 0!==t[4]&&(n.title=t[4]),[t[0].length,["img",n]]}return(t=e.match(/^!\[(.*?)\][ \t]*\[(.*?)\]/))?[t[0].length,["img_ref",{alt:t[1],ref:t[2].toLowerCase(),original:t[0]}]]:[2,"!["]},"[":function(e){var n=String(e),r=t.DialectHelpers.inline_until_char.call(this,e.substr(1),"]");if(!r)return[1,"["];var o,a,i=1+r[0],l=r[1],u=(e=e.substr(i)).match(/^\s*\([ \t]*([^"']*)(?:[ \t]+(["'])(.*?)\2)?[ \t]*\)/);if(u){var s=u[1];if(i+=u[0].length,s&&"<"==s[0]&&">"==s[s.length-1]&&(s=s.substring(1,s.length-1)),!u[3])for(var c=1,f=0;f<s.length;f++)switch(s[f]){case"(":c++;break;case")":0==--c&&(i-=s.length-f,s=s.substring(0,f))}return a={href:(s=this.dialect.inline.__call__.call(this,s,/\\/)[0])||""},void 0!==u[3]&&(a.title=u[3]),o=["link",a].concat(l),[i,o]}return(u=e.match(/^\s*\[(.*?)\]/))?(i+=u[0].length,o=["link_ref",a={ref:(u[1]||String(l)).toLowerCase(),original:n.substr(0,i)}].concat(l),[i,o]):1==l.length&&"string"==typeof l[0]?(o=["link_ref",a={ref:l[0].toLowerCase(),original:n.substr(0,i)},l[0]],[i,o]):[1,"["]},"<":function(e){var t;return null!=(t=e.match(/^<(?:((https?|ftp|mailto):[^>]+)|(.*?@.*?\.[a-zA-Z]+))>/))?t[3]?[t[0].length,["link",{href:"mailto:"+t[3]},t[3]]]:"mailto"==t[2]?[t[0].length,["link",{href:t[1]},t[1].substr("mailto:".length)]]:[t[0].length,["link",{href:t[1]},t[1]]]:[1,"<"]},"`":function(e){var t=e.match(/(`+)(([\s\S]*?)\1)/);return t&&t[2]?[t[1].length+t[2].length,["inlinecode",t[3]]]:[1,"`"]},"  \n":function(e){return[3,["linebreak"]]}},t.dialects.Gruber.inline["**"]=u("strong","**"),t.dialects.Gruber.inline.__=u("strong","__"),t.dialects.Gruber.inline["*"]=u("em","*"),t.dialects.Gruber.inline._=u("em","_"),t.buildBlockOrder=function(e){var t=[];for(var n in e)"__order__"!=n&&"__call__"!=n&&t.push(n);e.__order__=t},t.buildInlinePatterns=function(e){var t=[];for(var n in e)if(!n.match(/^__.*__$/)){var r=n.replace(/([\\.*+?|()\[\]{}])/g,"\\$1").replace(/\n/,"\\n");t.push(1==n.length?r:"(?:"+r+")")}t=t.join("|"),e.__patterns__=t;var o=e.__call__;e.__call__=function(e,n){return void 0!=n?o.call(this,e,n):o.call(this,e,t)}},t.DialectHelpers={},t.DialectHelpers.inline_until_char=function(e,t){for(var n=0,r=[];;){if(e.charAt(n)==t)return[++n,r];if(n>=e.length)return null;var o=this.dialect.inline.__oneElement__.call(this,e.substr(n));n+=o[0],r.push.apply(r,o.slice(1))}},t.subclassDialect=function(e){function t(){}function n(){}return t.prototype=e.block,n.prototype=e.inline,{block:new t,inline:new n}},t.buildBlockOrder(t.dialects.Gruber.block),t.buildInlinePatterns(t.dialects.Gruber.inline),t.dialects.Maruku=t.subclassDialect(t.dialects.Gruber),t.dialects.Maruku.processMetaHash=function(e){for(var t=function(e){var t=e.split(""),n=[""],r=!1;for(;t.length;){var o=t.shift();switch(o){case" ":r?n[n.length-1]+=o:n.push("");break;case"'":case'"':r=!r;break;case"\\":o=t.shift();default:n[n.length-1]+=o}}return n}(e),n={},r=0;r<t.length;++r)if(/^#/.test(t[r]))n.id=t[r].substring(1);else if(/^\./.test(t[r]))n.class?n.class=n.class+t[r].replace(/./," "):n.class=t[r].substring(1);else if(/\=/.test(t[r])){var o=t[r].split(/\=/);n[o[0]]=o[1]}return n},t.dialects.Maruku.block.document_meta=function(e,t){if(!(e.lineNumber>1)&&e.match(/^(?:\w+:.*\n)*\w+:.*$/)){d(this.tree)||this.tree.splice(1,0,{});var n=e.split(/\n/);for(p in n){var r=n[p].match(/(\w+):\s*(.*)$/),o=r[1].toLowerCase(),a=r[2];this.tree[1][o]=a}return[]}},t.dialects.Maruku.block.block_meta=function(e,t){var n=e.match(/(^|\n) {0,3}\{:\s*((?:\\\}|[^\}])*)\s*\}$/);if(n){var r,o=this.dialect.processMetaHash(n[2]);if(""===n[1]){var i=this.tree[this.tree.length-1];if(r=d(i),"string"==typeof i)return;for(a in r||(r={},i.splice(1,0,r)),o)r[a]=o[a];return[]}var l=e.replace(/\n.*$/,""),u=this.processBlock(l,[]);for(a in(r=d(u[0]))||(r={},u[0].splice(1,0,r)),o)r[a]=o[a];return u}},t.dialects.Maruku.block.definition_list=function(e,t){var n,r=/^((?:[^\s:].*\n)+):\s+([\s\S]+)$/,o=["dl"];if(l=e.match(r)){for(var a=[e];t.length&&r.exec(t[0]);)a.push(t.shift());for(var i=0;i<a.length;++i){var l,u=(l=a[i].match(r))[1].replace(/\n$/,"").split(/\n/),s=l[2].split(/\n:\s+/);for(n=0;n<u.length;++n)o.push(["dt",u[n]]);for(n=0;n<s.length;++n)o.push(["dd"].concat(this.processInline(s[n].replace(/(\n)\s+/,"$1"))))}return[o]}},t.dialects.Maruku.block.table=function(e,t){var n,r,o=function(e,t){(t=t||"\\s").match(/^[\\|\[\]{}?*.+^$]$/)&&(t="\\"+t);for(var n,r=[],o=new RegExp("^((?:\\\\.|[^\\\\"+t+"])*)"+t+"(.*)");n=e.match(o);)r.push(n[1]),e=n[2];return r.push(e),r};if(r=e.match(/^ {0,3}\|(.+)\n {0,3}\|\s*([\-:]+[\-| :]*)\n((?:\s*\|.*(?:\n|$))*)(?=\n|$)/))r[3]=r[3].replace(/^\s*\|/gm,"");else if(!(r=e.match(/^ {0,3}(\S(?:\\.|[^\\|])*\|.*)\n {0,3}([\-:]+\s*\|[\-| :]*)\n((?:(?:\\.|[^\\|])*\|.*(?:\n|$))*)(?=\n|$)/)))return;var a=["table",["thead",["tr"]],["tbody"]];r[2]=r[2].replace(/\|\s*$/,"").split("|");var i=[];for(s(r[2],function(e){e.match(/^\s*-+:\s*$/)?i.push({align:"right"}):e.match(/^\s*:-+\s*$/)?i.push({align:"left"}):e.match(/^\s*:-+:\s*$/)?i.push({align:"center"}):i.push({})}),r[1]=o(r[1].replace(/\|\s*$/,""),"|"),n=0;n<r[1].length;n++)a[1][1].push(["th",i[n]||{}].concat(this.processInline(r[1][n].trim())));return s(r[3].replace(/\|\s*$/gm,"").split("\n"),function(e){var t=["tr"];for(e=o(e,"|"),n=0;n<e.length;n++)t.push(["td",i[n]||{}].concat(this.processInline(e[n].trim())));a[2].push(t)},this),[a]},t.dialects.Maruku.inline["{:"]=function(e,t,n){if(!n.length)return[2,"{:"];var r=n[n.length-1];if("string"==typeof r)return[2,"{:"];var o=e.match(/^\{:\s*((?:\\\}|[^\}])*)\s*\}/);if(!o)return[2,"{:"];var a=this.dialect.processMetaHash(o[1]),i=d(r);for(var l in i||(i={},r.splice(1,0,i)),a)i[l]=a[l];return[o[0].length,""]},t.dialects.Maruku.inline.__escape__=/^\\[\\`\*_{}\[\]()#\+.!\-|:]/,t.buildBlockOrder(t.dialects.Maruku.block),t.buildInlinePatterns(t.dialects.Maruku.inline);var s,c=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)};s=Array.prototype.forEach?function(e,t,n){return e.forEach(t,n)}:function(e,t,n){for(var r=0;r<e.length;r++)t.call(n||e,e[r],r,e)};var f=function(e){for(var t in e)if(hasOwnProperty.call(e,t))return!1;return!0};function d(e){return c(e)&&e.length>1&&"object"==typeof e[1]&&!c(e[1])?e[1]:void 0}function h(e){return e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#39;")}function m(e){if("string"==typeof e)return h(e);var t=e.shift(),n={},r=[];for(!e.length||"object"!=typeof e[0]||e[0]instanceof Array||(n=e.shift());e.length;)r.push(m(e.shift()));var o="";for(var a in n)o+=" "+a+'="'+h(n[a])+'"';return"img"==t||"br"==t||"hr"==t?"<"+t+o+"/>":"<"+t+o+">"+r.join("")+"</"+t+">"}e.renderJsonML=function(e,t){(t=t||{}).root=t.root||!1;var n=[];if(t.root)n.push(m(e));else for(e.shift(),!e.length||"object"!=typeof e[0]||e[0]instanceof Array||e.shift();e.length;)n.push(m(e.shift()));return n.join("\n\n")}}(t)},"./node_modules/object-assign/index.js":function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(e){r[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,i,l=function(e){if(null===e||void 0===e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}(e),u=1;u<arguments.length;u++){for(var s in n=Object(arguments[u]))o.call(n,s)&&(l[s]=n[s]);if(r){i=r(n);for(var c=0;c<i.length;c++)a.call(n,i[c])&&(l[i[c]]=n[i[c]])}}return l}},"./node_modules/process/browser.js":function(e,t){var n,r,o=e.exports={};function a(){throw new Error("setTimeout has not been defined")}function i(){throw new Error("clearTimeout has not been defined")}function l(e){if(n===setTimeout)return setTimeout(e,0);if((n===a||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:a}catch(e){n=a}try{r="function"==typeof clearTimeout?clearTimeout:i}catch(e){r=i}}();var u,s=[],c=!1,f=-1;function p(){c&&u&&(c=!1,u.length?s=u.concat(s):f=-1,s.length&&d())}function d(){if(!c){var e=l(p);c=!0;for(var t=s.length;t;){for(u=s,s=[];++f<t;)u&&u[f].run();f=-1,t=s.length}u=null,c=!1,function(e){if(r===clearTimeout)return clearTimeout(e);if((r===i||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(e);try{r(e)}catch(t){try{return r.call(null,e)}catch(t){return r.call(this,e)}}}(e)}}function h(e,t){this.fun=e,this.array=t}function m(){}o.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];s.push(new h(e,t)),1!==s.length||c||l(d)},h.prototype.run=function(){this.fun.apply(null,this.array)},o.title="browser",o.browser=!0,o.env={},o.argv=[],o.version="",o.versions={},o.on=m,o.addListener=m,o.once=m,o.off=m,o.removeListener=m,o.removeAllListeners=m,o.emit=m,o.prependListener=m,o.prependOnceListener=m,o.listeners=function(e){return[]},o.binding=function(e){throw new Error("process.binding is not supported")},o.cwd=function(){return"/"},o.chdir=function(e){throw new Error("process.chdir is not supported")},o.umask=function(){return 0}},"./node_modules/react-dom/cjs/react-dom.production.min.js":function(e,t,n){"use strict";
/** @license React v16.2.0
 * react-dom.production.min.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n("./node_modules/react/index.js"),o=n("./node_modules/fbjs/lib/ExecutionEnvironment.js"),a=n("./node_modules/object-assign/index.js"),i=n("./node_modules/fbjs/lib/emptyFunction.js"),l=n("./node_modules/fbjs/lib/EventListener.js"),u=n("./node_modules/fbjs/lib/getActiveElement.js"),s=n("./node_modules/fbjs/lib/shallowEqual.js"),c=n("./node_modules/fbjs/lib/containsNode.js"),f=n("./node_modules/fbjs/lib/focusNode.js"),p=n("./node_modules/fbjs/lib/emptyObject.js");function d(e){for(var t=arguments.length-1,n="Minified React error #"+e+"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);throw(t=Error(n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.")).name="Invariant Violation",t.framesToPop=1,t}r||d("227");var h={children:!0,dangerouslySetInnerHTML:!0,defaultValue:!0,defaultChecked:!0,innerHTML:!0,suppressContentEditableWarning:!0,suppressHydrationWarning:!0,style:!0};function m(e,t){return(e&t)===t}var g={MUST_USE_PROPERTY:1,HAS_BOOLEAN_VALUE:4,HAS_NUMERIC_VALUE:8,HAS_POSITIVE_NUMERIC_VALUE:24,HAS_OVERLOADED_BOOLEAN_VALUE:32,HAS_STRING_BOOLEAN_VALUE:64,injectDOMPropertyConfig:function(e){var t=g,n=e.Properties||{},r=e.DOMAttributeNamespaces||{},o=e.DOMAttributeNames||{};for(var a in e=e.DOMMutationMethods||{},n){v.hasOwnProperty(a)&&d("48",a);var i=a.toLowerCase(),l=n[a];1>=(i={attributeName:i,attributeNamespace:null,propertyName:a,mutationMethod:null,mustUseProperty:m(l,t.MUST_USE_PROPERTY),hasBooleanValue:m(l,t.HAS_BOOLEAN_VALUE),hasNumericValue:m(l,t.HAS_NUMERIC_VALUE),hasPositiveNumericValue:m(l,t.HAS_POSITIVE_NUMERIC_VALUE),hasOverloadedBooleanValue:m(l,t.HAS_OVERLOADED_BOOLEAN_VALUE),hasStringBooleanValue:m(l,t.HAS_STRING_BOOLEAN_VALUE)}).hasBooleanValue+i.hasNumericValue+i.hasOverloadedBooleanValue||d("50",a),o.hasOwnProperty(a)&&(i.attributeName=o[a]),r.hasOwnProperty(a)&&(i.attributeNamespace=r[a]),e.hasOwnProperty(a)&&(i.mutationMethod=e[a]),v[a]=i}}},v={};function y(e,t){if(h.hasOwnProperty(e)||2<e.length&&("o"===e[0]||"O"===e[0])&&("n"===e[1]||"N"===e[1]))return!1;if(null===t)return!0;switch(typeof t){case"boolean":return h.hasOwnProperty(e)?e=!0:(t=b(e))?e=t.hasBooleanValue||t.hasStringBooleanValue||t.hasOverloadedBooleanValue:e="data-"===(e=e.toLowerCase().slice(0,5))||"aria-"===e,e;case"undefined":case"number":case"string":case"object":return!0;default:return!1}}function b(e){return v.hasOwnProperty(e)?v[e]:null}var w=g,k=w.MUST_USE_PROPERTY,_=w.HAS_BOOLEAN_VALUE,C=w.HAS_NUMERIC_VALUE,x=w.HAS_POSITIVE_NUMERIC_VALUE,E=w.HAS_OVERLOADED_BOOLEAN_VALUE,T=w.HAS_STRING_BOOLEAN_VALUE,S={Properties:{allowFullScreen:_,async:_,autoFocus:_,autoPlay:_,capture:E,checked:k|_,cols:x,contentEditable:T,controls:_,default:_,defer:_,disabled:_,download:E,draggable:T,formNoValidate:_,hidden:_,loop:_,multiple:k|_,muted:k|_,noValidate:_,open:_,playsInline:_,readOnly:_,required:_,reversed:_,rows:x,rowSpan:C,scoped:_,seamless:_,selected:k|_,size:x,start:C,span:x,spellCheck:T,style:0,tabIndex:0,itemScope:_,acceptCharset:0,className:0,htmlFor:0,httpEquiv:0,value:T},DOMAttributeNames:{acceptCharset:"accept-charset",className:"class",htmlFor:"for",httpEquiv:"http-equiv"},DOMMutationMethods:{value:function(e,t){if(null==t)return e.removeAttribute("value");"number"!==e.type||!1===e.hasAttribute("value")?e.setAttribute("value",""+t):e.validity&&!e.validity.badInput&&e.ownerDocument.activeElement!==e&&e.setAttribute("value",""+t)}}},O=w.HAS_STRING_BOOLEAN_VALUE,P="http://www.w3.org/1999/xlink",N="http://www.w3.org/XML/1998/namespace",j={Properties:{autoReverse:O,externalResourcesRequired:O,preserveAlpha:O},DOMAttributeNames:{autoReverse:"autoReverse",externalResourcesRequired:"externalResourcesRequired",preserveAlpha:"preserveAlpha"},DOMAttributeNamespaces:{xlinkActuate:P,xlinkArcrole:P,xlinkHref:P,xlinkRole:P,xlinkShow:P,xlinkTitle:P,xlinkType:P,xmlBase:N,xmlLang:N,xmlSpace:N}},I=/[\-\:]([a-z])/g;function M(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode x-height xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xmlns:xlink xml:lang xml:space".split(" ").forEach(function(e){var t=e.replace(I,M);j.Properties[t]=0,j.DOMAttributeNames[t]=e}),w.injectDOMPropertyConfig(S),w.injectDOMPropertyConfig(j);var D={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,injection:{injectErrorUtils:function(e){"function"!=typeof e.invokeGuardedCallback&&d("197"),R=e.invokeGuardedCallback}},invokeGuardedCallback:function(e,t,n,r,o,a,i,l,u){R.apply(D,arguments)},invokeGuardedCallbackAndCatchFirstError:function(e,t,n,r,o,a,i,l,u){if(D.invokeGuardedCallback.apply(this,arguments),D.hasCaughtError()){var s=D.clearCaughtError();D._hasRethrowError||(D._hasRethrowError=!0,D._rethrowError=s)}},rethrowCaughtError:function(){return function(){if(D._hasRethrowError){var e=D._rethrowError;throw D._rethrowError=null,D._hasRethrowError=!1,e}}.apply(D,arguments)},hasCaughtError:function(){return D._hasCaughtError},clearCaughtError:function(){if(D._hasCaughtError){var e=D._caughtError;return D._caughtError=null,D._hasCaughtError=!1,e}d("198")}};function R(e,t,n,r,o,a,i,l,u){D._hasCaughtError=!1,D._caughtError=null;var s=Array.prototype.slice.call(arguments,3);try{t.apply(n,s)}catch(e){D._caughtError=e,D._hasCaughtError=!0}}var A=null,L={};function F(){if(A)for(var e in L){var t=L[e],n=A.indexOf(e);if(-1<n||d("96",e),!U[n])for(var r in t.extractEvents||d("97",e),U[n]=t,n=t.eventTypes){var o=void 0,a=n[r],i=t,l=r;z.hasOwnProperty(l)&&d("99",l),z[l]=a;var u=a.phasedRegistrationNames;if(u){for(o in u)u.hasOwnProperty(o)&&H(u[o],i,l);o=!0}else a.registrationName?(H(a.registrationName,i,l),o=!0):o=!1;o||d("98",r,e)}}}function H(e,t,n){V[e]&&d("100",e),V[e]=t,B[e]=t.eventTypes[n].dependencies}var U=[],z={},V={},B={};function $(e){A&&d("101"),A=Array.prototype.slice.call(e),F()}function K(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];L.hasOwnProperty(t)&&L[t]===r||(L[t]&&d("102",t),L[t]=r,n=!0)}n&&F()}var W=Object.freeze({plugins:U,eventNameDispatchConfigs:z,registrationNameModules:V,registrationNameDependencies:B,possibleRegistrationNames:null,injectEventPluginOrder:$,injectEventPluginsByName:K}),q=null,G=null,Q=null;function Y(e,t,n,r){t=e.type||"unknown-event",e.currentTarget=Q(r),D.invokeGuardedCallbackAndCatchFirstError(t,n,void 0,e),e.currentTarget=null}function X(e,t){return null==t&&d("30"),null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function J(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var Z=null;function ee(e,t){if(e){var n=e._dispatchListeners,r=e._dispatchInstances;if(Array.isArray(n))for(var o=0;o<n.length&&!e.isPropagationStopped();o++)Y(e,t,n[o],r[o]);else n&&Y(e,t,n,r);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function te(e){return ee(e,!0)}function ne(e){return ee(e,!1)}var re={injectEventPluginOrder:$,injectEventPluginsByName:K};function oe(e,t){var n=e.stateNode;if(!n)return null;var r=q(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}return e?null:(n&&"function"!=typeof n&&d("231",t,typeof n),n)}function ae(e,t,n,r){for(var o,a=0;a<U.length;a++){var i=U[a];i&&(i=i.extractEvents(e,t,n,r))&&(o=X(o,i))}return o}function ie(e){e&&(Z=X(Z,e))}function le(e){var t=Z;Z=null,t&&(J(t,e?te:ne),Z&&d("95"),D.rethrowCaughtError())}var ue=Object.freeze({injection:re,getListener:oe,extractEvents:ae,enqueueEvents:ie,processEventQueue:le}),se=Math.random().toString(36).slice(2),ce="__reactInternalInstance$"+se,fe="__reactEventHandlers$"+se;function pe(e){if(e[ce])return e[ce];for(var t=[];!e[ce];){if(t.push(e),!e.parentNode)return null;e=e.parentNode}var n=void 0,r=e[ce];if(5===r.tag||6===r.tag)return r;for(;e&&(r=e[ce]);e=t.pop())n=r;return n}function de(e){if(5===e.tag||6===e.tag)return e.stateNode;d("33")}function he(e){return e[fe]||null}var me=Object.freeze({precacheFiberNode:function(e,t){t[ce]=e},getClosestInstanceFromNode:pe,getInstanceFromNode:function(e){return!(e=e[ce])||5!==e.tag&&6!==e.tag?null:e},getNodeFromInstance:de,getFiberCurrentPropsFromNode:he,updateFiberProps:function(e,t){e[fe]=t}});function ge(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function ve(e,t,n){for(var r=[];e;)r.push(e),e=ge(e);for(e=r.length;0<e--;)t(r[e],"captured",n);for(e=0;e<r.length;e++)t(r[e],"bubbled",n)}function ye(e,t,n){(t=oe(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=X(n._dispatchListeners,t),n._dispatchInstances=X(n._dispatchInstances,e))}function be(e){e&&e.dispatchConfig.phasedRegistrationNames&&ve(e._targetInst,ye,e)}function we(e){if(e&&e.dispatchConfig.phasedRegistrationNames){var t=e._targetInst;ve(t=t?ge(t):null,ye,e)}}function ke(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=oe(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=X(n._dispatchListeners,t),n._dispatchInstances=X(n._dispatchInstances,e))}function _e(e){e&&e.dispatchConfig.registrationName&&ke(e._targetInst,null,e)}function Ce(e){J(e,be)}function xe(e,t,n,r){if(n&&r)e:{for(var o=n,a=r,i=0,l=o;l;l=ge(l))i++;l=0;for(var u=a;u;u=ge(u))l++;for(;0<i-l;)o=ge(o),i--;for(;0<l-i;)a=ge(a),l--;for(;i--;){if(o===a||o===a.alternate)break e;o=ge(o),a=ge(a)}o=null}else o=null;for(a=o,o=[];n&&n!==a&&(null===(i=n.alternate)||i!==a);)o.push(n),n=ge(n);for(n=[];r&&r!==a&&(null===(i=r.alternate)||i!==a);)n.push(r),r=ge(r);for(r=0;r<o.length;r++)ke(o[r],"bubbled",e);for(e=n.length;0<e--;)ke(n[e],"captured",t)}var Ee=Object.freeze({accumulateTwoPhaseDispatches:Ce,accumulateTwoPhaseDispatchesSkipTarget:function(e){J(e,we)},accumulateEnterLeaveDispatches:xe,accumulateDirectDispatches:function(e){J(e,_e)}}),Te=null;function Se(){return!Te&&o.canUseDOM&&(Te="textContent"in document.documentElement?"textContent":"innerText"),Te}var Oe={_root:null,_startText:null,_fallbackText:null};function Pe(){if(Oe._fallbackText)return Oe._fallbackText;var e,t,n=Oe._startText,r=n.length,o=Ne(),a=o.length;for(e=0;e<r&&n[e]===o[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===o[a-t];t++);return Oe._fallbackText=o.slice(e,1<t?1-t:void 0),Oe._fallbackText}function Ne(){return"value"in Oe._root?Oe._root.value:Oe._root[Se()]}var je="dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances".split(" "),Ie={type:null,target:null,currentTarget:i.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};function Me(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?i.thatReturnsTrue:i.thatReturnsFalse,this.isPropagationStopped=i.thatReturnsFalse,this}function De(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function Re(e){e instanceof this||d("223"),e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function Ae(e){e.eventPool=[],e.getPooled=De,e.release=Re}function Le(e,t,n,r){return Me.call(this,e,t,n,r)}function Fe(e,t,n,r){return Me.call(this,e,t,n,r)}a(Me.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=i.thatReturnsTrue)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=i.thatReturnsTrue)},persist:function(){this.isPersistent=i.thatReturnsTrue},isPersistent:i.thatReturnsFalse,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;for(t=0;t<je.length;t++)this[je[t]]=null}}),Me.Interface=Ie,Me.augmentClass=function(e,t){function n(){}n.prototype=this.prototype;var r=new n;a(r,e.prototype),e.prototype=r,e.prototype.constructor=e,e.Interface=a({},this.Interface,t),e.augmentClass=this.augmentClass,Ae(e)},Ae(Me),Me.augmentClass(Le,{data:null}),Me.augmentClass(Fe,{data:null});var He,Ue=[9,13,27,32],ze=o.canUseDOM&&"CompositionEvent"in window,Ve=null;if(o.canUseDOM&&"documentMode"in document&&(Ve=document.documentMode),He=o.canUseDOM&&"TextEvent"in window&&!Ve){var Be=window.opera;He=!("object"==typeof Be&&"function"==typeof Be.version&&12>=parseInt(Be.version(),10))}var $e=He,Ke=o.canUseDOM&&(!ze||Ve&&8<Ve&&11>=Ve),We=String.fromCharCode(32),qe={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["topCompositionEnd","topKeyPress","topTextInput","topPaste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"topBlur topCompositionEnd topKeyDown topKeyPress topKeyUp topMouseDown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"topBlur topCompositionStart topKeyDown topKeyPress topKeyUp topMouseDown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"topBlur topCompositionUpdate topKeyDown topKeyPress topKeyUp topMouseDown".split(" ")}},Ge=!1;function Qe(e,t){switch(e){case"topKeyUp":return-1!==Ue.indexOf(t.keyCode);case"topKeyDown":return 229!==t.keyCode;case"topKeyPress":case"topMouseDown":case"topBlur":return!0;default:return!1}}function Ye(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Xe=!1;var Je={eventTypes:qe,extractEvents:function(e,t,n,r){var o;if(ze)e:{switch(e){case"topCompositionStart":var a=qe.compositionStart;break e;case"topCompositionEnd":a=qe.compositionEnd;break e;case"topCompositionUpdate":a=qe.compositionUpdate;break e}a=void 0}else Xe?Qe(e,n)&&(a=qe.compositionEnd):"topKeyDown"===e&&229===n.keyCode&&(a=qe.compositionStart);return a?(Ke&&(Xe||a!==qe.compositionStart?a===qe.compositionEnd&&Xe&&(o=Pe()):(Oe._root=r,Oe._startText=Ne(),Xe=!0)),a=Le.getPooled(a,t,n,r),o?a.data=o:null!==(o=Ye(n))&&(a.data=o),Ce(a),o=a):o=null,(e=$e?function(e,t){switch(e){case"topCompositionEnd":return Ye(t);case"topKeyPress":return 32!==t.which?null:(Ge=!0,We);case"topTextInput":return(e=t.data)===We&&Ge?null:e;default:return null}}(e,n):function(e,t){if(Xe)return"topCompositionEnd"===e||!ze&&Qe(e,t)?(e=Pe(),Oe._root=null,Oe._startText=null,Oe._fallbackText=null,Xe=!1,e):null;switch(e){case"topPaste":return null;case"topKeyPress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"topCompositionEnd":return Ke?null:t.data;default:return null}}(e,n))?((t=Fe.getPooled(qe.beforeInput,t,n,r)).data=e,Ce(t)):t=null,[o,t]}},Ze=null,et=null,tt=null;function nt(e){if(e=G(e)){Ze&&"function"==typeof Ze.restoreControlledState||d("194");var t=q(e.stateNode);Ze.restoreControlledState(e.stateNode,e.type,t)}}var rt={injectFiberControlledHostComponent:function(e){Ze=e}};function ot(e){et?tt?tt.push(e):tt=[e]:et=e}function at(){if(et){var e=et,t=tt;if(tt=et=null,nt(e),t)for(e=0;e<t.length;e++)nt(t[e])}}var it=Object.freeze({injection:rt,enqueueStateRestore:ot,restoreStateIfNeeded:at});function lt(e,t){return e(t)}var ut=!1;function st(e,t){if(ut)return lt(e,t);ut=!0;try{return lt(e,t)}finally{ut=!1,at()}}var ct,ft={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function pt(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!ft[e.type]:"textarea"===t}function dt(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function ht(e,t){if(!o.canUseDOM||t&&!("addEventListener"in document))return!1;var n=(t="on"+e)in document;return n||((n=document.createElement("div")).setAttribute(t,"return;"),n="function"==typeof n[t]),!n&&ct&&"wheel"===e&&(n=document.implementation.hasFeature("Events.wheel","3.0")),n}function mt(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function gt(e){e._valueTracker||(e._valueTracker=function(e){var t=mt(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&"function"==typeof n.get&&"function"==typeof n.set)return Object.defineProperty(e,t,{enumerable:n.enumerable,configurable:!0,get:function(){return n.get.call(this)},set:function(e){r=""+e,n.set.call(this,e)}}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}(e))}function vt(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=mt(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}o.canUseDOM&&(ct=document.implementation&&document.implementation.hasFeature&&!0!==document.implementation.hasFeature("",""));var yt={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"topBlur topChange topClick topFocus topInput topKeyDown topKeyUp topSelectionChange".split(" ")}};function bt(e,t,n){return(e=Me.getPooled(yt.change,e,t,n)).type="change",ot(n),Ce(e),e}var wt=null,kt=null;function _t(e){ie(e),le(!1)}function Ct(e){if(vt(de(e)))return e}function xt(e,t){if("topChange"===e)return t}var Et=!1;function Tt(){wt&&(wt.detachEvent("onpropertychange",St),kt=wt=null)}function St(e){"value"===e.propertyName&&Ct(kt)&&st(_t,e=bt(kt,e,dt(e)))}function Ot(e,t,n){"topFocus"===e?(Tt(),kt=n,(wt=t).attachEvent("onpropertychange",St)):"topBlur"===e&&Tt()}function Pt(e){if("topSelectionChange"===e||"topKeyUp"===e||"topKeyDown"===e)return Ct(kt)}function Nt(e,t){if("topClick"===e)return Ct(t)}function jt(e,t){if("topInput"===e||"topChange"===e)return Ct(t)}o.canUseDOM&&(Et=ht("input")&&(!document.documentMode||9<document.documentMode));var It={eventTypes:yt,_isInputEventSupported:Et,extractEvents:function(e,t,n,r){var o=t?de(t):window,a=o.nodeName&&o.nodeName.toLowerCase();if("select"===a||"input"===a&&"file"===o.type)var i=xt;else if(pt(o))if(Et)i=jt;else{i=Pt;var l=Ot}else!(a=o.nodeName)||"input"!==a.toLowerCase()||"checkbox"!==o.type&&"radio"!==o.type||(i=Nt);if(i&&(i=i(e,t)))return bt(i,n,r);l&&l(e,o,t),"topBlur"===e&&null!=t&&(e=t._wrapperState||o._wrapperState)&&e.controlled&&"number"===o.type&&(e=""+o.value,o.getAttribute("value")!==e&&o.setAttribute("value",e))}};function Mt(e,t,n,r){return Me.call(this,e,t,n,r)}Me.augmentClass(Mt,{view:null,detail:null});var Dt={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Rt(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Dt[e])&&!!t[e]}function At(){return Rt}function Lt(e,t,n,r){return Me.call(this,e,t,n,r)}Mt.augmentClass(Lt,{screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:At,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)}});var Ft={mouseEnter:{registrationName:"onMouseEnter",dependencies:["topMouseOut","topMouseOver"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["topMouseOut","topMouseOver"]}},Ht={eventTypes:Ft,extractEvents:function(e,t,n,r){if("topMouseOver"===e&&(n.relatedTarget||n.fromElement)||"topMouseOut"!==e&&"topMouseOver"!==e)return null;var o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window;if("topMouseOut"===e?(e=t,t=(t=n.relatedTarget||n.toElement)?pe(t):null):e=null,e===t)return null;var a=null==e?o:de(e);o=null==t?o:de(t);var i=Lt.getPooled(Ft.mouseLeave,e,n,r);return i.type="mouseleave",i.target=a,i.relatedTarget=o,(n=Lt.getPooled(Ft.mouseEnter,t,n,r)).type="mouseenter",n.target=o,n.relatedTarget=a,xe(i,n,e,t),[i,n]}},Ut=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner;function zt(e){return"string"==typeof(e=e.type)?e:"function"==typeof e?e.displayName||e.name:null}function Vt(e){var t=e;if(e.alternate)for(;t.return;)t=t.return;else{if(0!=(2&t.effectTag))return 1;for(;t.return;)if(0!=(2&(t=t.return).effectTag))return 1}return 3===t.tag?2:3}function Bt(e){return!!(e=e._reactInternalFiber)&&2===Vt(e)}function $t(e){2!==Vt(e)&&d("188")}function Kt(e){var t=e.alternate;if(!t)return 3===(t=Vt(e))&&d("188"),1===t?null:e;for(var n=e,r=t;;){var o=n.return,a=o?o.alternate:null;if(!o||!a)break;if(o.child===a.child){for(var i=o.child;i;){if(i===n)return $t(o),e;if(i===r)return $t(o),t;i=i.sibling}d("188")}if(n.return!==r.return)n=o,r=a;else{i=!1;for(var l=o.child;l;){if(l===n){i=!0,n=o,r=a;break}if(l===r){i=!0,r=o,n=a;break}l=l.sibling}if(!i){for(l=a.child;l;){if(l===n){i=!0,n=a,r=o;break}if(l===r){i=!0,r=a,n=o;break}l=l.sibling}i||d("189")}}n.alternate!==r&&d("190")}return 3!==n.tag&&d("188"),n.stateNode.current===n?e:t}var Wt=[];function qt(e){var t=e.targetInst;do{if(!t){e.ancestors.push(t);break}var n;for(n=t;n.return;)n=n.return;if(!(n=3!==n.tag?null:n.stateNode.containerInfo))break;e.ancestors.push(t),t=pe(n)}while(t);for(n=0;n<e.ancestors.length;n++)t=e.ancestors[n],Qt(e.topLevelType,t,e.nativeEvent,dt(e.nativeEvent))}var Gt=!0,Qt=void 0;function Yt(e){Gt=!!e}function Xt(e,t,n){return n?l.listen(n,t,Zt.bind(null,e)):null}function Jt(e,t,n){return n?l.capture(n,t,Zt.bind(null,e)):null}function Zt(e,t){if(Gt){var n=dt(t);if(null===(n=pe(n))||"number"!=typeof n.tag||2===Vt(n)||(n=null),Wt.length){var r=Wt.pop();r.topLevelType=e,r.nativeEvent=t,r.targetInst=n,e=r}else e={topLevelType:e,nativeEvent:t,targetInst:n,ancestors:[]};try{st(qt,e)}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>Wt.length&&Wt.push(e)}}}var en=Object.freeze({get _enabled(){return Gt},get _handleTopLevel(){return Qt},setHandleTopLevel:function(e){Qt=e},setEnabled:Yt,isEnabled:function(){return Gt},trapBubbledEvent:Xt,trapCapturedEvent:Jt,dispatchEvent:Zt});function tn(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n["ms"+e]="MS"+t,n["O"+e]="o"+t.toLowerCase(),n}var nn={animationend:tn("Animation","AnimationEnd"),animationiteration:tn("Animation","AnimationIteration"),animationstart:tn("Animation","AnimationStart"),transitionend:tn("Transition","TransitionEnd")},rn={},on={};function an(e){if(rn[e])return rn[e];if(!nn[e])return e;var t,n=nn[e];for(t in n)if(n.hasOwnProperty(t)&&t in on)return rn[e]=n[t];return""}o.canUseDOM&&(on=document.createElement("div").style,"AnimationEvent"in window||(delete nn.animationend.animation,delete nn.animationiteration.animation,delete nn.animationstart.animation),"TransitionEvent"in window||delete nn.transitionend.transition);var ln={topAbort:"abort",topAnimationEnd:an("animationend")||"animationend",topAnimationIteration:an("animationiteration")||"animationiteration",topAnimationStart:an("animationstart")||"animationstart",topBlur:"blur",topCancel:"cancel",topCanPlay:"canplay",topCanPlayThrough:"canplaythrough",topChange:"change",topClick:"click",topClose:"close",topCompositionEnd:"compositionend",topCompositionStart:"compositionstart",topCompositionUpdate:"compositionupdate",topContextMenu:"contextmenu",topCopy:"copy",topCut:"cut",topDoubleClick:"dblclick",topDrag:"drag",topDragEnd:"dragend",topDragEnter:"dragenter",topDragExit:"dragexit",topDragLeave:"dragleave",topDragOver:"dragover",topDragStart:"dragstart",topDrop:"drop",topDurationChange:"durationchange",topEmptied:"emptied",topEncrypted:"encrypted",topEnded:"ended",topError:"error",topFocus:"focus",topInput:"input",topKeyDown:"keydown",topKeyPress:"keypress",topKeyUp:"keyup",topLoadedData:"loadeddata",topLoad:"load",topLoadedMetadata:"loadedmetadata",topLoadStart:"loadstart",topMouseDown:"mousedown",topMouseMove:"mousemove",topMouseOut:"mouseout",topMouseOver:"mouseover",topMouseUp:"mouseup",topPaste:"paste",topPause:"pause",topPlay:"play",topPlaying:"playing",topProgress:"progress",topRateChange:"ratechange",topScroll:"scroll",topSeeked:"seeked",topSeeking:"seeking",topSelectionChange:"selectionchange",topStalled:"stalled",topSuspend:"suspend",topTextInput:"textInput",topTimeUpdate:"timeupdate",topToggle:"toggle",topTouchCancel:"touchcancel",topTouchEnd:"touchend",topTouchMove:"touchmove",topTouchStart:"touchstart",topTransitionEnd:an("transitionend")||"transitionend",topVolumeChange:"volumechange",topWaiting:"waiting",topWheel:"wheel"},un={},sn=0,cn="_reactListenersID"+(""+Math.random()).slice(2);function fn(e){return Object.prototype.hasOwnProperty.call(e,cn)||(e[cn]=sn++,un[e[cn]]={}),un[e[cn]]}function pn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function dn(e,t){var n,r=pn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=pn(r)}}function hn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&"text"===e.type||"textarea"===t||"true"===e.contentEditable)}var mn=o.canUseDOM&&"documentMode"in document&&11>=document.documentMode,gn={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"topBlur topContextMenu topFocus topKeyDown topKeyUp topMouseDown topMouseUp topSelectionChange".split(" ")}},vn=null,yn=null,bn=null,wn=!1;function kn(e,t){if(wn||null==vn||vn!==u())return null;var n=vn;return"selectionStart"in n&&hn(n)?n={start:n.selectionStart,end:n.selectionEnd}:window.getSelection?n={anchorNode:(n=window.getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset}:n=void 0,bn&&s(bn,n)?null:(bn=n,(e=Me.getPooled(gn.select,yn,e,t)).type="select",e.target=vn,Ce(e),e)}var _n={eventTypes:gn,extractEvents:function(e,t,n,r){var o,a=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(o=!a)){e:{a=fn(a),o=B.onSelect;for(var i=0;i<o.length;i++){var l=o[i];if(!a.hasOwnProperty(l)||!a[l]){a=!1;break e}}a=!0}o=!a}if(o)return null;switch(a=t?de(t):window,e){case"topFocus":(pt(a)||"true"===a.contentEditable)&&(vn=a,yn=t,bn=null);break;case"topBlur":bn=yn=vn=null;break;case"topMouseDown":wn=!0;break;case"topContextMenu":case"topMouseUp":return wn=!1,kn(n,r);case"topSelectionChange":if(mn)break;case"topKeyDown":case"topKeyUp":return kn(n,r)}return null}};function Cn(e,t,n,r){return Me.call(this,e,t,n,r)}function xn(e,t,n,r){return Me.call(this,e,t,n,r)}function En(e,t,n,r){return Me.call(this,e,t,n,r)}function Tn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,32<=e||13===e?e:0}Me.augmentClass(Cn,{animationName:null,elapsedTime:null,pseudoElement:null}),Me.augmentClass(xn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Mt.augmentClass(En,{relatedTarget:null});var Sn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},On={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"};function Pn(e,t,n,r){return Me.call(this,e,t,n,r)}function Nn(e,t,n,r){return Me.call(this,e,t,n,r)}function jn(e,t,n,r){return Me.call(this,e,t,n,r)}function In(e,t,n,r){return Me.call(this,e,t,n,r)}function Mn(e,t,n,r){return Me.call(this,e,t,n,r)}Mt.augmentClass(Pn,{key:function(e){if(e.key){var t=Sn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=Tn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?On[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:At,charCode:function(e){return"keypress"===e.type?Tn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?Tn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Lt.augmentClass(Nn,{dataTransfer:null}),Mt.augmentClass(jn,{touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:At}),Me.augmentClass(In,{propertyName:null,elapsedTime:null,pseudoElement:null}),Lt.augmentClass(Mn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null});var Dn={},Rn={};"abort animationEnd animationIteration animationStart blur cancel canPlay canPlayThrough click close contextMenu copy cut doubleClick drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error focus input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing progress rateChange reset scroll seeked seeking stalled submit suspend timeUpdate toggle touchCancel touchEnd touchMove touchStart transitionEnd volumeChange waiting wheel".split(" ").forEach(function(e){var t=e[0].toUpperCase()+e.slice(1),n="on"+t;n={phasedRegistrationNames:{bubbled:n,captured:n+"Capture"},dependencies:[t="top"+t]},Dn[e]=n,Rn[t]=n});var An={eventTypes:Dn,extractEvents:function(e,t,n,r){var o=Rn[e];if(!o)return null;switch(e){case"topKeyPress":if(0===Tn(n))return null;case"topKeyDown":case"topKeyUp":e=Pn;break;case"topBlur":case"topFocus":e=En;break;case"topClick":if(2===n.button)return null;case"topDoubleClick":case"topMouseDown":case"topMouseMove":case"topMouseUp":case"topMouseOut":case"topMouseOver":case"topContextMenu":e=Lt;break;case"topDrag":case"topDragEnd":case"topDragEnter":case"topDragExit":case"topDragLeave":case"topDragOver":case"topDragStart":case"topDrop":e=Nn;break;case"topTouchCancel":case"topTouchEnd":case"topTouchMove":case"topTouchStart":e=jn;break;case"topAnimationEnd":case"topAnimationIteration":case"topAnimationStart":e=Cn;break;case"topTransitionEnd":e=In;break;case"topScroll":e=Mt;break;case"topWheel":e=Mn;break;case"topCopy":case"topCut":case"topPaste":e=xn;break;default:e=Me}return Ce(t=e.getPooled(o,t,n,r)),t}};Qt=function(e,t,n,r){ie(e=ae(e,t,n,r)),le(!1)},re.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),q=me.getFiberCurrentPropsFromNode,G=me.getInstanceFromNode,Q=me.getNodeFromInstance,re.injectEventPluginsByName({SimpleEventPlugin:An,EnterLeaveEventPlugin:Ht,ChangeEventPlugin:It,SelectEventPlugin:_n,BeforeInputEventPlugin:Je});var Ln=[],Fn=-1;function Hn(e){0>Fn||(e.current=Ln[Fn],Ln[Fn]=null,Fn--)}function Un(e,t){Ln[++Fn]=e.current,e.current=t}new Set;var zn={current:p},Vn={current:!1},Bn=p;function $n(e){return Wn(e)?Bn:zn.current}function Kn(e,t){var n=e.type.contextTypes;if(!n)return p;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,a={};for(o in n)a[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function Wn(e){return 2===e.tag&&null!=e.type.childContextTypes}function qn(e){Wn(e)&&(Hn(Vn),Hn(zn))}function Gn(e,t,n){null!=zn.cursor&&d("168"),Un(zn,t),Un(Vn,n)}function Qn(e,t){var n=e.stateNode,r=e.type.childContextTypes;if("function"!=typeof n.getChildContext)return t;for(var o in n=n.getChildContext())o in r||d("108",zt(e)||"Unknown",o);return a({},t,n)}function Yn(e){if(!Wn(e))return!1;var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||p,Bn=zn.current,Un(zn,t),Un(Vn,Vn.current),!0}function Xn(e,t){var n=e.stateNode;if(n||d("169"),t){var r=Qn(e,Bn);n.__reactInternalMemoizedMergedChildContext=r,Hn(Vn),Hn(zn),Un(zn,r)}else Hn(Vn);Un(Vn,t)}function Jn(e,t,n){this.tag=e,this.key=t,this.stateNode=this.type=null,this.sibling=this.child=this.return=null,this.index=0,this.memoizedState=this.updateQueue=this.memoizedProps=this.pendingProps=this.ref=null,this.internalContextTag=n,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.expirationTime=0,this.alternate=null}function Zn(e,t,n){var r=e.alternate;return null===r?((r=new Jn(e.tag,e.key,e.internalContextTag)).type=e.type,r.stateNode=e.stateNode,r.alternate=e,e.alternate=r):(r.effectTag=0,r.nextEffect=null,r.firstEffect=null,r.lastEffect=null),r.expirationTime=n,r.pendingProps=t,r.child=e.child,r.memoizedProps=e.memoizedProps,r.memoizedState=e.memoizedState,r.updateQueue=e.updateQueue,r.sibling=e.sibling,r.index=e.index,r.ref=e.ref,r}function er(e,t,n){var r=void 0,o=e.type,a=e.key;return"function"==typeof o?((r=o.prototype&&o.prototype.isReactComponent?new Jn(2,a,t):new Jn(0,a,t)).type=o,r.pendingProps=e.props):"string"==typeof o?((r=new Jn(5,a,t)).type=o,r.pendingProps=e.props):"object"==typeof o&&null!==o&&"number"==typeof o.tag?(r=o).pendingProps=e.props:d("130",null==o?o:typeof o,""),r.expirationTime=n,r}function tr(e,t,n,r){return(t=new Jn(10,r,t)).pendingProps=e,t.expirationTime=n,t}function nr(e,t,n){return(t=new Jn(6,null,t)).pendingProps=e,t.expirationTime=n,t}function rr(e,t,n){return(t=new Jn(7,e.key,t)).type=e.handler,t.pendingProps=e,t.expirationTime=n,t}function or(e,t,n){return(e=new Jn(9,null,t)).expirationTime=n,e}function ar(e,t,n){return(t=new Jn(4,e.key,t)).pendingProps=e.children||[],t.expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}var ir=null,lr=null;function ur(e){return function(t){try{return e(t)}catch(e){}}}function sr(e){"function"==typeof ir&&ir(e)}function cr(e){"function"==typeof lr&&lr(e)}function fr(e){return{baseState:e,expirationTime:0,first:null,last:null,callbackList:null,hasForceUpdate:!1,isInitialized:!1}}function pr(e,t){null===e.last?e.first=e.last=t:(e.last.next=t,e.last=t),(0===e.expirationTime||e.expirationTime>t.expirationTime)&&(e.expirationTime=t.expirationTime)}function dr(e,t){var n=e.alternate,r=e.updateQueue;null===r&&(r=e.updateQueue=fr(null)),null!==n?null===(e=n.updateQueue)&&(e=n.updateQueue=fr(null)):e=null,null===(e=e!==r?e:null)?pr(r,t):null===r.last||null===e.last?(pr(r,t),pr(e,t)):(pr(r,t),e.last=t)}function hr(e,t,n,r){return"function"==typeof(e=e.partialState)?e.call(t,n,r):e}function mr(e,t,n,r,o,i){null!==e&&e.updateQueue===n&&(n=t.updateQueue={baseState:n.baseState,expirationTime:n.expirationTime,first:n.first,last:n.last,isInitialized:n.isInitialized,callbackList:null,hasForceUpdate:!1}),n.expirationTime=0,n.isInitialized?e=n.baseState:(e=n.baseState=t.memoizedState,n.isInitialized=!0);for(var l=!0,u=n.first,s=!1;null!==u;){var c=u.expirationTime;if(c>i){var f=n.expirationTime;(0===f||f>c)&&(n.expirationTime=c),s||(s=!0,n.baseState=e)}else s||(n.first=u.next,null===n.first&&(n.last=null)),u.isReplace?(e=hr(u,r,e,o),l=!0):(c=hr(u,r,e,o))&&(e=l?a({},e,c):a(e,c),l=!1),u.isForced&&(n.hasForceUpdate=!0),null!==u.callback&&(null===(c=n.callbackList)&&(c=n.callbackList=[]),c.push(u));u=u.next}return null!==n.callbackList?t.effectTag|=32:null!==n.first||n.hasForceUpdate||(t.updateQueue=null),s||(n.baseState=e),e}function gr(e,t){var n=e.callbackList;if(null!==n)for(e.callbackList=null,e=0;e<n.length;e++){var r=n[e],o=r.callback;r.callback=null,"function"!=typeof o&&d("191",o),o.call(t)}}var vr="function"==typeof Symbol&&Symbol.for,yr=vr?Symbol.for("react.element"):60103,br=vr?Symbol.for("react.call"):60104,wr=vr?Symbol.for("react.return"):60105,kr=vr?Symbol.for("react.portal"):60106,_r=vr?Symbol.for("react.fragment"):60107,Cr="function"==typeof Symbol&&Symbol.iterator;function xr(e){return null===e||void 0===e?null:"function"==typeof(e=Cr&&e[Cr]||e["@@iterator"])?e:null}var Er=Array.isArray;function Tr(e,t){var n=t.ref;if(null!==n&&"function"!=typeof n){if(t._owner){var r=void 0;(t=t._owner)&&(2!==t.tag&&d("110"),r=t.stateNode),r||d("147",n);var o=""+n;return null!==e&&null!==e.ref&&e.ref._stringRef===o?e.ref:((e=function(e){var t=r.refs===p?r.refs={}:r.refs;null===e?delete t[o]:t[o]=e})._stringRef=o,e)}"string"!=typeof n&&d("148"),t._owner||d("149",n)}return n}function Sr(e,t){"textarea"!==e.type&&d("31","[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,"")}function Or(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t,n){return(e=Zn(e,t,n)).index=0,e.sibling=null,e}function a(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function i(t){return e&&null===t.alternate&&(t.effectTag=2),t}function l(e,t,n,r){return null===t||6!==t.tag?((t=nr(n,e.internalContextTag,r)).return=e,t):((t=o(t,n,r)).return=e,t)}function u(e,t,n,r){return null!==t&&t.type===n.type?((r=o(t,n.props,r)).ref=Tr(t,n),r.return=e,r):((r=er(n,e.internalContextTag,r)).ref=Tr(t,n),r.return=e,r)}function s(e,t,n,r){return null===t||7!==t.tag?((t=rr(n,e.internalContextTag,r)).return=e,t):((t=o(t,n,r)).return=e,t)}function c(e,t,n,r){return null===t||9!==t.tag?((t=or(n,e.internalContextTag,r)).type=n.value,t.return=e,t):((t=o(t,null,r)).type=n.value,t.return=e,t)}function f(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=ar(n,e.internalContextTag,r)).return=e,t):((t=o(t,n.children||[],r)).return=e,t)}function p(e,t,n,r,a){return null===t||10!==t.tag?((t=tr(n,e.internalContextTag,r,a)).return=e,t):((t=o(t,n,r)).return=e,t)}function h(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=nr(""+t,e.internalContextTag,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case yr:return t.type===_r?((t=tr(t.props.children,e.internalContextTag,n,t.key)).return=e,t):((n=er(t,e.internalContextTag,n)).ref=Tr(null,t),n.return=e,n);case br:return(t=rr(t,e.internalContextTag,n)).return=e,t;case wr:return(n=or(t,e.internalContextTag,n)).type=t.value,n.return=e,n;case kr:return(t=ar(t,e.internalContextTag,n)).return=e,t}if(Er(t)||xr(t))return(t=tr(t,e.internalContextTag,n,null)).return=e,t;Sr(e,t)}return null}function m(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:l(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case yr:return n.key===o?n.type===_r?p(e,t,n.props.children,r,o):u(e,t,n,r):null;case br:return n.key===o?s(e,t,n,r):null;case wr:return null===o?c(e,t,n,r):null;case kr:return n.key===o?f(e,t,n,r):null}if(Er(n)||xr(n))return null!==o?null:p(e,t,n,r,null);Sr(e,n)}return null}function g(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return l(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case yr:return e=e.get(null===r.key?n:r.key)||null,r.type===_r?p(t,e,r.props.children,o,r.key):u(t,e,r,o);case br:return s(t,e=e.get(null===r.key?n:r.key)||null,r,o);case wr:return c(t,e=e.get(n)||null,r,o);case kr:return f(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(Er(r)||xr(r))return p(t,e=e.get(n)||null,r,o,null);Sr(t,r)}return null}function v(o,i,l,u){for(var s=null,c=null,f=i,p=i=0,d=null;null!==f&&p<l.length;p++){f.index>p?(d=f,f=null):d=f.sibling;var v=m(o,f,l[p],u);if(null===v){null===f&&(f=d);break}e&&f&&null===v.alternate&&t(o,f),i=a(v,i,p),null===c?s=v:c.sibling=v,c=v,f=d}if(p===l.length)return n(o,f),s;if(null===f){for(;p<l.length;p++)(f=h(o,l[p],u))&&(i=a(f,i,p),null===c?s=f:c.sibling=f,c=f);return s}for(f=r(o,f);p<l.length;p++)(d=g(f,o,p,l[p],u))&&(e&&null!==d.alternate&&f.delete(null===d.key?p:d.key),i=a(d,i,p),null===c?s=d:c.sibling=d,c=d);return e&&f.forEach(function(e){return t(o,e)}),s}function y(o,i,l,u){var s=xr(l);"function"!=typeof s&&d("150"),null==(l=s.call(l))&&d("151");for(var c=s=null,f=i,p=i=0,v=null,y=l.next();null!==f&&!y.done;p++,y=l.next()){f.index>p?(v=f,f=null):v=f.sibling;var b=m(o,f,y.value,u);if(null===b){f||(f=v);break}e&&f&&null===b.alternate&&t(o,f),i=a(b,i,p),null===c?s=b:c.sibling=b,c=b,f=v}if(y.done)return n(o,f),s;if(null===f){for(;!y.done;p++,y=l.next())null!==(y=h(o,y.value,u))&&(i=a(y,i,p),null===c?s=y:c.sibling=y,c=y);return s}for(f=r(o,f);!y.done;p++,y=l.next())null!==(y=g(f,o,p,y.value,u))&&(e&&null!==y.alternate&&f.delete(null===y.key?p:y.key),i=a(y,i,p),null===c?s=y:c.sibling=y,c=y);return e&&f.forEach(function(e){return t(o,e)}),s}return function(e,r,a,l){"object"==typeof a&&null!==a&&a.type===_r&&null===a.key&&(a=a.props.children);var u="object"==typeof a&&null!==a;if(u)switch(a.$$typeof){case yr:e:{var s=a.key;for(u=r;null!==u;){if(u.key===s){if(10===u.tag?a.type===_r:u.type===a.type){n(e,u.sibling),(r=o(u,a.type===_r?a.props.children:a.props,l)).ref=Tr(u,a),r.return=e,e=r;break e}n(e,u);break}t(e,u),u=u.sibling}a.type===_r?((r=tr(a.props.children,e.internalContextTag,l,a.key)).return=e,e=r):((l=er(a,e.internalContextTag,l)).ref=Tr(r,a),l.return=e,e=l)}return i(e);case br:e:{for(u=a.key;null!==r;){if(r.key===u){if(7===r.tag){n(e,r.sibling),(r=o(r,a,l)).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=rr(a,e.internalContextTag,l)).return=e,e=r}return i(e);case wr:e:{if(null!==r){if(9===r.tag){n(e,r.sibling),(r=o(r,null,l)).type=a.value,r.return=e,e=r;break e}n(e,r)}(r=or(a,e.internalContextTag,l)).type=a.value,r.return=e,e=r}return i(e);case kr:e:{for(u=a.key;null!==r;){if(r.key===u){if(4===r.tag&&r.stateNode.containerInfo===a.containerInfo&&r.stateNode.implementation===a.implementation){n(e,r.sibling),(r=o(r,a.children||[],l)).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=ar(a,e.internalContextTag,l)).return=e,e=r}return i(e)}if("string"==typeof a||"number"==typeof a)return a=""+a,null!==r&&6===r.tag?(n(e,r.sibling),r=o(r,a,l)):(n(e,r),r=nr(a,e.internalContextTag,l)),r.return=e,i(e=r);if(Er(a))return v(e,r,a,l);if(xr(a))return y(e,r,a,l);if(u&&Sr(e,a),void 0===a)switch(e.tag){case 2:case 1:d("152",(l=e.type).displayName||l.name||"Component")}return n(e,r)}}var Pr=Or(!0),Nr=Or(!1);function jr(e,t,n,r,o){function a(e,t,n){var r=t.expirationTime;t.child=null===e?Nr(t,null,n,r):Pr(t,e.child,n,r)}function i(e,t){var n=t.ref;null===n||e&&e.ref===n||(t.effectTag|=128)}function l(e,t,n,r){if(i(e,t),!n)return r&&Xn(t,!1),c(e,t);n=t.stateNode,Ut.current=t;var o=n.render();return t.effectTag|=1,a(e,t,o),t.memoizedState=n.state,t.memoizedProps=n.props,r&&Xn(t,!0),t.child}function u(e){var t=e.stateNode;t.pendingContext?Gn(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Gn(0,t.context,!1),y(e,t.containerInfo)}function c(e,t){if(null!==e&&t.child!==e.child&&d("153"),null!==t.child){var n=Zn(e=t.child,e.pendingProps,e.expirationTime);for(t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Zn(e,e.pendingProps,e.expirationTime)).return=t;n.sibling=null}return t.child}function f(e,t){switch(t.tag){case 3:u(t);break;case 2:Yn(t);break;case 4:y(t,t.stateNode.containerInfo)}return null}var h=e.shouldSetTextContent,m=e.useSyncScheduling,g=e.shouldDeprioritizeSubtree,v=t.pushHostContext,y=t.pushHostContainer,b=n.enterHydrationState,w=n.resetHydrationState,k=n.tryToClaimNextHydratableInstance,_=(e=function(e,t,n,r){function o(e,t){t.updater=a,e.stateNode=t,t._reactInternalFiber=e}var a={isMounted:Bt,enqueueSetState:function(n,r,o){n=n._reactInternalFiber,o=void 0===o?null:o;var a=t(n);dr(n,{expirationTime:a,partialState:r,callback:o,isReplace:!1,isForced:!1,nextCallback:null,next:null}),e(n,a)},enqueueReplaceState:function(n,r,o){n=n._reactInternalFiber,o=void 0===o?null:o;var a=t(n);dr(n,{expirationTime:a,partialState:r,callback:o,isReplace:!0,isForced:!1,nextCallback:null,next:null}),e(n,a)},enqueueForceUpdate:function(n,r){n=n._reactInternalFiber,r=void 0===r?null:r;var o=t(n);dr(n,{expirationTime:o,partialState:null,callback:r,isReplace:!1,isForced:!0,nextCallback:null,next:null}),e(n,o)}};return{adoptClassInstance:o,constructClassInstance:function(e,t){var n=e.type,r=$n(e),a=2===e.tag&&null!=e.type.contextTypes,i=a?Kn(e,r):p;return o(e,t=new n(t,i)),a&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=r,e.__reactInternalMemoizedMaskedChildContext=i),t},mountClassInstance:function(e,t){var n=e.alternate,r=e.stateNode,o=r.state||null,i=e.pendingProps;i||d("158");var l=$n(e);r.props=i,r.state=e.memoizedState=o,r.refs=p,r.context=Kn(e,l),null!=e.type&&null!=e.type.prototype&&!0===e.type.prototype.unstable_isAsyncReactComponent&&(e.internalContextTag|=1),"function"==typeof r.componentWillMount&&(o=r.state,r.componentWillMount(),o!==r.state&&a.enqueueReplaceState(r,r.state,null),null!==(o=e.updateQueue)&&(r.state=mr(n,e,o,r,i,t))),"function"==typeof r.componentDidMount&&(e.effectTag|=4)},updateClassInstance:function(e,t,o){var i=t.stateNode;i.props=t.memoizedProps,i.state=t.memoizedState;var l=t.memoizedProps,u=t.pendingProps;u||null==(u=l)&&d("159");var c=i.context,f=$n(t);if(f=Kn(t,f),"function"!=typeof i.componentWillReceiveProps||l===u&&c===f||(c=i.state,i.componentWillReceiveProps(u,f),i.state!==c&&a.enqueueReplaceState(i,i.state,null)),c=t.memoizedState,o=null!==t.updateQueue?mr(e,t,t.updateQueue,i,u,o):c,!(l!==u||c!==o||Vn.current||null!==t.updateQueue&&t.updateQueue.hasForceUpdate))return"function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=4),!1;var p=u;if(null===l||null!==t.updateQueue&&t.updateQueue.hasForceUpdate)p=!0;else{var h=t.stateNode,m=t.type;p="function"==typeof h.shouldComponentUpdate?h.shouldComponentUpdate(p,o,f):!(m.prototype&&m.prototype.isPureReactComponent&&s(l,p)&&s(c,o))}return p?("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(u,o,f),"function"==typeof i.componentDidUpdate&&(t.effectTag|=4)):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=4),n(t,u),r(t,o)),i.props=u,i.state=o,i.context=f,p}}}(r,o,function(e,t){e.memoizedProps=t},function(e,t){e.memoizedState=t})).adoptClassInstance,C=e.constructClassInstance,x=e.mountClassInstance,E=e.updateClassInstance;return{beginWork:function(e,t,n){if(0===t.expirationTime||t.expirationTime>n)return f(0,t);switch(t.tag){case 0:null!==e&&d("155");var r=t.type,o=t.pendingProps,s=$n(t);return r=r(o,s=Kn(t,s)),t.effectTag|=1,"object"==typeof r&&null!==r&&"function"==typeof r.render?(t.tag=2,o=Yn(t),_(t,r),x(t,n),t=l(e,t,!0,o)):(t.tag=1,a(e,t,r),t.memoizedProps=o,t=t.child),t;case 1:e:{if(o=t.type,n=t.pendingProps,r=t.memoizedProps,Vn.current)null===n&&(n=r);else if(null===n||r===n){t=c(e,t);break e}o=o(n,r=Kn(t,r=$n(t))),t.effectTag|=1,a(e,t,o),t.memoizedProps=n,t=t.child}return t;case 2:return o=Yn(t),r=void 0,null===e?t.stateNode?d("153"):(C(t,t.pendingProps),x(t,n),r=!0):r=E(e,t,n),l(e,t,r,o);case 3:return u(t),null!==(o=t.updateQueue)?(r=t.memoizedState)===(o=mr(e,t,o,null,null,n))?(w(),t=c(e,t)):(r=o.element,s=t.stateNode,(null===e||null===e.child)&&s.hydrate&&b(t)?(t.effectTag|=2,t.child=Nr(t,null,r,n)):(w(),a(e,t,r)),t.memoizedState=o,t=t.child):(w(),t=c(e,t)),t;case 5:v(t),null===e&&k(t),o=t.type;var p=t.memoizedProps;return null===(r=t.pendingProps)&&(null===(r=p)&&d("154")),s=null!==e?e.memoizedProps:null,Vn.current||null!==r&&p!==r?(p=r.children,h(o,r)?p=null:s&&h(o,s)&&(t.effectTag|=16),i(e,t),2147483647!==n&&!m&&g(o,r)?(t.expirationTime=2147483647,t=null):(a(e,t,p),t.memoizedProps=r,t=t.child)):t=c(e,t),t;case 6:return null===e&&k(t),null===(e=t.pendingProps)&&(e=t.memoizedProps),t.memoizedProps=e,null;case 8:t.tag=7;case 7:return o=t.pendingProps,Vn.current?null===o&&(null===(o=e&&e.memoizedProps)&&d("154")):null!==o&&t.memoizedProps!==o||(o=t.memoizedProps),r=o.children,t.stateNode=null===e?Nr(t,t.stateNode,r,n):Pr(t,t.stateNode,r,n),t.memoizedProps=o,t.stateNode;case 9:return null;case 4:e:{if(y(t,t.stateNode.containerInfo),o=t.pendingProps,Vn.current)null===o&&(null==(o=e&&e.memoizedProps)&&d("154"));else if(null===o||t.memoizedProps===o){t=c(e,t);break e}null===e?t.child=Pr(t,null,o,n):a(e,t,o),t.memoizedProps=o,t=t.child}return t;case 10:e:{if(n=t.pendingProps,Vn.current)null===n&&(n=t.memoizedProps);else if(null===n||t.memoizedProps===n){t=c(e,t);break e}a(e,t,n),t.memoizedProps=n,t=t.child}return t;default:d("156")}},beginFailedWork:function(e,t,n){switch(t.tag){case 2:Yn(t);break;case 3:u(t);break;default:d("157")}return t.effectTag|=64,null===e?t.child=null:t.child!==e.child&&(t.child=e.child),0===t.expirationTime||t.expirationTime>n?f(0,t):(t.firstEffect=null,t.lastEffect=null,t.child=null===e?Nr(t,null,null,n):Pr(t,e.child,null,n),2===t.tag&&(e=t.stateNode,t.memoizedProps=e.props,t.memoizedState=e.state),t.child)}}}var Ir={};function Mr(e){function t(e){ie=Y=!0;var t=e.stateNode;if(t.current===e&&d("177"),t.isReadyForCommit=!1,Ut.current=null,1<e.effectTag)if(null!==e.lastEffect){e.lastEffect.nextEffect=e;var n=e.firstEffect}else n=e;else n=e.firstEffect;for(K(),ee=n;null!==ee;){var r=!1,o=void 0;try{for(;null!==ee;){var a=ee.effectTag;if(16&a&&D(ee),128&a){var i=ee.alternate;null!==i&&U(i)}switch(-242&a){case 2:R(ee),ee.effectTag&=-3;break;case 6:R(ee),ee.effectTag&=-3,L(ee.alternate,ee);break;case 4:L(ee.alternate,ee);break;case 8:le=!0,A(ee),le=!1}ee=ee.nextEffect}}catch(e){r=!0,o=e}r&&(null===ee&&d("178"),l(ee,o),null!==ee&&(ee=ee.nextEffect))}for(W(),t.current=e,ee=n;null!==ee;){n=!1,r=void 0;try{for(;null!==ee;){var u=ee.effectTag;if(36&u&&F(ee.alternate,ee),128&u&&H(ee),64&u)switch(o=ee,a=void 0,null!==te&&(a=te.get(o),te.delete(o),null==a&&null!==o.alternate&&(o=o.alternate,a=te.get(o),te.delete(o))),null==a&&d("184"),o.tag){case 2:o.stateNode.componentDidCatch(a.error,{componentStack:a.componentStack});break;case 3:null===oe&&(oe=a.error);break;default:d("157")}var s=ee.nextEffect;ee.nextEffect=null,ee=s}}catch(e){n=!0,r=e}n&&(null===ee&&d("178"),l(ee,r),null!==ee&&(ee=ee.nextEffect))}return Y=ie=!1,sr(e.stateNode),re&&(re.forEach(g),re=null),null!==oe&&(e=oe,oe=null,x(e)),0===(t=t.current.expirationTime)&&(ne=te=null),t}function n(e){for(;;){var t=M(e.alternate,e,Z),n=e.return,r=e.sibling,o=e;if(2147483647===Z||2147483647!==o.expirationTime){if(2!==o.tag&&3!==o.tag)var a=0;else a=null===(a=o.updateQueue)?0:a.expirationTime;for(var i=o.child;null!==i;)0!==i.expirationTime&&(0===a||a>i.expirationTime)&&(a=i.expirationTime),i=i.sibling;o.expirationTime=a}if(null!==t)return t;if(null!==n&&(null===n.firstEffect&&(n.firstEffect=e.firstEffect),null!==e.lastEffect&&(null!==n.lastEffect&&(n.lastEffect.nextEffect=e.firstEffect),n.lastEffect=e.lastEffect),1<e.effectTag&&(null!==n.lastEffect?n.lastEffect.nextEffect=e:n.firstEffect=e,n.lastEffect=e)),null!==r)return r;if(null===n){e.stateNode.isReadyForCommit=!0;break}e=n}return null}function r(e){var t=j(e.alternate,e,Z);return null===t&&(t=n(e)),Ut.current=null,t}function o(e){var t=I(e.alternate,e,Z);return null===t&&(t=n(e)),Ut.current=null,t}function a(e){if(null!==te){if(!(0===Z||Z>e))if(Z<=G)for(;null!==X;)X=u(X)?o(X):r(X);else for(;null!==X&&!C();)X=u(X)?o(X):r(X)}else if(!(0===Z||Z>e))if(Z<=G)for(;null!==X;)X=r(X);else for(;null!==X&&!C();)X=r(X)}function i(e,t){if(Y&&d("243"),Y=!0,e.isReadyForCommit=!1,e!==J||t!==Z||null===X){for(;-1<Fn;)Ln[Fn]=null,Fn--;Bn=p,zn.current=p,Vn.current=!1,P(),Z=t,X=Zn((J=e).current,null,t)}var n=!1,r=null;try{a(t)}catch(e){n=!0,r=e}for(;n;){if(ae){oe=r;break}var i=X;if(null===i)ae=!0;else{var u=l(i,r);if(null===u&&d("183"),!ae){try{for(r=t,u=n=u;null!==i;){switch(i.tag){case 2:qn(i);break;case 5:O(i);break;case 3:S(i);break;case 4:S(i)}if(i===u||i.alternate===u)break;i=i.return}X=o(n),a(r)}catch(e){n=!0,r=e;continue}break}}}return t=oe,ae=Y=!1,oe=null,null!==t&&x(t),e.isReadyForCommit?e.current.alternate:null}function l(e,t){var n=Ut.current=null,r=!1,o=!1,a=null;if(3===e.tag)n=e,s(e)&&(ae=!0);else for(var i=e.return;null!==i&&null===n;){if(2===i.tag?"function"==typeof i.stateNode.componentDidCatch&&(r=!0,a=zt(i),n=i,o=!0):3===i.tag&&(n=i),s(i)){if(le||null!==re&&(re.has(i)||null!==i.alternate&&re.has(i.alternate)))return null;n=null,o=!1}i=i.return}if(null!==n){null===ne&&(ne=new Set),ne.add(n);var l="";i=e;do{e:switch(i.tag){case 0:case 1:case 2:case 5:var u=i._debugOwner,c=i._debugSource,f=zt(i),p=null;u&&(p=zt(u)),u=c,f="\n    in "+(f||"Unknown")+(u?" (at "+u.fileName.replace(/^.*[\\\/]/,"")+":"+u.lineNumber+")":p?" (created by "+p+")":"");break e;default:f=""}l+=f,i=i.return}while(i);i=l,e=zt(e),null===te&&(te=new Map),t={componentName:e,componentStack:i,error:t,errorBoundary:r?n.stateNode:null,errorBoundaryFound:r,errorBoundaryName:a,willRetry:o},te.set(n,t);try{var d=t.error;d&&d.suppressReactErrorLogging||console.error(d)}catch(e){e&&e.suppressReactErrorLogging||console.error(e)}return ie?(null===re&&(re=new Set),re.add(n)):g(n),n}return null===oe&&(oe=t),null}function u(e){return null!==te&&(te.has(e)||null!==e.alternate&&te.has(e.alternate))}function s(e){return null!==ne&&(ne.has(e)||null!==e.alternate&&ne.has(e.alternate))}function c(){return 20*(1+((v()+100)/20|0))}function f(e){return 0!==Q?Q:Y?ie?1:Z:!$||1&e.internalContextTag?c():1}function h(e,t){return m(e,t)}function m(e,t){for(;null!==e;){if((0===e.expirationTime||e.expirationTime>t)&&(e.expirationTime=t),null!==e.alternate&&(0===e.alternate.expirationTime||e.alternate.expirationTime>t)&&(e.alternate.expirationTime=t),null===e.return){if(3!==e.tag)break;var n=e.stateNode;!Y&&n===J&&t<Z&&(X=J=null,Z=0);var r=n,o=t;if(_e>ke&&d("185"),null===r.nextScheduledRoot)r.remainingExpirationTime=o,null===se?(ue=se=r,r.nextScheduledRoot=r):(se=se.nextScheduledRoot=r).nextScheduledRoot=ue;else{var a=r.remainingExpirationTime;(0===a||o<a)&&(r.remainingExpirationTime=o)}pe||(be?we&&_(de=r,he=1):1===o?k(1,null):y(o)),!Y&&n===J&&t<Z&&(X=J=null,Z=0)}e=e.return}}function g(e){m(e,1)}function v(){return G=2+((z()-q)/10|0)}function y(e){if(0!==ce){if(e>ce)return;B(fe)}var t=z()-q;ce=e,fe=V(w,{timeout:10*(e-2)-t})}function b(){var e=0,t=null;if(null!==se)for(var n=se,r=ue;null!==r;){var o=r.remainingExpirationTime;if(0===o){if((null===n||null===se)&&d("244"),r===r.nextScheduledRoot){ue=se=r.nextScheduledRoot=null;break}if(r===ue)ue=o=r.nextScheduledRoot,se.nextScheduledRoot=o,r.nextScheduledRoot=null;else{if(r===se){(se=n).nextScheduledRoot=ue,r.nextScheduledRoot=null;break}n.nextScheduledRoot=r.nextScheduledRoot,r.nextScheduledRoot=null}r=n.nextScheduledRoot}else{if((0===e||o<e)&&(e=o,t=r),r===se)break;n=r,r=r.nextScheduledRoot}}null!==(n=de)&&n===t?_e++:_e=0,de=t,he=e}function w(e){k(0,e)}function k(e,t){for(ye=t,b();null!==de&&0!==he&&(0===e||he<=e)&&!me;)_(de,he),b();if(null!==ye&&(ce=0,fe=-1),0!==he&&y(he),ye=null,me=!1,_e=0,ge)throw e=ve,ve=null,ge=!1,e}function _(e,n){if(pe&&d("245"),pe=!0,n<=v()){var r=e.finishedWork;null!==r?(e.finishedWork=null,e.remainingExpirationTime=t(r)):(e.finishedWork=null,null!==(r=i(e,n))&&(e.remainingExpirationTime=t(r)))}else null!==(r=e.finishedWork)?(e.finishedWork=null,e.remainingExpirationTime=t(r)):(e.finishedWork=null,null!==(r=i(e,n))&&(C()?e.finishedWork=r:e.remainingExpirationTime=t(r)));pe=!1}function C(){return!(null===ye||ye.timeRemaining()>Ce)&&(me=!0)}function x(e){null===de&&d("246"),de.remainingExpirationTime=0,ge||(ge=!0,ve=e)}var E=function(e){function t(e){return e===Ir&&d("174"),e}var n=e.getChildHostContext,r=e.getRootHostContext,o={current:Ir},a={current:Ir},i={current:Ir};return{getHostContext:function(){return t(o.current)},getRootHostContainer:function(){return t(i.current)},popHostContainer:function(e){Hn(o),Hn(a),Hn(i)},popHostContext:function(e){a.current===e&&(Hn(o),Hn(a))},pushHostContainer:function(e,t){Un(i,t),t=r(t),Un(a,e),Un(o,t)},pushHostContext:function(e){var r=t(i.current),l=t(o.current);l!==(r=n(l,e.type,r))&&(Un(a,e),Un(o,r))},resetHostContainer:function(){o.current=Ir,i.current=Ir}}}(e),T=function(e){function t(e,t){var n=new Jn(5,null,0);n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function n(e,t){switch(e.tag){case 5:return null!==(t=a(t,e.type,e.pendingProps))&&(e.stateNode=t,!0);case 6:return null!==(t=i(t,e.pendingProps))&&(e.stateNode=t,!0);default:return!1}}function r(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag;)e=e.return;f=e}var o=e.shouldSetTextContent;if(!(e=e.hydration))return{enterHydrationState:function(){return!1},resetHydrationState:function(){},tryToClaimNextHydratableInstance:function(){},prepareToHydrateHostInstance:function(){d("175")},prepareToHydrateHostTextInstance:function(){d("176")},popHydrationState:function(){return!1}};var a=e.canHydrateInstance,i=e.canHydrateTextInstance,l=e.getNextHydratableSibling,u=e.getFirstHydratableChild,s=e.hydrateInstance,c=e.hydrateTextInstance,f=null,p=null,h=!1;return{enterHydrationState:function(e){return p=u(e.stateNode.containerInfo),f=e,h=!0},resetHydrationState:function(){p=f=null,h=!1},tryToClaimNextHydratableInstance:function(e){if(h){var r=p;if(r){if(!n(e,r)){if(!(r=l(r))||!n(e,r))return e.effectTag|=2,h=!1,void(f=e);t(f,p)}f=e,p=u(r)}else e.effectTag|=2,h=!1,f=e}},prepareToHydrateHostInstance:function(e,t,n){return t=s(e.stateNode,e.type,e.memoizedProps,t,n,e),e.updateQueue=t,null!==t},prepareToHydrateHostTextInstance:function(e){return c(e.stateNode,e.memoizedProps,e)},popHydrationState:function(e){if(e!==f)return!1;if(!h)return r(e),h=!0,!1;var n=e.type;if(5!==e.tag||"head"!==n&&"body"!==n&&!o(n,e.memoizedProps))for(n=p;n;)t(e,n),n=l(n);return r(e),p=f?l(e.stateNode):null,!0}}}(e),S=E.popHostContainer,O=E.popHostContext,P=E.resetHostContainer,N=jr(e,E,T,h,f),j=N.beginWork,I=N.beginFailedWork,M=function(e,t,n){function r(e){e.effectTag|=4}var o=e.createInstance,a=e.createTextInstance,i=e.appendInitialChild,l=e.finalizeInitialChildren,u=e.prepareUpdate,s=e.persistence,c=t.getRootHostContainer,f=t.popHostContext,p=t.getHostContext,h=t.popHostContainer,m=n.prepareToHydrateHostInstance,g=n.prepareToHydrateHostTextInstance,v=n.popHydrationState,y=void 0,b=void 0,w=void 0;return e.mutation?(y=function(){},b=function(e,t,n){(t.updateQueue=n)&&r(t)},w=function(e,t,n,o){n!==o&&r(t)}):d(s?"235":"236"),{completeWork:function(e,t,n){var s=t.pendingProps;switch(null===s?s=t.memoizedProps:2147483647===t.expirationTime&&2147483647!==n||(t.pendingProps=null),t.tag){case 1:return null;case 2:return qn(t),null;case 3:return h(t),Hn(Vn),Hn(zn),(s=t.stateNode).pendingContext&&(s.context=s.pendingContext,s.pendingContext=null),null!==e&&null!==e.child||(v(t),t.effectTag&=-3),y(t),null;case 5:f(t),n=c();var k=t.type;if(null!==e&&null!=t.stateNode){var _=e.memoizedProps,C=t.stateNode,x=p();C=u(C,k,_,s,n,x),b(e,t,C,k,_,s,n),e.ref!==t.ref&&(t.effectTag|=128)}else{if(!s)return null===t.stateNode&&d("166"),null;if(e=p(),v(t))m(t,n,e)&&r(t);else{e=o(k,s,n,e,t);e:for(_=t.child;null!==_;){if(5===_.tag||6===_.tag)i(e,_.stateNode);else if(4!==_.tag&&null!==_.child){_.child.return=_,_=_.child;continue}if(_===t)break;for(;null===_.sibling;){if(null===_.return||_.return===t)break e;_=_.return}_.sibling.return=_.return,_=_.sibling}l(e,k,s,n)&&r(t),t.stateNode=e}null!==t.ref&&(t.effectTag|=128)}return null;case 6:if(e&&null!=t.stateNode)w(e,t,e.memoizedProps,s);else{if("string"!=typeof s)return null===t.stateNode&&d("166"),null;e=c(),n=p(),v(t)?g(t)&&r(t):t.stateNode=a(s,e,n,t)}return null;case 7:(s=t.memoizedProps)||d("165"),t.tag=8,k=[];e:for((_=t.stateNode)&&(_.return=t);null!==_;){if(5===_.tag||6===_.tag||4===_.tag)d("247");else if(9===_.tag)k.push(_.type);else if(null!==_.child){_.child.return=_,_=_.child;continue}for(;null===_.sibling;){if(null===_.return||_.return===t)break e;_=_.return}_.sibling.return=_.return,_=_.sibling}return s=(_=s.handler)(s.props,k),t.child=Pr(t,null!==e?e.child:null,s,n),t.child;case 8:return t.tag=7,null;case 9:case 10:return null;case 4:return h(t),y(t),null;case 0:d("167");default:d("156")}}}}(e,E,T).completeWork,D=(E=function(e,t){function n(e){var n=e.ref;if(null!==n)try{n(null)}catch(n){t(e,n)}}function r(e){switch(cr(e),e.tag){case 2:n(e);var r=e.stateNode;if("function"==typeof r.componentWillUnmount)try{r.props=e.memoizedProps,r.state=e.memoizedState,r.componentWillUnmount()}catch(n){t(e,n)}break;case 5:n(e);break;case 7:o(e.stateNode);break;case 4:u&&i(e)}}function o(e){for(var t=e;;)if(r(t),null===t.child||u&&4===t.tag){if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;t=t.return}t.sibling.return=t.return,t=t.sibling}else t.child.return=t,t=t.child}function a(e){return 5===e.tag||3===e.tag||4===e.tag}function i(e){for(var t=e,n=!1,a=void 0,i=void 0;;){if(!n){n=t.return;e:for(;;){switch(null===n&&d("160"),n.tag){case 5:a=n.stateNode,i=!1;break e;case 3:case 4:a=n.stateNode.containerInfo,i=!0;break e}n=n.return}n=!0}if(5===t.tag||6===t.tag)o(t),i?b(a,t.stateNode):y(a,t.stateNode);else if(4===t.tag?a=t.stateNode.containerInfo:r(t),null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;4===(t=t.return).tag&&(n=!1)}t.sibling.return=t.return,t=t.sibling}}var l=e.getPublicInstance,u=e.mutation;e=e.persistence,u||d(e?"235":"236");var s=u.commitMount,c=u.commitUpdate,f=u.resetTextContent,p=u.commitTextUpdate,h=u.appendChild,m=u.appendChildToContainer,g=u.insertBefore,v=u.insertInContainerBefore,y=u.removeChild,b=u.removeChildFromContainer;return{commitResetTextContent:function(e){f(e.stateNode)},commitPlacement:function(e){e:{for(var t=e.return;null!==t;){if(a(t)){var n=t;break e}t=t.return}d("160"),n=void 0}var r=t=void 0;switch(n.tag){case 5:t=n.stateNode,r=!1;break;case 3:case 4:t=n.stateNode.containerInfo,r=!0;break;default:d("161")}16&n.effectTag&&(f(t),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||a(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}for(var o=e;;){if(5===o.tag||6===o.tag)n?r?v(t,o.stateNode,n):g(t,o.stateNode,n):r?m(t,o.stateNode):h(t,o.stateNode);else if(4!==o.tag&&null!==o.child){o.child.return=o,o=o.child;continue}if(o===e)break;for(;null===o.sibling;){if(null===o.return||o.return===e)return;o=o.return}o.sibling.return=o.return,o=o.sibling}},commitDeletion:function(e){i(e),e.return=null,e.child=null,e.alternate&&(e.alternate.child=null,e.alternate.return=null)},commitWork:function(e,t){switch(t.tag){case 2:break;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps;e=null!==e?e.memoizedProps:r;var o=t.type,a=t.updateQueue;t.updateQueue=null,null!==a&&c(n,a,o,e,r,t)}break;case 6:null===t.stateNode&&d("162"),n=t.memoizedProps,p(t.stateNode,null!==e?e.memoizedProps:n,n);break;case 3:break;default:d("163")}},commitLifeCycles:function(e,t){switch(t.tag){case 2:var n=t.stateNode;if(4&t.effectTag)if(null===e)n.props=t.memoizedProps,n.state=t.memoizedState,n.componentDidMount();else{var r=e.memoizedProps;e=e.memoizedState,n.props=t.memoizedProps,n.state=t.memoizedState,n.componentDidUpdate(r,e)}null!==(t=t.updateQueue)&&gr(t,n);break;case 3:null!==(n=t.updateQueue)&&gr(n,null!==t.child?t.child.stateNode:null);break;case 5:n=t.stateNode,null===e&&4&t.effectTag&&s(n,t.type,t.memoizedProps,t);break;case 6:case 4:break;default:d("163")}},commitAttachRef:function(e){var t=e.ref;if(null!==t){var n=e.stateNode;switch(e.tag){case 5:t(l(n));break;default:t(n)}}},commitDetachRef:function(e){null!==(e=e.ref)&&e(null)}}}(e,l)).commitResetTextContent,R=E.commitPlacement,A=E.commitDeletion,L=E.commitWork,F=E.commitLifeCycles,H=E.commitAttachRef,U=E.commitDetachRef,z=e.now,V=e.scheduleDeferredCallback,B=e.cancelDeferredCallback,$=e.useSyncScheduling,K=e.prepareForCommit,W=e.resetAfterCommit,q=z(),G=2,Q=0,Y=!1,X=null,J=null,Z=0,ee=null,te=null,ne=null,re=null,oe=null,ae=!1,ie=!1,le=!1,ue=null,se=null,ce=0,fe=-1,pe=!1,de=null,he=0,me=!1,ge=!1,ve=null,ye=null,be=!1,we=!1,ke=1e3,_e=0,Ce=1;return{computeAsyncExpiration:c,computeExpirationForFiber:f,scheduleWork:h,batchedUpdates:function(e,t){var n=be;be=!0;try{return e(t)}finally{(be=n)||pe||k(1,null)}},unbatchedUpdates:function(e){if(be&&!we){we=!0;try{return e()}finally{we=!1}}return e()},flushSync:function(e){var t=be;be=!0;try{e:{var n=Q;Q=1;try{var r=e();break e}finally{Q=n}r=void 0}return r}finally{be=t,pe&&d("187"),k(1,null)}},deferredUpdates:function(e){var t=Q;Q=c();try{return e()}finally{Q=t}}}}function Dr(e){function t(e){return null===(e=function(e){if(!(e=Kt(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}(e))?null:e.stateNode}var n=e.getPublicInstance,r=(e=Mr(e)).computeAsyncExpiration,o=e.computeExpirationForFiber,i=e.scheduleWork;return{createContainer:function(e,t){var n=new Jn(3,null,0);return e={current:n,containerInfo:e,pendingChildren:null,remainingExpirationTime:0,isReadyForCommit:!1,finishedWork:null,context:null,pendingContext:null,hydrate:t,nextScheduledRoot:null},n.stateNode=e},updateContainer:function(e,t,n,a){var l=t.current;if(n){var u;n=n._reactInternalFiber;e:{for(2===Vt(n)&&2===n.tag||d("170"),u=n;3!==u.tag;){if(Wn(u)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break e}(u=u.return)||d("171")}u=u.stateNode.context}n=Wn(n)?Qn(n,u):u}else n=p;null===t.context?t.context=n:t.pendingContext=n,t=void 0===(t=a)?null:t,dr(l,{expirationTime:a=null!=e&&null!=e.type&&null!=e.type.prototype&&!0===e.type.prototype.unstable_isAsyncReactComponent?r():o(l),partialState:{element:e},callback:t,isReplace:!1,isForced:!1,nextCallback:null,next:null}),i(l,a)},batchedUpdates:e.batchedUpdates,unbatchedUpdates:e.unbatchedUpdates,deferredUpdates:e.deferredUpdates,flushSync:e.flushSync,getPublicRootInstance:function(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:return n(e.child.stateNode);default:return e.child.stateNode}},findHostInstance:t,findHostInstanceWithNoPortals:function(e){return null===(e=function(e){if(!(e=Kt(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child&&4!==t.tag)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}(e))?null:e.stateNode},injectIntoDevTools:function(e){var n=e.findFiberByHostInstance;return function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);ir=ur(function(e){return t.onCommitFiberRoot(n,e)}),lr=ur(function(e){return t.onCommitFiberUnmount(n,e)})}catch(e){}return!0}(a({},e,{findHostInstanceByFiber:function(e){return t(e)},findFiberByHostInstance:function(e){return n?n(e):null}}))}}}var Rr=Object.freeze({default:Dr}),Ar=Rr&&Dr||Rr,Lr=Ar.default?Ar.default:Ar;var Fr="object"==typeof performance&&"function"==typeof performance.now,Hr=void 0;Hr=Fr?function(){return performance.now()}:function(){return Date.now()};var Ur=void 0,zr=void 0;if(o.canUseDOM)if("function"!=typeof requestIdleCallback||"function"!=typeof cancelIdleCallback){var Vr,Br=null,$r=!1,Kr=-1,Wr=!1,qr=0,Gr=33,Qr=33;Vr=Fr?{didTimeout:!1,timeRemaining:function(){var e=qr-performance.now();return 0<e?e:0}}:{didTimeout:!1,timeRemaining:function(){var e=qr-Date.now();return 0<e?e:0}};var Yr="__reactIdleCallback$"+Math.random().toString(36).slice(2);window.addEventListener("message",function(e){if(e.source===window&&e.data===Yr){if($r=!1,e=Hr(),0>=qr-e){if(!(-1!==Kr&&Kr<=e))return void(Wr||(Wr=!0,requestAnimationFrame(Xr)));Vr.didTimeout=!0}else Vr.didTimeout=!1;Kr=-1,e=Br,Br=null,null!==e&&e(Vr)}},!1);var Xr=function(e){Wr=!1;var t=e-qr+Qr;t<Qr&&Gr<Qr?(8>t&&(t=8),Qr=t<Gr?Gr:t):Gr=t,qr=e+Qr,$r||($r=!0,window.postMessage(Yr,"*"))};Ur=function(e,t){return Br=e,null!=t&&"number"==typeof t.timeout&&(Kr=Hr()+t.timeout),Wr||(Wr=!0,requestAnimationFrame(Xr)),0},zr=function(){Br=null,$r=!1,Kr=-1}}else Ur=window.requestIdleCallback,zr=window.cancelIdleCallback;else Ur=function(e){return setTimeout(function(){e({timeRemaining:function(){return 1/0}})})},zr=function(e){clearTimeout(e)};var Jr=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,Zr={},eo={};function to(e,t,n){var r=b(t);if(r&&y(t,n)){var o=r.mutationMethod;o?o(e,n):null==n||r.hasBooleanValue&&!n||r.hasNumericValue&&isNaN(n)||r.hasPositiveNumericValue&&1>n||r.hasOverloadedBooleanValue&&!1===n?ro(e,t):r.mustUseProperty?e[r.propertyName]=n:(t=r.attributeName,(o=r.attributeNamespace)?e.setAttributeNS(o,t,""+n):r.hasBooleanValue||r.hasOverloadedBooleanValue&&!0===n?e.setAttribute(t,""):e.setAttribute(t,""+n))}else no(e,t,y(t,n)?n:null)}function no(e,t,n){(function(e){return!!eo.hasOwnProperty(e)||!Zr.hasOwnProperty(e)&&(Jr.test(e)?eo[e]=!0:(Zr[e]=!0,!1))})(t)&&(null==n?e.removeAttribute(t):e.setAttribute(t,""+n))}function ro(e,t){var n=b(t);n?(t=n.mutationMethod)?t(e,void 0):n.mustUseProperty?e[n.propertyName]=!n.hasBooleanValue&&"":e.removeAttribute(n.attributeName):e.removeAttribute(t)}function oo(e,t){var n=t.value,r=t.checked;return a({type:void 0,step:void 0,min:void 0,max:void 0},t,{defaultChecked:void 0,defaultValue:void 0,value:null!=n?n:e._wrapperState.initialValue,checked:null!=r?r:e._wrapperState.initialChecked})}function ao(e,t){var n=t.defaultValue;e._wrapperState={initialChecked:null!=t.checked?t.checked:t.defaultChecked,initialValue:null!=t.value?t.value:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function io(e,t){null!=(t=t.checked)&&to(e,"checked",t)}function lo(e,t){io(e,t);var n=t.value;null!=n?0===n&&""===e.value?e.value="0":"number"===t.type?(n!=(t=parseFloat(e.value)||0)||n==t&&e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n):(null==t.value&&null!=t.defaultValue&&e.defaultValue!==""+t.defaultValue&&(e.defaultValue=""+t.defaultValue),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked))}function uo(e,t){switch(t.type){case"submit":case"reset":break;case"color":case"date":case"datetime":case"datetime-local":case"month":case"time":case"week":e.value="",e.value=e.defaultValue;break;default:e.value=e.value}""!==(t=e.name)&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!e.defaultChecked,""!==t&&(e.name=t)}function so(e,t){return e=a({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,function(e){null==e||"string"!=typeof e&&"number"!=typeof e||(t+=e)}),t}(t.children))&&(e.children=t),e}function co(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+n,t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function fo(e,t){var n=t.value;e._wrapperState={initialValue:null!=n?n:t.defaultValue,wasMultiple:!!t.multiple}}function po(e,t){return null!=t.dangerouslySetInnerHTML&&d("91"),a({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ho(e,t){var n=t.value;null==n&&(n=t.defaultValue,null!=(t=t.children)&&(null!=n&&d("92"),Array.isArray(t)&&(1>=t.length||d("93"),t=t[0]),n=""+t),null==n&&(n="")),e._wrapperState={initialValue:""+n}}function mo(e,t){var n=t.value;null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&(e.defaultValue=n)),null!=t.defaultValue&&(e.defaultValue=t.defaultValue)}function go(e){var t=e.textContent;t===e._wrapperState.initialValue&&(e.value=t)}var vo="http://www.w3.org/1999/xhtml",yo="http://www.w3.org/2000/svg";function bo(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function wo(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?bo(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var ko,_o=void 0,Co=(ko=function(e,t){if(e.namespaceURI!==yo||"innerHTML"in e)e.innerHTML=t;else{for((_o=_o||document.createElement("div")).innerHTML="<svg>"+t+"</svg>",t=_o.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction(function(){return ko(e,t)})}:ko);function xo(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var Eo={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},To=["Webkit","ms","Moz","O"];function So(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=n,a=t[n];o=null==a||"boolean"==typeof a||""===a?"":r||"number"!=typeof a||0===a||Eo.hasOwnProperty(o)&&Eo[o]?(""+a).trim():a+"px","float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(Eo).forEach(function(e){To.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Eo[t]=Eo[e]})});var Oo=a({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Po(e,t,n){t&&(Oo[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML)&&d("137",e,n()),null!=t.dangerouslySetInnerHTML&&(null!=t.children&&d("60"),"object"==typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML||d("61")),null!=t.style&&"object"!=typeof t.style&&d("62",n()))}function No(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var jo=vo,Io=i.thatReturns("");function Mo(e,t){var n=fn(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=B[t];for(var r=0;r<t.length;r++){var o=t[r];n.hasOwnProperty(o)&&n[o]||("topScroll"===o?Jt("topScroll","scroll",e):"topFocus"===o||"topBlur"===o?(Jt("topFocus","focus",e),Jt("topBlur","blur",e),n.topBlur=!0,n.topFocus=!0):"topCancel"===o?(ht("cancel",!0)&&Jt("topCancel","cancel",e),n.topCancel=!0):"topClose"===o?(ht("close",!0)&&Jt("topClose","close",e),n.topClose=!0):ln.hasOwnProperty(o)&&Xt(o,ln[o],e),n[o]=!0)}}var Do={topAbort:"abort",topCanPlay:"canplay",topCanPlayThrough:"canplaythrough",topDurationChange:"durationchange",topEmptied:"emptied",topEncrypted:"encrypted",topEnded:"ended",topError:"error",topLoadedData:"loadeddata",topLoadedMetadata:"loadedmetadata",topLoadStart:"loadstart",topPause:"pause",topPlay:"play",topPlaying:"playing",topProgress:"progress",topRateChange:"ratechange",topSeeked:"seeked",topSeeking:"seeking",topStalled:"stalled",topSuspend:"suspend",topTimeUpdate:"timeupdate",topVolumeChange:"volumechange",topWaiting:"waiting"};function Ro(e,t,n,r){return n=9===n.nodeType?n:n.ownerDocument,r===jo&&(r=bo(e)),r===jo?"script"===e?((e=n.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):e="string"==typeof t.is?n.createElement(e,{is:t.is}):n.createElement(e):e=n.createElementNS(r,e),e}function Ao(e,t){return(9===t.nodeType?t:t.ownerDocument).createTextNode(e)}function Lo(e,t,n,r){var o=No(t,n);switch(t){case"iframe":case"object":Xt("topLoad","load",e);var l=n;break;case"video":case"audio":for(l in Do)Do.hasOwnProperty(l)&&Xt(l,Do[l],e);l=n;break;case"source":Xt("topError","error",e),l=n;break;case"img":case"image":Xt("topError","error",e),Xt("topLoad","load",e),l=n;break;case"form":Xt("topReset","reset",e),Xt("topSubmit","submit",e),l=n;break;case"details":Xt("topToggle","toggle",e),l=n;break;case"input":ao(e,n),l=oo(e,n),Xt("topInvalid","invalid",e),Mo(r,"onChange");break;case"option":l=so(e,n);break;case"select":fo(e,n),l=a({},n,{value:void 0}),Xt("topInvalid","invalid",e),Mo(r,"onChange");break;case"textarea":ho(e,n),l=po(e,n),Xt("topInvalid","invalid",e),Mo(r,"onChange");break;default:l=n}Po(t,l,Io);var u,s=l;for(u in s)if(s.hasOwnProperty(u)){var c=s[u];"style"===u?So(e,c):"dangerouslySetInnerHTML"===u?null!=(c=c?c.__html:void 0)&&Co(e,c):"children"===u?"string"==typeof c?("textarea"!==t||""!==c)&&xo(e,c):"number"==typeof c&&xo(e,""+c):"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&"autoFocus"!==u&&(V.hasOwnProperty(u)?null!=c&&Mo(r,u):o?no(e,u,c):null!=c&&to(e,u,c))}switch(t){case"input":gt(e),uo(e,n);break;case"textarea":gt(e),go(e);break;case"option":null!=n.value&&e.setAttribute("value",n.value);break;case"select":e.multiple=!!n.multiple,null!=(t=n.value)?co(e,!!n.multiple,t,!1):null!=n.defaultValue&&co(e,!!n.multiple,n.defaultValue,!0);break;default:"function"==typeof l.onClick&&(e.onclick=i)}}function Fo(e,t,n,r,o){var l,u,s=null;switch(t){case"input":n=oo(e,n),r=oo(e,r),s=[];break;case"option":n=so(e,n),r=so(e,r),s=[];break;case"select":n=a({},n,{value:void 0}),r=a({},r,{value:void 0}),s=[];break;case"textarea":n=po(e,n),r=po(e,r),s=[];break;default:"function"!=typeof n.onClick&&"function"==typeof r.onClick&&(e.onclick=i)}for(l in Po(t,r,Io),e=null,n)if(!r.hasOwnProperty(l)&&n.hasOwnProperty(l)&&null!=n[l])if("style"===l)for(u in t=n[l])t.hasOwnProperty(u)&&(e||(e={}),e[u]="");else"dangerouslySetInnerHTML"!==l&&"children"!==l&&"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(V.hasOwnProperty(l)?s||(s=[]):(s=s||[]).push(l,null));for(l in r){var c=r[l];if(t=null!=n?n[l]:void 0,r.hasOwnProperty(l)&&c!==t&&(null!=c||null!=t))if("style"===l)if(t){for(u in t)!t.hasOwnProperty(u)||c&&c.hasOwnProperty(u)||(e||(e={}),e[u]="");for(u in c)c.hasOwnProperty(u)&&t[u]!==c[u]&&(e||(e={}),e[u]=c[u])}else e||(s||(s=[]),s.push(l,e)),e=c;else"dangerouslySetInnerHTML"===l?(c=c?c.__html:void 0,t=t?t.__html:void 0,null!=c&&t!==c&&(s=s||[]).push(l,""+c)):"children"===l?t===c||"string"!=typeof c&&"number"!=typeof c||(s=s||[]).push(l,""+c):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&(V.hasOwnProperty(l)?(null!=c&&Mo(o,l),s||t===c||(s=[])):(s=s||[]).push(l,c))}return e&&(s=s||[]).push("style",e),s}function Ho(e,t,n,r,o){"input"===n&&"radio"===o.type&&null!=o.name&&io(e,o),No(n,r),r=No(n,o);for(var a=0;a<t.length;a+=2){var i=t[a],l=t[a+1];"style"===i?So(e,l):"dangerouslySetInnerHTML"===i?Co(e,l):"children"===i?xo(e,l):r?null!=l?no(e,i,l):e.removeAttribute(i):null!=l?to(e,i,l):ro(e,i)}switch(n){case"input":lo(e,o);break;case"textarea":mo(e,o);break;case"select":e._wrapperState.initialValue=void 0,t=e._wrapperState.wasMultiple,e._wrapperState.wasMultiple=!!o.multiple,null!=(n=o.value)?co(e,!!o.multiple,n,!1):t!==!!o.multiple&&(null!=o.defaultValue?co(e,!!o.multiple,o.defaultValue,!0):co(e,!!o.multiple,o.multiple?[]:"",!1))}}function Uo(e,t,n,r,o){switch(t){case"iframe":case"object":Xt("topLoad","load",e);break;case"video":case"audio":for(var a in Do)Do.hasOwnProperty(a)&&Xt(a,Do[a],e);break;case"source":Xt("topError","error",e);break;case"img":case"image":Xt("topError","error",e),Xt("topLoad","load",e);break;case"form":Xt("topReset","reset",e),Xt("topSubmit","submit",e);break;case"details":Xt("topToggle","toggle",e);break;case"input":ao(e,n),Xt("topInvalid","invalid",e),Mo(o,"onChange");break;case"select":fo(e,n),Xt("topInvalid","invalid",e),Mo(o,"onChange");break;case"textarea":ho(e,n),Xt("topInvalid","invalid",e),Mo(o,"onChange")}for(var l in Po(t,n,Io),r=null,n)n.hasOwnProperty(l)&&(a=n[l],"children"===l?"string"==typeof a?e.textContent!==a&&(r=["children",a]):"number"==typeof a&&e.textContent!==""+a&&(r=["children",""+a]):V.hasOwnProperty(l)&&null!=a&&Mo(o,l));switch(t){case"input":gt(e),uo(e,n);break;case"textarea":gt(e),go(e);break;case"select":case"option":break;default:"function"==typeof n.onClick&&(e.onclick=i)}return r}function zo(e,t){return e.nodeValue!==t}var Vo=Object.freeze({createElement:Ro,createTextNode:Ao,setInitialProperties:Lo,diffProperties:Fo,updateProperties:Ho,diffHydratedProperties:Uo,diffHydratedText:zo,warnForUnmatchedText:function(){},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(e,t,n){switch(t){case"input":if(lo(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=he(r);o||d("90"),vt(r),lo(r,o)}}}break;case"textarea":mo(e,n);break;case"select":null!=(t=n.value)&&co(e,!!n.multiple,t,!1)}}});rt.injectFiberControlledHostComponent(Vo);var Bo=null,$o=null;function Ko(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}var Wo=Lr({getRootHostContext:function(e){var t=e.nodeType;switch(t){case 9:case 11:e=(e=e.documentElement)?e.namespaceURI:wo(null,"");break;default:e=wo(e=(t=8===t?e.parentNode:e).namespaceURI||null,t=t.tagName)}return e},getChildHostContext:function(e,t){return wo(e,t)},getPublicInstance:function(e){return e},prepareForCommit:function(){Bo=Gt;var e=u();if(hn(e)){if("selectionStart"in e)var t={start:e.selectionStart,end:e.selectionEnd};else e:{var n=window.getSelection&&window.getSelection();if(n&&0!==n.rangeCount){t=n.anchorNode;var r=n.anchorOffset,o=n.focusNode;n=n.focusOffset;try{t.nodeType,o.nodeType}catch(e){t=null;break e}var a=0,i=-1,l=-1,s=0,c=0,f=e,p=null;t:for(;;){for(var d;f!==t||0!==r&&3!==f.nodeType||(i=a+r),f!==o||0!==n&&3!==f.nodeType||(l=a+n),3===f.nodeType&&(a+=f.nodeValue.length),null!==(d=f.firstChild);)p=f,f=d;for(;;){if(f===e)break t;if(p===t&&++s===r&&(i=a),p===o&&++c===n&&(l=a),null!==(d=f.nextSibling))break;p=(f=p).parentNode}f=d}t=-1===i||-1===l?null:{start:i,end:l}}else t=null}t=t||{start:0,end:0}}else t=null;$o={focusedElem:e,selectionRange:t},Yt(!1)},resetAfterCommit:function(){var e=$o,t=u(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&c(document.documentElement,n)){if(hn(n))if(t=r.start,void 0===(e=r.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if(window.getSelection){t=window.getSelection();var o=n[Se()].length;e=Math.min(r.start,o),r=void 0===r.end?e:Math.min(r.end,o),!t.extend&&e>r&&(o=r,r=e,e=o),o=dn(n,e);var a=dn(n,r);if(o&&a&&(1!==t.rangeCount||t.anchorNode!==o.node||t.anchorOffset!==o.offset||t.focusNode!==a.node||t.focusOffset!==a.offset)){var i=document.createRange();i.setStart(o.node,o.offset),t.removeAllRanges(),e>r?(t.addRange(i),t.extend(a.node,a.offset)):(i.setEnd(a.node,a.offset),t.addRange(i))}}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for(f(n),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}$o=null,Yt(Bo),Bo=null},createInstance:function(e,t,n,r,o){return(e=Ro(e,t,n,r))[ce]=o,e[fe]=t,e},appendInitialChild:function(e,t){e.appendChild(t)},finalizeInitialChildren:function(e,t,n,r){Lo(e,t,n,r);e:{switch(t){case"button":case"input":case"select":case"textarea":e=!!n.autoFocus;break e}e=!1}return e},prepareUpdate:function(e,t,n,r,o){return Fo(e,t,n,r,o)},shouldSetTextContent:function(e,t){return"textarea"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&"string"==typeof t.dangerouslySetInnerHTML.__html},shouldDeprioritizeSubtree:function(e,t){return!!t.hidden},createTextInstance:function(e,t,n,r){return(e=Ao(e,t))[ce]=r,e},now:Hr,mutation:{commitMount:function(e){e.focus()},commitUpdate:function(e,t,n,r,o){e[fe]=o,Ho(e,t,n,r,o)},resetTextContent:function(e){e.textContent=""},commitTextUpdate:function(e,t,n){e.nodeValue=n},appendChild:function(e,t){e.appendChild(t)},appendChildToContainer:function(e,t){8===e.nodeType?e.parentNode.insertBefore(t,e):e.appendChild(t)},insertBefore:function(e,t,n){e.insertBefore(t,n)},insertInContainerBefore:function(e,t,n){8===e.nodeType?e.parentNode.insertBefore(t,n):e.insertBefore(t,n)},removeChild:function(e,t){e.removeChild(t)},removeChildFromContainer:function(e,t){8===e.nodeType?e.parentNode.removeChild(t):e.removeChild(t)}},hydration:{canHydrateInstance:function(e,t){return 1!==e.nodeType||t.toLowerCase()!==e.nodeName.toLowerCase()?null:e},canHydrateTextInstance:function(e,t){return""===t||3!==e.nodeType?null:e},getNextHydratableSibling:function(e){for(e=e.nextSibling;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e},getFirstHydratableChild:function(e){for(e=e.firstChild;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e},hydrateInstance:function(e,t,n,r,o,a){return e[ce]=a,e[fe]=n,Uo(e,t,n,o,r)},hydrateTextInstance:function(e,t,n){return e[ce]=n,zo(e,t)},didNotMatchHydratedContainerTextInstance:function(){},didNotMatchHydratedTextInstance:function(){},didNotHydrateContainerInstance:function(){},didNotHydrateInstance:function(){},didNotFindHydratableContainerInstance:function(){},didNotFindHydratableContainerTextInstance:function(){},didNotFindHydratableInstance:function(){},didNotFindHydratableTextInstance:function(){}},scheduleDeferredCallback:Ur,cancelDeferredCallback:zr,useSyncScheduling:!0});function qo(e,t,n,r,o){Ko(n)||d("200");var a=n._reactRootContainer;if(a)Wo.updateContainer(t,a,e,o);else{if(!(r=r||function(e){return!(!(e=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==e.nodeType||!e.hasAttribute("data-reactroot"))}(n)))for(a=void 0;a=n.lastChild;)n.removeChild(a);var i=Wo.createContainer(n,r);a=n._reactRootContainer=i,Wo.unbatchedUpdates(function(){Wo.updateContainer(t,i,e,o)})}return Wo.getPublicRootInstance(a)}function Go(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;return Ko(t)||d("200"),function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:kr,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)}function Qo(e,t){this._reactRootContainer=Wo.createContainer(e,t)}lt=Wo.batchedUpdates,Qo.prototype.render=function(e,t){Wo.updateContainer(e,this._reactRootContainer,null,t)},Qo.prototype.unmount=function(e){Wo.updateContainer(null,this._reactRootContainer,null,e)};var Yo={createPortal:Go,findDOMNode:function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;if(t)return Wo.findHostInstance(t);"function"==typeof e.render?d("188"):d("213",Object.keys(e))},hydrate:function(e,t,n){return qo(null,e,t,!0,n)},render:function(e,t,n){return qo(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,r){return(null==e||void 0===e._reactInternalFiber)&&d("38"),qo(e,t,n,!1,r)},unmountComponentAtNode:function(e){return Ko(e)||d("40"),!!e._reactRootContainer&&(Wo.unbatchedUpdates(function(){qo(null,null,e,!1,function(){e._reactRootContainer=null})}),!0)},unstable_createPortal:Go,unstable_batchedUpdates:st,unstable_deferredUpdates:Wo.deferredUpdates,flushSync:Wo.flushSync,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:ue,EventPluginRegistry:W,EventPropagators:Ee,ReactControlledComponent:it,ReactDOMComponentTree:me,ReactDOMEventListener:en}};Wo.injectIntoDevTools({findFiberByHostInstance:pe,bundleType:0,version:"16.2.0",rendererPackageName:"react-dom"});var Xo=Object.freeze({default:Yo}),Jo=Xo&&Yo||Xo;e.exports=Jo.default?Jo.default:Jo},"./node_modules/react-dom/index.js":function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n("./node_modules/react-dom/cjs/react-dom.production.min.js")},"./node_modules/react/cjs/react.production.min.js":function(e,t,n){"use strict";
/** @license React v16.2.0
 * react.production.min.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n("./node_modules/object-assign/index.js"),o=n("./node_modules/fbjs/lib/emptyObject.js"),a=n("./node_modules/fbjs/lib/emptyFunction.js"),i="function"==typeof Symbol&&Symbol.for,l=i?Symbol.for("react.element"):60103,u=i?Symbol.for("react.call"):60104,s=i?Symbol.for("react.return"):60105,c=i?Symbol.for("react.portal"):60106,f=i?Symbol.for("react.fragment"):60107,p="function"==typeof Symbol&&Symbol.iterator;function d(e){for(var t=arguments.length-1,n="Minified React error #"+e+"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);throw(t=Error(n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.")).name="Invariant Violation",t.framesToPop=1,t}var h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};function m(e,t,n){this.props=e,this.context=t,this.refs=o,this.updater=n||h}function g(e,t,n){this.props=e,this.context=t,this.refs=o,this.updater=n||h}function v(){}m.prototype.isReactComponent={},m.prototype.setState=function(e,t){"object"!=typeof e&&"function"!=typeof e&&null!=e&&d("85"),this.updater.enqueueSetState(this,e,t,"setState")},m.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},v.prototype=m.prototype;var y=g.prototype=new v;function b(e,t,n){this.props=e,this.context=t,this.refs=o,this.updater=n||h}y.constructor=g,r(y,m.prototype),y.isPureReactComponent=!0;var w=b.prototype=new v;w.constructor=b,r(w,m.prototype),w.unstable_isAsyncReactComponent=!0,w.render=function(){return this.props.children};var k={current:null},_=Object.prototype.hasOwnProperty,C={key:!0,ref:!0,__self:!0,__source:!0};function x(e,t,n){var r,o={},a=null,i=null;if(null!=t)for(r in void 0!==t.ref&&(i=t.ref),void 0!==t.key&&(a=""+t.key),t)_.call(t,r)&&!C.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var s=Array(u),c=0;c<u;c++)s[c]=arguments[c+2];o.children=s}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:l,type:e,key:a,ref:i,props:o,_owner:k.current}}function E(e){return"object"==typeof e&&null!==e&&e.$$typeof===l}var T=/\/+/g,S=[];function O(e,t,n,r){if(S.length){var o=S.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function P(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>S.length&&S.push(e)}function N(e,t,n,r){var o=typeof e;"undefined"!==o&&"boolean"!==o||(e=null);var a=!1;if(null===e)a=!0;else switch(o){case"string":case"number":a=!0;break;case"object":switch(e.$$typeof){case l:case u:case s:case c:a=!0}}if(a)return n(r,e,""===t?"."+j(e,0):t),1;if(a=0,t=""===t?".":t+":",Array.isArray(e))for(var i=0;i<e.length;i++){var f=t+j(o=e[i],i);a+=N(o,f,n,r)}else if(null===e||void 0===e?f=null:f="function"==typeof(f=p&&e[p]||e["@@iterator"])?f:null,"function"==typeof f)for(e=f.call(e),i=0;!(o=e.next()).done;)a+=N(o=o.value,f=t+j(o,i++),n,r);else"object"===o&&d("31","[object Object]"===(n=""+e)?"object with keys {"+Object.keys(e).join(", ")+"}":n,"");return a}function j(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return t[e]})}(e.key):t.toString(36)}function I(e,t){e.func.call(e.context,t,e.count++)}function M(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?D(e,r,n,a.thatReturnsArgument):null!=e&&(E(e)&&(t=o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(T,"$&/")+"/")+n,e={$$typeof:l,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}),r.push(e))}function D(e,t,n,r,o){var a="";null!=n&&(a=(""+n).replace(T,"$&/")+"/"),t=O(t,a,r,o),null==e||N(e,"",M,t),P(t)}var R={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return D(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;t=O(null,null,t,n),null==e||N(e,"",I,t),P(t)},count:function(e){return null==e?0:N(e,"",a.thatReturnsNull,null)},toArray:function(e){var t=[];return D(e,t,null,a.thatReturnsArgument),t},only:function(e){return E(e)||d("143"),e}},Component:m,PureComponent:g,unstable_AsyncComponent:b,Fragment:f,createElement:x,cloneElement:function(e,t,n){var o=r({},e.props),a=e.key,i=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(i=t.ref,u=k.current),void 0!==t.key&&(a=""+t.key),e.type&&e.type.defaultProps)var s=e.type.defaultProps;for(c in t)_.call(t,c)&&!C.hasOwnProperty(c)&&(o[c]=void 0===t[c]&&void 0!==s?s[c]:t[c])}var c=arguments.length-2;if(1===c)o.children=n;else if(1<c){s=Array(c);for(var f=0;f<c;f++)s[f]=arguments[f+2];o.children=s}return{$$typeof:l,type:e.type,key:a,ref:i,props:o,_owner:u}},createFactory:function(e){var t=x.bind(null,e);return t.type=e,t},isValidElement:E,version:"16.2.0",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:k,assign:r}},A=Object.freeze({default:R}),L=A&&R||A;e.exports=L.default?L.default:L},"./node_modules/react/index.js":function(e,t,n){"use strict";e.exports=n("./node_modules/react/cjs/react.production.min.js")},"./node_modules/util/node_modules/inherits/inherits_browser.js":function(e,t){"function"==typeof Object.create?e.exports=function(e,t){e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}})}:e.exports=function(e,t){e.super_=t;var n=function(){};n.prototype=t.prototype,e.prototype=new n,e.prototype.constructor=e}},"./node_modules/util/support/isBufferBrowser.js":function(e,t){e.exports=function(e){return e&&"object"==typeof e&&"function"==typeof e.copy&&"function"==typeof e.fill&&"function"==typeof e.readUInt8}},"./node_modules/util/util.js":function(e,t,n){(function(e,r){var o=/%[sdj%]/g;t.format=function(e){if(!v(e)){for(var t=[],n=0;n<arguments.length;n++)t.push(l(arguments[n]));return t.join(" ")}n=1;for(var r=arguments,a=r.length,i=String(e).replace(o,function(e){if("%%"===e)return"%";if(n>=a)return e;switch(e){case"%s":return String(r[n++]);case"%d":return Number(r[n++]);case"%j":try{return JSON.stringify(r[n++])}catch(e){return"[Circular]"}default:return e}}),u=r[n];n<a;u=r[++n])m(u)||!w(u)?i+=" "+u:i+=" "+l(u);return i},t.deprecate=function(n,o){if(y(e.process))return function(){return t.deprecate(n,o).apply(this,arguments)};if(!0===r.noDeprecation)return n;var a=!1;return function(){if(!a){if(r.throwDeprecation)throw new Error(o);r.traceDeprecation?console.trace(o):console.error(o),a=!0}return n.apply(this,arguments)}};var a,i={};function l(e,n){var r={seen:[],stylize:s};return arguments.length>=3&&(r.depth=arguments[2]),arguments.length>=4&&(r.colors=arguments[3]),h(n)?r.showHidden=n:n&&t._extend(r,n),y(r.showHidden)&&(r.showHidden=!1),y(r.depth)&&(r.depth=2),y(r.colors)&&(r.colors=!1),y(r.customInspect)&&(r.customInspect=!0),r.colors&&(r.stylize=u),c(r,e,r.depth)}function u(e,t){var n=l.styles[t];return n?"["+l.colors[n][0]+"m"+e+"["+l.colors[n][1]+"m":e}function s(e,t){return e}function c(e,n,r){if(e.customInspect&&n&&C(n.inspect)&&n.inspect!==t.inspect&&(!n.constructor||n.constructor.prototype!==n)){var o=n.inspect(r,e);return v(o)||(o=c(e,o,r)),o}var a=function(e,t){if(y(t))return e.stylize("undefined","undefined");if(v(t)){var n="'"+JSON.stringify(t).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return e.stylize(n,"string")}if(g(t))return e.stylize(""+t,"number");if(h(t))return e.stylize(""+t,"boolean");if(m(t))return e.stylize("null","null")}(e,n);if(a)return a;var i=Object.keys(n),l=function(e){var t={};return e.forEach(function(e,n){t[e]=!0}),t}(i);if(e.showHidden&&(i=Object.getOwnPropertyNames(n)),_(n)&&(i.indexOf("message")>=0||i.indexOf("description")>=0))return f(n);if(0===i.length){if(C(n)){var u=n.name?": "+n.name:"";return e.stylize("[Function"+u+"]","special")}if(b(n))return e.stylize(RegExp.prototype.toString.call(n),"regexp");if(k(n))return e.stylize(Date.prototype.toString.call(n),"date");if(_(n))return f(n)}var s,w="",x=!1,E=["{","}"];(d(n)&&(x=!0,E=["[","]"]),C(n))&&(w=" [Function"+(n.name?": "+n.name:"")+"]");return b(n)&&(w=" "+RegExp.prototype.toString.call(n)),k(n)&&(w=" "+Date.prototype.toUTCString.call(n)),_(n)&&(w=" "+f(n)),0!==i.length||x&&0!=n.length?r<0?b(n)?e.stylize(RegExp.prototype.toString.call(n),"regexp"):e.stylize("[Object]","special"):(e.seen.push(n),s=x?function(e,t,n,r,o){for(var a=[],i=0,l=t.length;i<l;++i)S(t,String(i))?a.push(p(e,t,n,r,String(i),!0)):a.push("");return o.forEach(function(o){o.match(/^\d+$/)||a.push(p(e,t,n,r,o,!0))}),a}(e,n,r,l,i):i.map(function(t){return p(e,n,r,l,t,x)}),e.seen.pop(),function(e,t,n){if(e.reduce(function(e,t){return 0,t.indexOf("\n")>=0&&0,e+t.replace(/\u001b\[\d\d?m/g,"").length+1},0)>60)return n[0]+(""===t?"":t+"\n ")+" "+e.join(",\n  ")+" "+n[1];return n[0]+t+" "+e.join(", ")+" "+n[1]}(s,w,E)):E[0]+w+E[1]}function f(e){return"["+Error.prototype.toString.call(e)+"]"}function p(e,t,n,r,o,a){var i,l,u;if((u=Object.getOwnPropertyDescriptor(t,o)||{value:t[o]}).get?l=u.set?e.stylize("[Getter/Setter]","special"):e.stylize("[Getter]","special"):u.set&&(l=e.stylize("[Setter]","special")),S(r,o)||(i="["+o+"]"),l||(e.seen.indexOf(u.value)<0?(l=m(n)?c(e,u.value,null):c(e,u.value,n-1)).indexOf("\n")>-1&&(l=a?l.split("\n").map(function(e){return"  "+e}).join("\n").substr(2):"\n"+l.split("\n").map(function(e){return"   "+e}).join("\n")):l=e.stylize("[Circular]","special")),y(i)){if(a&&o.match(/^\d+$/))return l;(i=JSON.stringify(""+o)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(i=i.substr(1,i.length-2),i=e.stylize(i,"name")):(i=i.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),i=e.stylize(i,"string"))}return i+": "+l}function d(e){return Array.isArray(e)}function h(e){return"boolean"==typeof e}function m(e){return null===e}function g(e){return"number"==typeof e}function v(e){return"string"==typeof e}function y(e){return void 0===e}function b(e){return w(e)&&"[object RegExp]"===x(e)}function w(e){return"object"==typeof e&&null!==e}function k(e){return w(e)&&"[object Date]"===x(e)}function _(e){return w(e)&&("[object Error]"===x(e)||e instanceof Error)}function C(e){return"function"==typeof e}function x(e){return Object.prototype.toString.call(e)}function E(e){return e<10?"0"+e.toString(10):e.toString(10)}t.debuglog=function(e){if(y(a)&&(a=r.env.NODE_DEBUG||""),e=e.toUpperCase(),!i[e])if(new RegExp("\\b"+e+"\\b","i").test(a)){var n=r.pid;i[e]=function(){var r=t.format.apply(t,arguments);console.error("%s %d: %s",e,n,r)}}else i[e]=function(){};return i[e]},t.inspect=l,l.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},l.styles={special:"cyan",number:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",date:"magenta",regexp:"red"},t.isArray=d,t.isBoolean=h,t.isNull=m,t.isNullOrUndefined=function(e){return null==e},t.isNumber=g,t.isString=v,t.isSymbol=function(e){return"symbol"==typeof e},t.isUndefined=y,t.isRegExp=b,t.isObject=w,t.isDate=k,t.isError=_,t.isFunction=C,t.isPrimitive=function(e){return null===e||"boolean"==typeof e||"number"==typeof e||"string"==typeof e||"symbol"==typeof e||void 0===e},t.isBuffer=n("./node_modules/util/support/isBufferBrowser.js");var T=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];function S(e,t){return Object.prototype.hasOwnProperty.call(e,t)}t.log=function(){var e,n;console.log("%s - %s",(e=new Date,n=[E(e.getHours()),E(e.getMinutes()),E(e.getSeconds())].join(":"),[e.getDate(),T[e.getMonth()],n].join(" ")),t.format.apply(t,arguments))},t.inherits=n("./node_modules/util/node_modules/inherits/inherits_browser.js"),t._extend=function(e,t){if(!t||!w(t))return e;for(var n=Object.keys(t),r=n.length;r--;)e[n[r]]=t[n[r]];return e}}).call(this,n("./node_modules/webpack/buildin/global.js"),n("./node_modules/process/browser.js"))},"./node_modules/webpack/buildin/global.js":function(e,t){var n;n=function(){return this}();try{n=n||Function("return this")()||(0,eval)("this")}catch(e){"object"==typeof window&&(n=window)}e.exports=n},"./src/Components/App/App.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n("./node_modules/react/index.js"),a=l(o),i=l(n("./src/Components/Markdown/Markdown.js"));function l(e){return e&&e.__esModule?e:{default:e}}n("./src/Components/App/App.scss");var u=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){return a.default.createElement("div",{className:"container"},a.default.createElement("header",null,"header"),a.default.createElement(i.default,null),a.default.createElement("footer",null,"footer"))}}]),t}();t.default=u},"./src/Components/App/App.scss":function(e,t){},"./src/Components/Editor/Editor.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n("./node_modules/react/index.js"),i=(r=a)&&r.__esModule?r:{default:r};n("./src/Components/Editor/Editor.scss");var l=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.Component),o(t,[{key:"render",value:function(){return i.default.createElement("textarea",{className:"editor",onScroll:this.props.handleScroll,onChange:this.props.handleTextChange,autoFocus:"true",defaultValue:this.props.text})}}]),t}();t.default=l},"./src/Components/Editor/Editor.scss":function(e,t){},"./src/Components/Markdown/Markdown.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n("./node_modules/react/index.js"),a=s(o),i=n("./node_modules/markdown/lib/index.js"),l=s(n("./src/Components/Editor/Editor.js")),u=s(n("./src/Components/Previewer/Previewer.js"));function s(e){return e&&e.__esModule?e:{default:e}}n("./src/Components/Markdown/Markdown.scss");var c="#Reactjs\n* ganesh\n* kumar\n* [ganesh](kumar)\n## Reactjs\n### Reactjs",f=function(e){function t(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var e=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return e.state={text:c,md:e.getMarkdown(c),scrollPercentage:0},e}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"getMarkdown",value:function(e){return i.markdown.toHTML(e.trim())}},{key:"getScrollPercentage",value:function(e){return e.scrollTop/(e.scrollHeight-e.offsetHeight)*100}},{key:"handleScroll",value:function(e){var t=this.getScrollPercentage(e.target);this.setState(function(){return{scrollPercentage:t}})}},{key:"handleTextChange",value:function(e){var t=e.target.value,n=this.getMarkdown(t);this.setState(function(){return{md:n,text:t}})}},{key:"render",value:function(){var e=this;return a.default.createElement("div",{className:"markdown"},a.default.createElement(l.default,{handleTextChange:function(t){return e.handleTextChange(t)},handleScroll:function(t){return e.handleScroll(t)},text:this.state.text}),a.default.createElement(u.default,{markdown:this.state.md,scrollPercentage:this.state.scrollPercentage}))}}]),t}();t.default=f},"./src/Components/Markdown/Markdown.scss":function(e,t){},"./src/Components/Previewer/Previewer.js":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n("./node_modules/react/index.js"),i=(r=a)&&r.__esModule?r:{default:r};n("./src/Components/Previewer/Previewer.scss");var l=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.Component),o(t,[{key:"componentDidMount",value:function(){this.previewerElement=document.querySelector(".previewer")}},{key:"componentWillReceiveProps",value:function(){var e=this.previewerElement.scrollHeight*this.props.scrollPercentage/100;this.previewerElement.scrollTop=0===Math.round(this.props.scrollPercentage)?0:e+20}},{key:"render",value:function(){return i.default.createElement("div",{className:"previewer",dangerouslySetInnerHTML:{__html:this.props.markdown}})}}]),t}();t.default=l},"./src/Components/Previewer/Previewer.scss":function(e,t){},"./src/index.js":function(e,t,n){"use strict";var r=i(n("./node_modules/react/index.js")),o=i(n("./node_modules/react-dom/index.js")),a=i(n("./src/Components/App/App.js"));function i(e){return e&&e.__esModule?e:{default:e}}n("./src/index.scss"),o.default.render(r.default.createElement(a.default,null),document.querySelector("#root"))},"./src/index.scss":function(e,t){}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL0V2ZW50TGlzdGVuZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL0V4ZWN1dGlvbkVudmlyb25tZW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9jb250YWluc05vZGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2VtcHR5RnVuY3Rpb24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2VtcHR5T2JqZWN0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9mb2N1c05vZGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2dldEFjdGl2ZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2lzTm9kZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvaXNUZXh0Tm9kZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvc2hhbGxvd0VxdWFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9tYXJrZG93bi9saWIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL21hcmtkb3duL2xpYi9tYXJrZG93bi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvb2JqZWN0LWFzc2lnbi9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvY2Vzcy9icm93c2VyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy91dGlsL25vZGVfbW9kdWxlcy9pbmhlcml0cy9pbmhlcml0c19icm93c2VyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy91dGlsL3N1cHBvcnQvaXNCdWZmZXJCcm93c2VyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy91dGlsL3V0aWwuanMiLCJ3ZWJwYWNrOi8vLyh3ZWJwYWNrKS9idWlsZGluL2dsb2JhbC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQ29tcG9uZW50cy9BcHAvQXBwLmpzIiwid2VicGFjazovLy8uL3NyYy9Db21wb25lbnRzL0VkaXRvci9FZGl0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0NvbXBvbmVudHMvTWFya2Rvd24vTWFya2Rvd24uanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0NvbXBvbmVudHMvUHJldmlld2VyL1ByZXZpZXdlci5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguanMiXSwibmFtZXMiOlsicGFyZW50SG90VXBkYXRlQ2FsbGJhY2siLCJ3aW5kb3ciLCJjaHVua0lkIiwibW9yZU1vZHVsZXMiLCJob3RBdmFpbGFibGVGaWxlc01hcCIsImhvdFJlcXVlc3RlZEZpbGVzTWFwIiwibW9kdWxlSWQiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJob3RVcGRhdGUiLCJob3RXYWl0aW5nRmlsZXMiLCJob3RDaHVua3NMb2FkaW5nIiwiaG90VXBkYXRlRG93bmxvYWRlZCIsImhvdEFkZFVwZGF0ZUNodW5rIiwiaG90Q3VycmVudENoaWxkTW9kdWxlIiwiaG90QXBwbHlPblVwZGF0ZSIsImhvdEN1cnJlbnRIYXNoIiwiaG90UmVxdWVzdFRpbWVvdXQiLCJob3RDdXJyZW50TW9kdWxlRGF0YSIsImhvdEN1cnJlbnRQYXJlbnRzIiwiaG90Q3VycmVudFBhcmVudHNUZW1wIiwiaG90Q3JlYXRlUmVxdWlyZSIsIm1lIiwiaW5zdGFsbGVkTW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJmbiIsInJlcXVlc3QiLCJob3QiLCJhY3RpdmUiLCJwYXJlbnRzIiwiaW5kZXhPZiIsInB1c2giLCJjaGlsZHJlbiIsImNvbnNvbGUiLCJ3YXJuIiwiT2JqZWN0RmFjdG9yeSIsIm5hbWUiLCJjb25maWd1cmFibGUiLCJlbnVtZXJhYmxlIiwiZ2V0Iiwic2V0IiwidmFsdWUiLCJkZWZpbmVQcm9wZXJ0eSIsImUiLCJob3RTdGF0dXMiLCJob3RTZXRTdGF0dXMiLCJ0aGVuIiwiZmluaXNoQ2h1bmtMb2FkaW5nIiwiZXJyIiwiaG90V2FpdGluZ0ZpbGVzTWFwIiwiaG90RW5zdXJlVXBkYXRlQ2h1bmsiLCJob3RTdGF0dXNIYW5kbGVycyIsIm5ld1N0YXR1cyIsImkiLCJsZW5ndGgiLCJob3REZWZlcnJlZCIsImhvdFVwZGF0ZU5ld0hhc2giLCJ0b01vZHVsZUlkIiwiaWQiLCJob3RDaGVjayIsImFwcGx5IiwiRXJyb3IiLCJyZXF1ZXN0VGltZW91dCIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwiWE1MSHR0cFJlcXVlc3QiLCJyZXF1ZXN0UGF0aCIsInAiLCJvcGVuIiwidGltZW91dCIsInNlbmQiLCJvbnJlYWR5c3RhdGVjaGFuZ2UiLCJyZWFkeVN0YXRlIiwic3RhdHVzIiwidXBkYXRlIiwiSlNPTiIsInBhcnNlIiwicmVzcG9uc2VUZXh0IiwiYyIsImgiLCJwcm9taXNlIiwiaGVhZCIsImRvY3VtZW50IiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJzY3JpcHQiLCJjcmVhdGVFbGVtZW50IiwiY2hhcnNldCIsInNyYyIsImFwcGVuZENoaWxkIiwiaG90RG93bmxvYWRVcGRhdGVDaHVuayIsImRlZmVycmVkIiwiaG90QXBwbHkiLCJyZXN1bHQiLCJvdXRkYXRlZE1vZHVsZXMiLCJvcHRpb25zIiwiY2IiLCJqIiwibW9kdWxlIiwiZ2V0QWZmZWN0ZWRTdHVmZiIsInVwZGF0ZU1vZHVsZUlkIiwib3V0ZGF0ZWREZXBlbmRlbmNpZXMiLCJxdWV1ZSIsInNsaWNlIiwibWFwIiwiY2hhaW4iLCJxdWV1ZUl0ZW0iLCJwb3AiLCJfc2VsZkFjY2VwdGVkIiwiX3NlbGZEZWNsaW5lZCIsInR5cGUiLCJfbWFpbiIsInBhcmVudElkIiwicGFyZW50IiwiX2RlY2xpbmVkRGVwZW5kZW5jaWVzIiwiY29uY2F0IiwiX2FjY2VwdGVkRGVwZW5kZW5jaWVzIiwiYWRkQWxsVG9TZXQiLCJhIiwiYiIsIml0ZW0iLCJhcHBsaWVkVXBkYXRlIiwid2FyblVuZXhwZWN0ZWRSZXF1aXJlIiwiYWJvcnRFcnJvciIsImRvQXBwbHkiLCJkb0Rpc3Bvc2UiLCJjaGFpbkluZm8iLCJqb2luIiwib25EZWNsaW5lZCIsImlnbm9yZURlY2xpbmVkIiwib25VbmFjY2VwdGVkIiwiaWdub3JlVW5hY2NlcHRlZCIsIm9uQWNjZXB0ZWQiLCJvbkRpc3Bvc2VkIiwiaWR4Iiwib3V0ZGF0ZWRTZWxmQWNjZXB0ZWRNb2R1bGVzIiwiZXJyb3JIYW5kbGVyIiwia2V5cyIsImZvckVhY2giLCJpbnN0YWxsZWRDaHVua3MiLCJob3REaXNwb3NlQ2h1bmsiLCJkZXBlbmRlbmN5IiwibW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXMiLCJkYXRhIiwiZGlzcG9zZUhhbmRsZXJzIiwiX2Rpc3Bvc2VIYW5kbGVycyIsImNoaWxkIiwic3BsaWNlIiwibW9kdWxlcyIsImVycm9yIiwiY2FsbGJhY2tzIiwib25FcnJvcmVkIiwiZGVwZW5kZW5jeUlkIiwiaWdub3JlRXJyb3JlZCIsImVycjIiLCJvcmlnaW5hbEVycm9yIiwiZXhwb3J0cyIsImwiLCJhY2NlcHQiLCJkZXAiLCJjYWxsYmFjayIsImRlY2xpbmUiLCJkaXNwb3NlIiwiYWRkRGlzcG9zZUhhbmRsZXIiLCJyZW1vdmVEaXNwb3NlSGFuZGxlciIsImNoZWNrIiwiYWRkU3RhdHVzSGFuZGxlciIsInJlbW92ZVN0YXR1c0hhbmRsZXIiLCJ1bmRlZmluZWQiLCJob3RDcmVhdGVNb2R1bGUiLCJtIiwiZCIsImdldHRlciIsIm8iLCJyIiwibiIsIl9fZXNNb2R1bGUiLCJvYmplY3QiLCJwcm9wZXJ0eSIsInMiLCJlbXB0eUZ1bmN0aW9uIiwiRXZlbnRMaXN0ZW5lciIsImxpc3RlbiIsInRhcmdldCIsImV2ZW50VHlwZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmUiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiYXR0YWNoRXZlbnQiLCJkZXRhY2hFdmVudCIsImNhcHR1cmUiLCJyZWdpc3RlckRlZmF1bHQiLCJjYW5Vc2VET00iLCJFeGVjdXRpb25FbnZpcm9ubWVudCIsImNhblVzZVdvcmtlcnMiLCJXb3JrZXIiLCJjYW5Vc2VFdmVudExpc3RlbmVycyIsImNhblVzZVZpZXdwb3J0Iiwic2NyZWVuIiwiaXNJbldvcmtlciIsImlzVGV4dE5vZGUiLCJjb250YWluc05vZGUiLCJvdXRlck5vZGUiLCJpbm5lck5vZGUiLCJwYXJlbnROb2RlIiwiY29udGFpbnMiLCJjb21wYXJlRG9jdW1lbnRQb3NpdGlvbiIsIm1ha2VFbXB0eUZ1bmN0aW9uIiwiYXJnIiwidGhhdFJldHVybnMiLCJ0aGF0UmV0dXJuc0ZhbHNlIiwidGhhdFJldHVybnNUcnVlIiwidGhhdFJldHVybnNOdWxsIiwidGhhdFJldHVybnNUaGlzIiwidGhpcyIsInRoYXRSZXR1cm5zQXJndW1lbnQiLCJub2RlIiwiZm9jdXMiLCJkb2MiLCJhY3RpdmVFbGVtZW50IiwiYm9keSIsImRlZmF1bHRWaWV3Iiwib3duZXJEb2N1bWVudCIsIk5vZGUiLCJub2RlVHlwZSIsIm5vZGVOYW1lIiwiaXNOb2RlIiwiaXMiLCJ4IiwieSIsIm9iakEiLCJvYmpCIiwia2V5c0EiLCJrZXlzQiIsIm1hcmtkb3duIiwidG9IVE1MIiwiZXhwb3NlIiwiTWFya2Rvd24iLCJkaWFsZWN0IiwiZGlhbGVjdHMiLCJHcnViZXIiLCJTdHJpbmciLCJlbV9zdGF0ZSIsInN0cm9uZ19zdGF0ZSIsImRlYnVnX2luZGVudCIsIm1rX2Jsb2NrX3RvU291cmNlIiwidW5ldmFsIiwidG9TdHJpbmciLCJ0cmFpbGluZyIsImxpbmVOdW1iZXIiLCJta19ibG9ja19pbnNwZWN0IiwidXRpbCIsImluc3BlY3QiLCJzb3VyY2UiLCJ0b1RyZWUiLCJpbnB1dCIsInRvSFRNTFRyZWUiLCJyZW5kZXJKc29uTUwiLCJhdHRycyIsImV4dHJhY3RfYXR0ciIsInJlZnMiLCJyZWZlcmVuY2VzIiwiaHRtbCIsImNvbnZlcnRfdHJlZV90b19odG1sIiwidHJlZSIsImpzb25tbCIsInByZXByb2Nlc3NUcmVlTm9kZSIsImxldmVsIiwiY29kZSIsImhyZWYiLCJyZWYiLCJvcmlnaW5hbCIsInRpdGxlIiwia2V5IiwibWVyZ2VfdGV4dF9ub2RlcyIsIm1rX2Jsb2NrIiwiYmxvY2siLCJ0cmFpbCIsImxpbmUiLCJhcmd1bWVudHMiLCJ0b1NvdXJjZSIsImNvdW50X2xpbmVzIiwic3RyIiwic3Ryb25nX2VtIiwidGFnIiwibWQiLCJzdGF0ZV9zbG90Iiwib3RoZXJfc2xvdCIsIkNsb3NlVGFnIiwibGVuIiwibGVuX2FmdGVyIiwidGV4dCIsIm9yaWdfbWF0Y2giLCJzaGlmdCIsIm90aGVyIiwic3RhdGUiLCJ1bnNoaWZ0IiwicmVzIiwicHJvY2Vzc0lubGluZSIsInN1YnN0ciIsImxhc3QiLCJzcGxpdF9ibG9ja3MiLCJzdGFydExpbmUiLCJyZXBsYWNlIiwicmUiLCJibG9ja3MiLCJsaW5lX25vIiwiZXhlYyIsImxhc3RJbmRleCIsInByb2Nlc3NCbG9jayIsIm5leHQiLCJjYnMiLCJvcmQiLCJfX29yZGVyX18iLCJfX2NhbGxfXyIsImlzQXJyYXkiLCJkZWJ1ZyIsImlubGluZSIsImN1c3RvbV9yb290IiwiQXJyYXkiLCJvbGRfdHJlZSIsImFyZ3MiLCJwcmludCIsImxvZyIsImxvb3BfcmVfb3Zlcl9ibG9jayIsInZhbHVlT2YiLCJhdHhIZWFkZXIiLCJtYXRjaCIsImhlYWRlciIsInNldGV4dEhlYWRlciIsInJldCIsImJsb2NrX3NlYXJjaCIsInN1YnN0cmluZyIsImhvcml6UnVsZSIsImxpc3RzIiwiYW55X2xpc3QiLCJidWxsZXRfbGlzdCIsImlzX2xpc3RfcmUiLCJSZWdFeHAiLCJpbmRlbnRfcmUiLCJhZGQiLCJsaSIsImxvb3NlIiwibmwiLCJhZGRfdG8iLCJ3aGF0IiwiZ2V0X2NvbnRhaW5lZF9ibG9ja3MiLCJkZXB0aCIsInBhcmFncmFwaGlmeSIsInN0YWNrIiwibGlzdCIsImxhc3RfbGkiLCJzdWJsaXN0IiwibWFrZV9saXN0IiwibGluZXMiLCJzcGxpdCIsImxpX2FjY3VtdWxhdGUiLCJsaW5lX3JlIiwid2FudGVkX2RlcHRoIiwiTWF0aCIsImZsb29yIiwiZm91bmQiLCJpbmRlbnQiLCJjb250YWluZWQiLCJuZXh0X2Jsb2NrIiwiaHIiLCJibG9ja3F1b3RlIiwicHJldiIsImFidXR0aW5nIiwicHJvY2Vzc2VkQmxvY2siLCJhdHRyIiwiaXNFbXB0eSIsInJlZmVyZW5jZURlZm4iLCJ0b0xvd2VyQ2FzZSIsInBhcmEiLCJfX29uZUVsZW1lbnRfXyIsInBhdHRlcm5zX29yX3JlIiwicHJldmlvdXNfbm9kZXMiLCJfX3BhdHRlcm5zX18iLCJpbmRleCIsInBhdHRlcm5zIiwib3V0IiwiXSIsIn0iLCJfX2VzY2FwZV9fIiwiXFwiLCJjaGFyQXQiLCIhWyIsImFsdCIsIlsiLCJvcmlnIiwiRGlhbGVjdEhlbHBlcnMiLCJpbmxpbmVfdW50aWxfY2hhciIsImxpbmsiLCJjb25zdW1lZCIsInVybCIsIm9wZW5fcGFyZW5zIiwiPCIsImAiLCIgIFxuIiwiYnVpbGRCbG9ja09yZGVyIiwiYnVpbGRJbmxpbmVQYXR0ZXJucyIsInBhdHRlcm4iLCJ3YW50Iiwibm9kZXMiLCJzdWJjbGFzc0RpYWxlY3QiLCJCbG9jayIsIklubGluZSIsIk1hcnVrdSIsInByb2Nlc3NNZXRhSGFzaCIsIm1ldGFfc3RyaW5nIiwibWV0YSIsInBhcnRzIiwiaW5fcXVvdGVzIiwibGV0dGVyIiwic3BsaXRfbWV0YV9oYXNoIiwidGVzdCIsImRvY3VtZW50X21ldGEiLCJwYWlycyIsImJsb2NrX21ldGEiLCJoYXNoIiwiZGVmaW5pdGlvbl9saXN0IiwidGlnaHQiLCJ0ZXJtcyIsImRlZm5zIiwidGFibGUiLCJfc3BsaXRfb25fdW5lc2NhcGVkIiwiY2giLCJodG1sX2F0dHJzIiwiYWxpZ24iLCJ0cmltIiwicm93IiwiaHRtbF9yb3ciLCJtYXRjaGVzIiwiYmVmb3JlIiwiayIsIm9iaiIsImFyciIsInRoaXNwIiwiZXNjYXBlSFRNTCIsInJlbmRlcl90cmVlIiwiYXR0cmlidXRlcyIsImNvbnRlbnQiLCJ0YWdfYXR0cnMiLCJyb290IiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwicHJvcElzRW51bWVyYWJsZSIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwiYXNzaWduIiwidGVzdDEiLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwidGVzdDIiLCJmcm9tQ2hhckNvZGUiLCJ0ZXN0MyIsInNob3VsZFVzZU5hdGl2ZSIsImZyb20iLCJzeW1ib2xzIiwidG8iLCJ2YWwiLCJUeXBlRXJyb3IiLCJ0b09iamVjdCIsImNhY2hlZFNldFRpbWVvdXQiLCJjYWNoZWRDbGVhclRpbWVvdXQiLCJwcm9jZXNzIiwiZGVmYXVsdFNldFRpbW91dCIsImRlZmF1bHRDbGVhclRpbWVvdXQiLCJydW5UaW1lb3V0IiwiZnVuIiwic2V0VGltZW91dCIsImNsZWFyVGltZW91dCIsImN1cnJlbnRRdWV1ZSIsImRyYWluaW5nIiwicXVldWVJbmRleCIsImNsZWFuVXBOZXh0VGljayIsImRyYWluUXVldWUiLCJydW4iLCJtYXJrZXIiLCJydW5DbGVhclRpbWVvdXQiLCJJdGVtIiwiYXJyYXkiLCJub29wIiwibmV4dFRpY2siLCJicm93c2VyIiwiZW52IiwiYXJndiIsInZlcnNpb24iLCJ2ZXJzaW9ucyIsIm9uIiwiYWRkTGlzdGVuZXIiLCJvbmNlIiwib2ZmIiwicmVtb3ZlTGlzdGVuZXIiLCJyZW1vdmVBbGxMaXN0ZW5lcnMiLCJlbWl0IiwicHJlcGVuZExpc3RlbmVyIiwicHJlcGVuZE9uY2VMaXN0ZW5lciIsImxpc3RlbmVycyIsImJpbmRpbmciLCJjd2QiLCJjaGRpciIsImRpciIsInVtYXNrIiwiYWEiLCJCIiwiQyIsImJhIiwiZGEiLCJlYSIsImZhIiwiaWEiLCJEIiwiRSIsImVuY29kZVVSSUNvbXBvbmVudCIsImZyYW1lc1RvUG9wIiwib2EiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsImRlZmF1bHRWYWx1ZSIsImRlZmF1bHRDaGVja2VkIiwiaW5uZXJIVE1MIiwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nIiwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nIiwic3R5bGUiLCJwYSIsInRhIiwiTVVTVF9VU0VfUFJPUEVSVFkiLCJIQVNfQk9PTEVBTl9WQUxVRSIsIkhBU19OVU1FUklDX1ZBTFVFIiwiSEFTX1BPU0lUSVZFX05VTUVSSUNfVkFMVUUiLCJIQVNfT1ZFUkxPQURFRF9CT09MRUFOX1ZBTFVFIiwiSEFTX1NUUklOR19CT09MRUFOX1ZBTFVFIiwiaW5qZWN0RE9NUHJvcGVydHlDb25maWciLCJQcm9wZXJ0aWVzIiwiRE9NQXR0cmlidXRlTmFtZXNwYWNlcyIsIkRPTUF0dHJpYnV0ZU5hbWVzIiwiZiIsIkRPTU11dGF0aW9uTWV0aG9kcyIsInVhIiwiZyIsImF0dHJpYnV0ZU5hbWUiLCJhdHRyaWJ1dGVOYW1lc3BhY2UiLCJwcm9wZXJ0eU5hbWUiLCJtdXRhdGlvbk1ldGhvZCIsIm11c3RVc2VQcm9wZXJ0eSIsImhhc0Jvb2xlYW5WYWx1ZSIsImhhc051bWVyaWNWYWx1ZSIsImhhc1Bvc2l0aXZlTnVtZXJpY1ZhbHVlIiwiaGFzT3ZlcmxvYWRlZEJvb2xlYW5WYWx1ZSIsImhhc1N0cmluZ0Jvb2xlYW5WYWx1ZSIsInZhIiwid2EiLCJ4YSIsInlhIiwiSyIsInphIiwiQWEiLCJCYSIsIkNhIiwiRGEiLCJhbGxvd0Z1bGxTY3JlZW4iLCJhc3luYyIsImF1dG9Gb2N1cyIsImF1dG9QbGF5IiwiY2hlY2tlZCIsImNvbHMiLCJjb250ZW50RWRpdGFibGUiLCJjb250cm9scyIsImRlZmF1bHQiLCJkZWZlciIsImRpc2FibGVkIiwiZG93bmxvYWQiLCJkcmFnZ2FibGUiLCJmb3JtTm9WYWxpZGF0ZSIsImhpZGRlbiIsImxvb3AiLCJtdWx0aXBsZSIsIm11dGVkIiwibm9WYWxpZGF0ZSIsInBsYXlzSW5saW5lIiwicmVhZE9ubHkiLCJyZXF1aXJlZCIsInJldmVyc2VkIiwicm93cyIsInJvd1NwYW4iLCJzY29wZWQiLCJzZWFtbGVzcyIsInNlbGVjdGVkIiwic2l6ZSIsInN0YXJ0Iiwic3BhbiIsInNwZWxsQ2hlY2siLCJ0YWJJbmRleCIsIml0ZW1TY29wZSIsImFjY2VwdENoYXJzZXQiLCJjbGFzc05hbWUiLCJodG1sRm9yIiwiaHR0cEVxdWl2IiwicmVtb3ZlQXR0cmlidXRlIiwiaGFzQXR0cmlidXRlIiwic2V0QXR0cmlidXRlIiwidmFsaWRpdHkiLCJiYWRJbnB1dCIsIkVhIiwiTSIsIkdhIiwiYXV0b1JldmVyc2UiLCJleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkIiwicHJlc2VydmVBbHBoYSIsInhsaW5rQWN0dWF0ZSIsInhsaW5rQXJjcm9sZSIsInhsaW5rSHJlZiIsInhsaW5rUm9sZSIsInhsaW5rU2hvdyIsInhsaW5rVGl0bGUiLCJ4bGlua1R5cGUiLCJ4bWxCYXNlIiwieG1sTGFuZyIsInhtbFNwYWNlIiwiSGEiLCJJYSIsInRvVXBwZXJDYXNlIiwiUCIsIl9jYXVnaHRFcnJvciIsIl9oYXNDYXVnaHRFcnJvciIsIl9yZXRocm93RXJyb3IiLCJfaGFzUmV0aHJvd0Vycm9yIiwiaW5qZWN0aW9uIiwiaW5qZWN0RXJyb3JVdGlscyIsImludm9rZUd1YXJkZWRDYWxsYmFjayIsIkphIiwiaW52b2tlR3VhcmRlZENhbGxiYWNrQW5kQ2F0Y2hGaXJzdEVycm9yIiwiaGFzQ2F1Z2h0RXJyb3IiLCJxIiwiY2xlYXJDYXVnaHRFcnJvciIsInJldGhyb3dDYXVnaHRFcnJvciIsInYiLCJMYSIsIk1hIiwiTmEiLCJPYSIsImV4dHJhY3RFdmVudHMiLCJldmVudFR5cGVzIiwiUGEiLCJwaGFzZWRSZWdpc3RyYXRpb25OYW1lcyIsIlFhIiwicmVnaXN0cmF0aW9uTmFtZSIsIlJhIiwiU2EiLCJkZXBlbmRlbmNpZXMiLCJUYSIsIlVhIiwiVmEiLCJmcmVlemUiLCJwbHVnaW5zIiwiZXZlbnROYW1lRGlzcGF0Y2hDb25maWdzIiwicmVnaXN0cmF0aW9uTmFtZU1vZHVsZXMiLCJyZWdpc3RyYXRpb25OYW1lRGVwZW5kZW5jaWVzIiwicG9zc2libGVSZWdpc3RyYXRpb25OYW1lcyIsImluamVjdEV2ZW50UGx1Z2luT3JkZXIiLCJpbmplY3RFdmVudFBsdWdpbnNCeU5hbWUiLCJXYSIsIlhhIiwiWWEiLCJaYSIsImN1cnJlbnRUYXJnZXQiLCIkYSIsImFiIiwiYmIiLCJfZGlzcGF0Y2hMaXN0ZW5lcnMiLCJfZGlzcGF0Y2hJbnN0YW5jZXMiLCJpc1Byb3BhZ2F0aW9uU3RvcHBlZCIsImlzUGVyc2lzdGVudCIsImNvbnN0cnVjdG9yIiwicmVsZWFzZSIsImRiIiwiZ2IiLCJoYiIsImliIiwic3RhdGVOb2RlIiwiamIiLCJrYiIsImxiIiwibWIiLCJnZXRMaXN0ZW5lciIsImVucXVldWVFdmVudHMiLCJwcm9jZXNzRXZlbnRRdWV1ZSIsIm5iIiwicmFuZG9tIiwiUSIsIm9iIiwicGIiLCJxYiIsInJiIiwic2IiLCJwcmVjYWNoZUZpYmVyTm9kZSIsImdldENsb3Nlc3RJbnN0YW5jZUZyb21Ob2RlIiwiZ2V0SW5zdGFuY2VGcm9tTm9kZSIsImdldE5vZGVGcm9tSW5zdGFuY2UiLCJnZXRGaWJlckN1cnJlbnRQcm9wc0Zyb21Ob2RlIiwidXBkYXRlRmliZXJQcm9wcyIsInRiIiwidWIiLCJ2YiIsImRpc3BhdGNoQ29uZmlnIiwid2IiLCJfdGFyZ2V0SW5zdCIsInhiIiwieWIiLCJ6YiIsIkFiIiwiQmIiLCJhbHRlcm5hdGUiLCJDYiIsImFjY3VtdWxhdGVUd29QaGFzZURpc3BhdGNoZXMiLCJhY2N1bXVsYXRlVHdvUGhhc2VEaXNwYXRjaGVzU2tpcFRhcmdldCIsImFjY3VtdWxhdGVFbnRlckxlYXZlRGlzcGF0Y2hlcyIsImFjY3VtdWxhdGVEaXJlY3REaXNwYXRjaGVzIiwiRGIiLCJFYiIsImRvY3VtZW50RWxlbWVudCIsIlMiLCJfcm9vdCIsIl9zdGFydFRleHQiLCJfZmFsbGJhY2tUZXh0IiwiRmIiLCJHYiIsIkhiIiwiSWIiLCJldmVudFBoYXNlIiwiYnViYmxlcyIsImNhbmNlbGFibGUiLCJ0aW1lU3RhbXAiLCJEYXRlIiwibm93IiwiZGVmYXVsdFByZXZlbnRlZCIsImlzVHJ1c3RlZCIsIlQiLCJuYXRpdmVFdmVudCIsIkludGVyZmFjZSIsImlzRGVmYXVsdFByZXZlbnRlZCIsInJldHVyblZhbHVlIiwiS2IiLCJldmVudFBvb2wiLCJMYiIsImRlc3RydWN0b3IiLCJKYiIsImdldFBvb2xlZCIsIk1iIiwiTmIiLCJwcmV2ZW50RGVmYXVsdCIsInN0b3BQcm9wYWdhdGlvbiIsImNhbmNlbEJ1YmJsZSIsInBlcnNpc3QiLCJhdWdtZW50Q2xhc3MiLCJYYiIsIlBiIiwiVmIiLCJXYiIsImRvY3VtZW50TW9kZSIsIlliIiwib3BlcmEiLCJwYXJzZUludCIsIlpiIiwiJGIiLCJhYyIsImJjIiwiYmVmb3JlSW5wdXQiLCJidWJibGVkIiwiY2FwdHVyZWQiLCJjb21wb3NpdGlvbkVuZCIsImNvbXBvc2l0aW9uU3RhcnQiLCJjb21wb3NpdGlvblVwZGF0ZSIsImNjIiwiZGMiLCJrZXlDb2RlIiwiZWMiLCJkZXRhaWwiLCJmYyIsImljIiwid2hpY2giLCJnYyIsImN0cmxLZXkiLCJhbHRLZXkiLCJtZXRhS2V5IiwiY2hhciIsImhjIiwiamMiLCJrYyIsImxjIiwibWMiLCJyZXN0b3JlQ29udHJvbGxlZFN0YXRlIiwibmMiLCJpbmplY3RGaWJlckNvbnRyb2xsZWRIb3N0Q29tcG9uZW50Iiwib2MiLCJwYyIsInFjIiwiZW5xdWV1ZVN0YXRlUmVzdG9yZSIsInJlc3RvcmVTdGF0ZUlmTmVlZGVkIiwicmMiLCJzYyIsInRjIiwieGMiLCJ1YyIsImNvbG9yIiwiZGF0ZSIsImRhdGV0aW1lIiwiZGF0ZXRpbWUtbG9jYWwiLCJlbWFpbCIsIm1vbnRoIiwibnVtYmVyIiwicGFzc3dvcmQiLCJyYW5nZSIsInNlYXJjaCIsInRlbCIsInRpbWUiLCJ3ZWVrIiwidmMiLCJ3YyIsInNyY0VsZW1lbnQiLCJjb3JyZXNwb25kaW5nVXNlRWxlbWVudCIsInljIiwiaW1wbGVtZW50YXRpb24iLCJoYXNGZWF0dXJlIiwiemMiLCJCYyIsIl92YWx1ZVRyYWNrZXIiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJnZXRWYWx1ZSIsInNldFZhbHVlIiwic3RvcFRyYWNraW5nIiwiQWMiLCJDYyIsIkRjIiwiY2hhbmdlIiwiRWMiLCJGYyIsIkdjIiwiSGMiLCJJYyIsIkpjIiwiS2MiLCJMYyIsIk1jIiwiTmMiLCJPYyIsIlBjIiwiJGMiLCJhZCIsIl9pc0lucHV0RXZlbnRTdXBwb3J0ZWQiLCJfd3JhcHBlclN0YXRlIiwiY29udHJvbGxlZCIsImdldEF0dHJpYnV0ZSIsImJkIiwidmlldyIsImNkIiwiQWx0IiwiQ29udHJvbCIsIk1ldGEiLCJTaGlmdCIsImRkIiwiZ2V0TW9kaWZpZXJTdGF0ZSIsImVkIiwiZmQiLCJzY3JlZW5YIiwic2NyZWVuWSIsImNsaWVudFgiLCJjbGllbnRZIiwicGFnZVgiLCJwYWdlWSIsInNoaWZ0S2V5IiwiYnV0dG9uIiwiYnV0dG9ucyIsInJlbGF0ZWRUYXJnZXQiLCJmcm9tRWxlbWVudCIsInRvRWxlbWVudCIsImdkIiwibW91c2VFbnRlciIsIm1vdXNlTGVhdmUiLCJoZCIsInBhcmVudFdpbmRvdyIsIl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEIiwiUmVhY3RDdXJyZW50T3duZXIiLCJqZCIsImRpc3BsYXlOYW1lIiwia2QiLCJlZmZlY3RUYWciLCJsZCIsIl9yZWFjdEludGVybmFsRmliZXIiLCJuZCIsInNpYmxpbmciLCJjdXJyZW50IiwicWQiLCJyZCIsInRhcmdldEluc3QiLCJhbmNlc3RvcnMiLCJjb250YWluZXJJbmZvIiwic2QiLCJ0b3BMZXZlbFR5cGUiLCJ0ZCIsInVkIiwiVSIsInZkIiwiYmluZCIsIndkIiwieGQiLCJfZW5hYmxlZCIsIl9oYW5kbGVUb3BMZXZlbCIsInNldEhhbmRsZVRvcExldmVsIiwic2V0RW5hYmxlZCIsImlzRW5hYmxlZCIsInRyYXBCdWJibGVkRXZlbnQiLCJ0cmFwQ2FwdHVyZWRFdmVudCIsImRpc3BhdGNoRXZlbnQiLCJ5ZCIsInpkIiwiYW5pbWF0aW9uZW5kIiwiYW5pbWF0aW9uaXRlcmF0aW9uIiwiYW5pbWF0aW9uc3RhcnQiLCJ0cmFuc2l0aW9uZW5kIiwiQWQiLCJCZCIsIkNkIiwiYW5pbWF0aW9uIiwidHJhbnNpdGlvbiIsIkRkIiwidG9wQWJvcnQiLCJ0b3BBbmltYXRpb25FbmQiLCJ0b3BBbmltYXRpb25JdGVyYXRpb24iLCJ0b3BBbmltYXRpb25TdGFydCIsInRvcEJsdXIiLCJ0b3BDYW5jZWwiLCJ0b3BDYW5QbGF5IiwidG9wQ2FuUGxheVRocm91Z2giLCJ0b3BDaGFuZ2UiLCJ0b3BDbGljayIsInRvcENsb3NlIiwidG9wQ29tcG9zaXRpb25FbmQiLCJ0b3BDb21wb3NpdGlvblN0YXJ0IiwidG9wQ29tcG9zaXRpb25VcGRhdGUiLCJ0b3BDb250ZXh0TWVudSIsInRvcENvcHkiLCJ0b3BDdXQiLCJ0b3BEb3VibGVDbGljayIsInRvcERyYWciLCJ0b3BEcmFnRW5kIiwidG9wRHJhZ0VudGVyIiwidG9wRHJhZ0V4aXQiLCJ0b3BEcmFnTGVhdmUiLCJ0b3BEcmFnT3ZlciIsInRvcERyYWdTdGFydCIsInRvcERyb3AiLCJ0b3BEdXJhdGlvbkNoYW5nZSIsInRvcEVtcHRpZWQiLCJ0b3BFbmNyeXB0ZWQiLCJ0b3BFbmRlZCIsInRvcEVycm9yIiwidG9wRm9jdXMiLCJ0b3BJbnB1dCIsInRvcEtleURvd24iLCJ0b3BLZXlQcmVzcyIsInRvcEtleVVwIiwidG9wTG9hZGVkRGF0YSIsInRvcExvYWQiLCJ0b3BMb2FkZWRNZXRhZGF0YSIsInRvcExvYWRTdGFydCIsInRvcE1vdXNlRG93biIsInRvcE1vdXNlTW92ZSIsInRvcE1vdXNlT3V0IiwidG9wTW91c2VPdmVyIiwidG9wTW91c2VVcCIsInRvcFBhc3RlIiwidG9wUGF1c2UiLCJ0b3BQbGF5IiwidG9wUGxheWluZyIsInRvcFByb2dyZXNzIiwidG9wUmF0ZUNoYW5nZSIsInRvcFNjcm9sbCIsInRvcFNlZWtlZCIsInRvcFNlZWtpbmciLCJ0b3BTZWxlY3Rpb25DaGFuZ2UiLCJ0b3BTdGFsbGVkIiwidG9wU3VzcGVuZCIsInRvcFRleHRJbnB1dCIsInRvcFRpbWVVcGRhdGUiLCJ0b3BUb2dnbGUiLCJ0b3BUb3VjaENhbmNlbCIsInRvcFRvdWNoRW5kIiwidG9wVG91Y2hNb3ZlIiwidG9wVG91Y2hTdGFydCIsInRvcFRyYW5zaXRpb25FbmQiLCJ0b3BWb2x1bWVDaGFuZ2UiLCJ0b3BXYWl0aW5nIiwidG9wV2hlZWwiLCJFZCIsIkZkIiwiR2QiLCJIZCIsIklkIiwiZmlyc3RDaGlsZCIsIkpkIiwidGV4dENvbnRlbnQiLCJvZmZzZXQiLCJuZXh0U2libGluZyIsIktkIiwiTGQiLCJNZCIsInNlbGVjdCIsIk5kIiwiT2QiLCJQZCIsIlFkIiwiUmQiLCJzZWxlY3Rpb25TdGFydCIsImVuZCIsInNlbGVjdGlvbkVuZCIsImdldFNlbGVjdGlvbiIsImFuY2hvck5vZGUiLCJhbmNob3JPZmZzZXQiLCJmb2N1c05vZGUiLCJmb2N1c09mZnNldCIsIlNkIiwib25TZWxlY3QiLCJUZCIsIlVkIiwiVmQiLCJXZCIsImNoYXJDb2RlIiwiYW5pbWF0aW9uTmFtZSIsImVsYXBzZWRUaW1lIiwicHNldWRvRWxlbWVudCIsImNsaXBib2FyZERhdGEiLCJYZCIsIkVzYyIsIlNwYWNlYmFyIiwiTGVmdCIsIlVwIiwiUmlnaHQiLCJEb3duIiwiRGVsIiwiV2luIiwiTWVudSIsIkFwcHMiLCJTY3JvbGwiLCJNb3pQcmludGFibGVLZXkiLCJZZCIsIjgiLCI5IiwiMTIiLCIxMyIsIjE2IiwiMTciLCIxOCIsIjE5IiwiMjAiLCIyNyIsIjMyIiwiMzMiLCIzNCIsIjM1IiwiMzYiLCIzNyIsIjM4IiwiMzkiLCI0MCIsIjQ1IiwiNDYiLCIxMTIiLCIxMTMiLCIxMTQiLCIxMTUiLCIxMTYiLCIxMTciLCIxMTgiLCIxMTkiLCIxMjAiLCIxMjEiLCIxMjIiLCIxMjMiLCIxNDQiLCIxNDUiLCIyMjQiLCJaZCIsIiRkIiwiYWUiLCJiZSIsImNlIiwibG9jYXRpb24iLCJyZXBlYXQiLCJsb2NhbGUiLCJkYXRhVHJhbnNmZXIiLCJ0b3VjaGVzIiwidGFyZ2V0VG91Y2hlcyIsImNoYW5nZWRUb3VjaGVzIiwiZGVsdGFYIiwid2hlZWxEZWx0YVgiLCJkZWx0YVkiLCJ3aGVlbERlbHRhWSIsIndoZWVsRGVsdGEiLCJkZWx0YVoiLCJkZWx0YU1vZGUiLCJkZSIsImVlIiwiZmUiLCJTaW1wbGVFdmVudFBsdWdpbiIsIkVudGVyTGVhdmVFdmVudFBsdWdpbiIsIkNoYW5nZUV2ZW50UGx1Z2luIiwiU2VsZWN0RXZlbnRQbHVnaW4iLCJCZWZvcmVJbnB1dEV2ZW50UGx1Z2luIiwiZ2UiLCJoZSIsIlYiLCJXIiwiU2V0IiwiaWUiLCJYIiwiamUiLCJrZSIsImxlIiwiY29udGV4dFR5cGVzIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dCIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0IiwiY2hpbGRDb250ZXh0VHlwZXMiLCJuZSIsIm9lIiwiY3Vyc29yIiwicGUiLCJnZXRDaGlsZENvbnRleHQiLCJxZSIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0IiwiWSIsIm1lbW9pemVkU3RhdGUiLCJ1cGRhdGVRdWV1ZSIsIm1lbW9pemVkUHJvcHMiLCJwZW5kaW5nUHJvcHMiLCJpbnRlcm5hbENvbnRleHRUYWciLCJsYXN0RWZmZWN0IiwiZmlyc3RFZmZlY3QiLCJuZXh0RWZmZWN0IiwiZXhwaXJhdGlvblRpbWUiLCJzZSIsInRlIiwiaXNSZWFjdENvbXBvbmVudCIsInByb3BzIiwidWUiLCJ2ZSIsIndlIiwiaGFuZGxlciIsInhlIiwieWUiLCJwZW5kaW5nQ2hpbGRyZW4iLCJ6ZSIsIkFlIiwiQmUiLCJEZSIsIkVlIiwiRmUiLCJiYXNlU3RhdGUiLCJmaXJzdCIsImNhbGxiYWNrTGlzdCIsImhhc0ZvcmNlVXBkYXRlIiwiaXNJbml0aWFsaXplZCIsIkdlIiwiSGUiLCJJZSIsInBhcnRpYWxTdGF0ZSIsIkplIiwiaXNSZXBsYWNlIiwiaXNGb3JjZWQiLCJLZSIsIlFlIiwiU3ltYm9sIiwiUmUiLCJTZSIsIlRlIiwiVWUiLCJWZSIsIldlIiwiaXRlcmF0b3IiLCJYZSIsIlllIiwiWmUiLCJfb3duZXIiLCJfc3RyaW5nUmVmIiwiJGUiLCJhZiIsIk1hcCIsInUiLCJ6IiwiJCR0eXBlb2YiLCJHIiwiSSIsIkwiLCJBIiwidyIsIk4iLCJkb25lIiwiSiIsImJmIiwiY2YiLCJkZiIsInJlbmRlciIsInBlbmRpbmdDb250ZXh0IiwiY29udGV4dCIsInNob3VsZFNldFRleHRDb250ZW50IiwidXNlU3luY1NjaGVkdWxpbmciLCJzaG91bGREZXByaW9yaXRpemVTdWJ0cmVlIiwicHVzaEhvc3RDb250ZXh0IiwicHVzaEhvc3RDb250YWluZXIiLCJlbnRlckh5ZHJhdGlvblN0YXRlIiwicmVzZXRIeWRyYXRpb25TdGF0ZSIsInRyeVRvQ2xhaW1OZXh0SHlkcmF0YWJsZUluc3RhbmNlIiwidXBkYXRlciIsImlzTW91bnRlZCIsImVucXVldWVTZXRTdGF0ZSIsIm5leHRDYWxsYmFjayIsImVucXVldWVSZXBsYWNlU3RhdGUiLCJlbnF1ZXVlRm9yY2VVcGRhdGUiLCJhZG9wdENsYXNzSW5zdGFuY2UiLCJjb25zdHJ1Y3RDbGFzc0luc3RhbmNlIiwibW91bnRDbGFzc0luc3RhbmNlIiwidW5zdGFibGVfaXNBc3luY1JlYWN0Q29tcG9uZW50IiwiY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50RGlkTW91bnQiLCJ1cGRhdGVDbGFzc0luc3RhbmNlIiwiY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsImNvbXBvbmVudERpZFVwZGF0ZSIsInNob3VsZENvbXBvbmVudFVwZGF0ZSIsImlzUHVyZVJlYWN0Q29tcG9uZW50IiwiY29tcG9uZW50V2lsbFVwZGF0ZSIsIkxlIiwiT2IiLCJiZWdpbldvcmsiLCJlbGVtZW50IiwiaHlkcmF0ZSIsImJlZ2luRmFpbGVkV29yayIsImdmIiwia2YiLCJRYiIsImphIiwiaXNSZWFkeUZvckNvbW1pdCIsInlnIiwidCIsInpnIiwiQWciLCJOZSIsIk9lIiwiU2MiLCJCZyIsIlRjIiwiQ2ciLCJEZyIsIkVnIiwiUiIsImNvbXBvbmVudERpZENhdGNoIiwiY29tcG9uZW50U3RhY2siLCJjYSIsIlFjIiwiaGEiLCJxYSIsIkZnIiwiSCIsInJnIiwiR2ciLCJVYyIsIkYiLCJyYSIsIlJjIiwiZWIiLCJxZyIsImhhcyIsIl9kZWJ1Z093bmVyIiwiX2RlYnVnU291cmNlIiwiZmlsZU5hbWUiLCJjb21wb25lbnROYW1lIiwiZXJyb3JCb3VuZGFyeSIsImVycm9yQm91bmRhcnlGb3VuZCIsImVycm9yQm91bmRhcnlOYW1lIiwid2lsbFJldHJ5Iiwic3VwcHJlc3NSZWFjdEVycm9yTG9nZ2luZyIsIlZjIiwia2EiLCJIZyIsIlJiIiwiSWciLCJuZXh0U2NoZWR1bGVkUm9vdCIsInJlbWFpbmluZ0V4cGlyYXRpb25UaW1lIiwiTyIsInNhIiwiRmEiLCJsYSIsIlNiIiwibWEiLCJuYSIsIldjIiwiUGUiLCJUYiIsIkpnIiwiWGMiLCJLZyIsImZiIiwiWWMiLCJVYiIsIlpjIiwiZmluaXNoZWRXb3JrIiwidGltZVJlbWFpbmluZyIsIkxnIiwiZ2V0Q2hpbGRIb3N0Q29udGV4dCIsImdldFJvb3RIb3N0Q29udGV4dCIsImdldEhvc3RDb250ZXh0IiwiZ2V0Um9vdEhvc3RDb250YWluZXIiLCJwb3BIb3N0Q29udGFpbmVyIiwicG9wSG9zdENvbnRleHQiLCJyZXNldEhvc3RDb250YWluZXIiLCJoZiIsImh5ZHJhdGlvbiIsInByZXBhcmVUb0h5ZHJhdGVIb3N0SW5zdGFuY2UiLCJwcmVwYXJlVG9IeWRyYXRlSG9zdFRleHRJbnN0YW5jZSIsInBvcEh5ZHJhdGlvblN0YXRlIiwiY2FuSHlkcmF0ZUluc3RhbmNlIiwiY2FuSHlkcmF0ZVRleHRJbnN0YW5jZSIsImdldE5leHRIeWRyYXRhYmxlU2libGluZyIsImdldEZpcnN0SHlkcmF0YWJsZUNoaWxkIiwiaHlkcmF0ZUluc3RhbmNlIiwiaHlkcmF0ZVRleHRJbnN0YW5jZSIsImpmIiwiTWUiLCJjcmVhdGVJbnN0YW5jZSIsImNyZWF0ZVRleHRJbnN0YW5jZSIsImFwcGVuZEluaXRpYWxDaGlsZCIsImZpbmFsaXplSW5pdGlhbENoaWxkcmVuIiwicHJlcGFyZVVwZGF0ZSIsInBlcnNpc3RlbmNlIiwibXV0YXRpb24iLCJjb21wbGV0ZVdvcmsiLCJlZiIsImNvbXBvbmVudFdpbGxVbm1vdW50IiwiZ2V0UHVibGljSW5zdGFuY2UiLCJjb21taXRNb3VudCIsImNvbW1pdFVwZGF0ZSIsInJlc2V0VGV4dENvbnRlbnQiLCJjb21taXRUZXh0VXBkYXRlIiwiYXBwZW5kQ2hpbGRUb0NvbnRhaW5lciIsImluc2VydEJlZm9yZSIsImluc2VydEluQ29udGFpbmVyQmVmb3JlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVDaGlsZEZyb21Db250YWluZXIiLCJjb21taXRSZXNldFRleHRDb250ZW50IiwiY29tbWl0UGxhY2VtZW50IiwiY29tbWl0RGVsZXRpb24iLCJjb21taXRXb3JrIiwiY29tbWl0TGlmZUN5Y2xlcyIsImNvbW1pdEF0dGFjaFJlZiIsImNvbW1pdERldGFjaFJlZiIsImZmIiwic2NoZWR1bGVEZWZlcnJlZENhbGxiYWNrIiwiY2FuY2VsRGVmZXJyZWRDYWxsYmFjayIsInByZXBhcmVGb3JDb21taXQiLCJyZXNldEFmdGVyQ29tbWl0IiwiY29tcHV0ZUFzeW5jRXhwaXJhdGlvbiIsImNvbXB1dGVFeHBpcmF0aW9uRm9yRmliZXIiLCJzY2hlZHVsZVdvcmsiLCJiYXRjaGVkVXBkYXRlcyIsInVuYmF0Y2hlZFVwZGF0ZXMiLCJmbHVzaFN5bmMiLCJkZWZlcnJlZFVwZGF0ZXMiLCJsZiIsIm9kIiwiY3JlYXRlQ29udGFpbmVyIiwidXBkYXRlQ29udGFpbmVyIiwiZ2V0UHVibGljUm9vdEluc3RhbmNlIiwiZmluZEhvc3RJbnN0YW5jZSIsImZpbmRIb3N0SW5zdGFuY2VXaXRoTm9Qb3J0YWxzIiwicGQiLCJpbmplY3RJbnRvRGV2VG9vbHMiLCJmaW5kRmliZXJCeUhvc3RJbnN0YW5jZSIsIl9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyIsImlzRGlzYWJsZWQiLCJzdXBwb3J0c0ZpYmVyIiwiaW5qZWN0Iiwib25Db21taXRGaWJlclJvb3QiLCJvbkNvbW1pdEZpYmVyVW5tb3VudCIsIkNlIiwiZmluZEhvc3RJbnN0YW5jZUJ5RmliZXIiLCJtZiIsIm5mIiwib2YiLCJxZiIsInBlcmZvcm1hbmNlIiwicmYiLCJzZiIsInRmIiwicmVxdWVzdElkbGVDYWxsYmFjayIsImNhbmNlbElkbGVDYWxsYmFjayIsIkJmIiwidWYiLCJ2ZiIsIndmIiwieGYiLCJ5ZiIsInpmIiwiQWYiLCJkaWRUaW1lb3V0IiwiQ2YiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJEZiIsInBvc3RNZXNzYWdlIiwiSW5maW5pdHkiLCJFZiIsIkZmIiwiR2YiLCJJZiIsImlzTmFOIiwiSmYiLCJzZXRBdHRyaWJ1dGVOUyIsIktmIiwiSGYiLCJMZiIsInN0ZXAiLCJtaW4iLCJtYXgiLCJpbml0aWFsVmFsdWUiLCJpbml0aWFsQ2hlY2tlZCIsIk1mIiwiTmYiLCJPZiIsInBhcnNlRmxvYXQiLCJQZiIsIlJmIiwiQ2hpbGRyZW4iLCJRZiIsIlNmIiwiZGVmYXVsdFNlbGVjdGVkIiwiVGYiLCJ3YXNNdWx0aXBsZSIsIlVmIiwiVmYiLCJXZiIsIlhmIiwiWWYiLCJaZiIsIiRmIiwiYWciLCJiZyIsIm5hbWVzcGFjZVVSSSIsIk1TQXBwIiwiZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24iLCJjZyIsImxhc3RDaGlsZCIsIm5vZGVWYWx1ZSIsImRnIiwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnQiLCJib3JkZXJJbWFnZU91dHNldCIsImJvcmRlckltYWdlU2xpY2UiLCJib3JkZXJJbWFnZVdpZHRoIiwiYm94RmxleCIsImJveEZsZXhHcm91cCIsImJveE9yZGluYWxHcm91cCIsImNvbHVtbkNvdW50IiwiY29sdW1ucyIsImZsZXgiLCJmbGV4R3JvdyIsImZsZXhQb3NpdGl2ZSIsImZsZXhTaHJpbmsiLCJmbGV4TmVnYXRpdmUiLCJmbGV4T3JkZXIiLCJncmlkUm93IiwiZ3JpZFJvd0VuZCIsImdyaWRSb3dTcGFuIiwiZ3JpZFJvd1N0YXJ0IiwiZ3JpZENvbHVtbiIsImdyaWRDb2x1bW5FbmQiLCJncmlkQ29sdW1uU3BhbiIsImdyaWRDb2x1bW5TdGFydCIsImZvbnRXZWlnaHQiLCJsaW5lQ2xhbXAiLCJsaW5lSGVpZ2h0Iiwib3BhY2l0eSIsIm9yZGVyIiwib3JwaGFucyIsInRhYlNpemUiLCJ3aWRvd3MiLCJ6SW5kZXgiLCJ6b29tIiwiZmlsbE9wYWNpdHkiLCJmbG9vZE9wYWNpdHkiLCJzdG9wT3BhY2l0eSIsInN0cm9rZURhc2hhcnJheSIsInN0cm9rZURhc2hvZmZzZXQiLCJzdHJva2VNaXRlcmxpbWl0Iiwic3Ryb2tlT3BhY2l0eSIsInN0cm9rZVdpZHRoIiwiZWciLCJmZyIsInNldFByb3BlcnR5IiwiZ2ciLCJtZW51aXRlbSIsImFyZWEiLCJiYXNlIiwiYnIiLCJjb2wiLCJlbWJlZCIsImltZyIsImtleWdlbiIsInBhcmFtIiwidHJhY2siLCJ3YnIiLCJoZyIsImlnIiwiamciLCJrZyIsImxnIiwibWciLCJuZyIsImNyZWF0ZUVsZW1lbnROUyIsIm9nIiwiY3JlYXRlVGV4dE5vZGUiLCJwZyIsIl9faHRtbCIsIm9uQ2xpY2siLCJvbmNsaWNrIiwic2ciLCJ0ZyIsInVnIiwidmciLCJ3ZyIsInNldEluaXRpYWxQcm9wZXJ0aWVzIiwiZGlmZlByb3BlcnRpZXMiLCJ1cGRhdGVQcm9wZXJ0aWVzIiwiZGlmZkh5ZHJhdGVkUHJvcGVydGllcyIsImRpZmZIeWRyYXRlZFRleHQiLCJ3YXJuRm9yVW5tYXRjaGVkVGV4dCIsIndhcm5Gb3JEZWxldGVkSHlkcmF0YWJsZUVsZW1lbnQiLCJ3YXJuRm9yRGVsZXRlZEh5ZHJhdGFibGVUZXh0Iiwid2FybkZvckluc2VydGVkSHlkcmF0ZWRFbGVtZW50Iiwid2FybkZvckluc2VydGVkSHlkcmF0ZWRUZXh0IiwicXVlcnlTZWxlY3RvckFsbCIsInN0cmluZ2lmeSIsImZvcm0iLCJ4ZyIsIk1nIiwiTmciLCJaIiwidGFnTmFtZSIsInJhbmdlQ291bnQiLCJmb2N1c2VkRWxlbSIsInNlbGVjdGlvblJhbmdlIiwiZXh0ZW5kIiwiY3JlYXRlUmFuZ2UiLCJzZXRTdGFydCIsInJlbW92ZUFsbFJhbmdlcyIsImFkZFJhbmdlIiwic2V0RW5kIiwibGVmdCIsInNjcm9sbExlZnQiLCJ0b3AiLCJzY3JvbGxUb3AiLCJkaWROb3RNYXRjaEh5ZHJhdGVkQ29udGFpbmVyVGV4dEluc3RhbmNlIiwiZGlkTm90TWF0Y2hIeWRyYXRlZFRleHRJbnN0YW5jZSIsImRpZE5vdEh5ZHJhdGVDb250YWluZXJJbnN0YW5jZSIsImRpZE5vdEh5ZHJhdGVJbnN0YW5jZSIsImRpZE5vdEZpbmRIeWRyYXRhYmxlQ29udGFpbmVySW5zdGFuY2UiLCJkaWROb3RGaW5kSHlkcmF0YWJsZUNvbnRhaW5lclRleHRJbnN0YW5jZSIsImRpZE5vdEZpbmRIeWRyYXRhYmxlSW5zdGFuY2UiLCJkaWROb3RGaW5kSHlkcmF0YWJsZVRleHRJbnN0YW5jZSIsIlBnIiwiX3JlYWN0Um9vdENvbnRhaW5lciIsIk9nIiwiUWciLCJwZiIsIlJnIiwidW5tb3VudCIsIlNnIiwiY3JlYXRlUG9ydGFsIiwiZmluZERPTU5vZGUiLCJ1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lciIsInVubW91bnRDb21wb25lbnRBdE5vZGUiLCJ1bnN0YWJsZV9jcmVhdGVQb3J0YWwiLCJ1bnN0YWJsZV9iYXRjaGVkVXBkYXRlcyIsInVuc3RhYmxlX2RlZmVycmVkVXBkYXRlcyIsIkV2ZW50UGx1Z2luSHViIiwiRXZlbnRQbHVnaW5SZWdpc3RyeSIsIkV2ZW50UHJvcGFnYXRvcnMiLCJSZWFjdENvbnRyb2xsZWRDb21wb25lbnQiLCJSZWFjdERPTUNvbXBvbmVudFRyZWUiLCJSZWFjdERPTUV2ZW50TGlzdGVuZXIiLCJidW5kbGVUeXBlIiwicmVuZGVyZXJQYWNrYWdlTmFtZSIsIlRnIiwiVWciLCJjaGVja0RDRSIsInNldFN0YXRlIiwiZm9yY2VVcGRhdGUiLCJfX3NlbGYiLCJfX3NvdXJjZSIsImRlZmF1bHRQcm9wcyIsImtleVByZWZpeCIsImZ1bmMiLCJjb3VudCIsIj0iLCI6IiwiZXNjYXBlIiwidG9BcnJheSIsIm9ubHkiLCJDb21wb25lbnQiLCJQdXJlQ29tcG9uZW50IiwidW5zdGFibGVfQXN5bmNDb21wb25lbnQiLCJGcmFnbWVudCIsImNsb25lRWxlbWVudCIsImNyZWF0ZUZhY3RvcnkiLCJpc1ZhbGlkRWxlbWVudCIsImNyZWF0ZSIsImN0b3IiLCJzdXBlckN0b3IiLCJzdXBlcl8iLCJ3cml0YWJsZSIsIlRlbXBDdG9yIiwiY29weSIsImZpbGwiLCJyZWFkVUludDgiLCJnbG9iYWwiLCJmb3JtYXRSZWdFeHAiLCJmb3JtYXQiLCJpc1N0cmluZyIsIm9iamVjdHMiLCJOdW1iZXIiLCJfIiwiaXNOdWxsIiwiaXNPYmplY3QiLCJkZXByZWNhdGUiLCJtc2ciLCJpc1VuZGVmaW5lZCIsIm5vRGVwcmVjYXRpb24iLCJ3YXJuZWQiLCJ0aHJvd0RlcHJlY2F0aW9uIiwidHJhY2VEZXByZWNhdGlvbiIsInRyYWNlIiwiZGVidWdFbnZpcm9uIiwiZGVidWdzIiwib3B0cyIsImN0eCIsInNlZW4iLCJzdHlsaXplIiwic3R5bGl6ZU5vQ29sb3IiLCJjb2xvcnMiLCJpc0Jvb2xlYW4iLCJzaG93SGlkZGVuIiwiX2V4dGVuZCIsImN1c3RvbUluc3BlY3QiLCJzdHlsaXplV2l0aENvbG9yIiwiZm9ybWF0VmFsdWUiLCJzdHlsZVR5cGUiLCJzdHlsZXMiLCJyZWN1cnNlVGltZXMiLCJpc0Z1bmN0aW9uIiwicHJpbWl0aXZlIiwic2ltcGxlIiwiaXNOdW1iZXIiLCJmb3JtYXRQcmltaXRpdmUiLCJ2aXNpYmxlS2V5cyIsImFycmF5VG9IYXNoIiwiaXNFcnJvciIsImZvcm1hdEVycm9yIiwiaXNSZWdFeHAiLCJpc0RhdGUiLCJvdXRwdXQiLCJicmFjZXMiLCJ0b1VUQ1N0cmluZyIsImZvcm1hdFByb3BlcnR5IiwiZm9ybWF0QXJyYXkiLCJyZWR1Y2UiLCJjdXIiLCJudW1MaW5lc0VzdCIsInJlZHVjZVRvU2luZ2xlU3RyaW5nIiwiZGVzYyIsImFyIiwib2JqZWN0VG9TdHJpbmciLCJwYWQiLCJkZWJ1Z2xvZyIsIk5PREVfREVCVUciLCJwaWQiLCJib2xkIiwiaXRhbGljIiwidW5kZXJsaW5lIiwiaW52ZXJzZSIsIndoaXRlIiwiZ3JleSIsImJsYWNrIiwiYmx1ZSIsImN5YW4iLCJncmVlbiIsIm1hZ2VudGEiLCJyZWQiLCJ5ZWxsb3ciLCJzcGVjaWFsIiwiYm9vbGVhbiIsIm51bGwiLCJzdHJpbmciLCJyZWdleHAiLCJpc051bGxPclVuZGVmaW5lZCIsImlzU3ltYm9sIiwiaXNQcmltaXRpdmUiLCJpc0J1ZmZlciIsIm1vbnRocyIsInByb3AiLCJnZXRIb3VycyIsImdldE1pbnV0ZXMiLCJnZXRTZWNvbmRzIiwiZ2V0RGF0ZSIsImdldE1vbnRoIiwiaW5oZXJpdHMiLCJvcmlnaW4iLCJGdW5jdGlvbiIsImV2YWwiLCJfcmVhY3QiLCJBcHAiLCJfcmVhY3QyIiwiX01hcmtkb3duMiIsIkVkaXRvciIsIm9uU2Nyb2xsIiwiaGFuZGxlU2Nyb2xsIiwib25DaGFuZ2UiLCJoYW5kbGVUZXh0Q2hhbmdlIiwiX21hcmtkb3duIiwiaW5pdGlhbFRleHQiLCJfY2xhc3NDYWxsQ2hlY2siLCJfdGhpcyIsIl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiX19wcm90b19fIiwiZ2V0UHJvdG90eXBlT2YiLCJnZXRNYXJrZG93biIsInNjcm9sbFBlcmNlbnRhZ2UiLCJfcmVmIiwic2Nyb2xsSGVpZ2h0Iiwib2Zmc2V0SGVpZ2h0IiwiZ2V0U2Nyb2xsUGVyY2VudGFnZSIsIl90aGlzMiIsIl9FZGl0b3IyIiwiX1ByZXZpZXdlcjIiLCJQcmV2aWV3ZXIiLCJwcmV2aWV3ZXJFbGVtZW50IiwicXVlcnlTZWxlY3RvciIsInJvdW5kIiwiX3JlYWN0RG9tMiIsIl9BcHAyIl0sIm1hcHBpbmdzIjoiYUFHQSxJQUFBQSxFQUFBQyxPQUFBLGlCQUNBQSxPQUFBLGlCQUNBLFNBQUFDLEVBQUFDLElBb1FBLFNBQUFELEVBQUFDLEdBQ0EsSUFBQUMsRUFBQUYsS0FBQUcsRUFBQUgsR0FDQSxPQUVBLFFBQUFJLEtBREFELEVBQUFILElBQUEsRUFDQUMsRUFDQUksT0FBQUMsVUFBQUMsZUFBQUMsS0FBQVAsRUFBQUcsS0FDQUssRUFBQUwsR0FBQUgsRUFBQUcsSUFHQSxLQUFBTSxHQUFBLElBQUFDLEdBQ0FDLElBN1FBQyxDQUFBYixFQUFBQyxHQUNBSCxLQUFBRSxFQUFBQyxJQXVEQSxJQUlBYSxFQUpBQyxHQUFBLEVBQ0FDLEVBQUEsdUJBQ0FDLEVBQUEsSUFDQUMsS0FFQUMsS0FDQUMsS0FHQSxTQUFBQyxFQUFBakIsR0FDQSxJQUFBa0IsRUFBQUMsRUFBQW5CLEdBQ0EsSUFBQWtCLEVBQUEsT0FBQUUsRUFDQSxJQUFBQyxFQUFBLFNBQUFDLEdBbUJBLE9BbEJBSixFQUFBSyxJQUFBQyxRQUNBTCxFQUFBRyxJQUNBLElBQUFILEVBQUFHLEdBQUFHLFFBQUFDLFFBQUExQixJQUNBbUIsRUFBQUcsR0FBQUcsUUFBQUUsS0FBQTNCLElBRUFlLEdBQUFmLEdBQ0FVLEVBQUFZLElBRUEsSUFBQUosRUFBQVUsU0FBQUYsUUFBQUosSUFBQUosRUFBQVUsU0FBQUQsS0FBQUwsS0FFQU8sUUFBQUMsS0FDQSw0QkFDQVIsRUFDQSwwQkFDQXRCLEdBRUFlLE1BRUFLLEVBQUFFLElBRUFTLEVBQUEsU0FBQUMsR0FDQSxPQUNBQyxjQUFBLEVBQ0FDLFlBQUEsRUFDQUMsSUFBQSxXQUNBLE9BQUFmLEVBQUFZLElBRUFJLElBQUEsU0FBQUMs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NW5DLFFBQUFoZSxjQUFBaW5ELEVBQUFqcEMsU0FDRWtvQyxpQkFBa0IsU0FBQTdvRCxHQUFBLE9BQUsycEQsRUFBS2QsaUJBQWlCN29ELElBQzdDMm9ELGFBQWMsU0FBQTNvRCxHQUFBLE9BQUsycEQsRUFBS2hCLGFBQWEzb0QsSUFDckN3UCxLQUFNN0UsS0FBS2lGLE1BQU1KLE9BRW5CKzRDLEVBQUE1bkMsUUFBQWhlLGNBQUFrbkQsRUFBQWxwQyxTQUNFNVUsU0FBVXBCLEtBQUtpRixNQUFNVixHQUNyQm82QyxpQkFBa0IzK0MsS0FBS2lGLE1BQU0wNUMsdUNBT3hCcDlDLGdiQzdEZm04QyxFQUFBeHBELEVBQUEscUVBQ0FBLEVBQUEsaURBRU1pckQsNHVCQUVGbi9DLEtBQUtvL0MsaUJBQW1Cdm5ELFNBQVN3bkQsY0FBYyxrRUFJL0MsSUFBTVYsRUFDSDMrQyxLQUFLby9DLGlCQUFpQlAsYUFBZTcrQyxLQUFLKzVCLE1BQU00a0IsaUJBQW9CLElBRXZFMytDLEtBQUtvL0MsaUJBQWlCeEwsVUFBd0QsSUFBNUMzcUMsS0FBS3EyQyxNQUFNdC9DLEtBQUsrNUIsTUFBTTRrQixrQkFDcEQsRUFDQUEsRUFBbUIsb0NBSXZCLE9BQ0VmLEVBQUE1bkMsUUFBQWhlLGNBQUEsT0FBSzJmLFVBQVUsWUFBWTlFLHlCQUEyQnkrQixPQUFRdHhDLEtBQUsrNUIsTUFBTTM0QiwrQkFLaEUrOUMsNkdDeEJmLFFBQUFqckQsRUFBQSxzQ0FDQUEsRUFBQSwwQ0FDQUEsRUFBQSxtRkFDQUEsRUFBQSxvQkFFQXFyRCxFQUFBdnBDLFFBQVN5bkIsT0FBT21nQixFQUFBNW5DLFFBQUFoZSxjQUFBd25ELEVBQUF4cEMsUUFBQSxNQUFTbmUsU0FBU3duRCxjQUFjIiwiZmlsZSI6ImluZGV4LjcxZGVhZmYyYTZlMGE0NTRhZTYxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0ZnVuY3Rpb24gaG90RGlzcG9zZUNodW5rKGNodW5rSWQpIHtcbiBcdFx0ZGVsZXRlIGluc3RhbGxlZENodW5rc1tjaHVua0lkXTtcbiBcdH1cbiBcdHZhciBwYXJlbnRIb3RVcGRhdGVDYWxsYmFjayA9IHdpbmRvd1tcIndlYnBhY2tIb3RVcGRhdGVcIl07XG4gXHR3aW5kb3dbXCJ3ZWJwYWNrSG90VXBkYXRlXCJdID0gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG4gXHRmdW5jdGlvbiB3ZWJwYWNrSG90VXBkYXRlQ2FsbGJhY2soY2h1bmtJZCwgbW9yZU1vZHVsZXMpIHtcbiBcdFx0aG90QWRkVXBkYXRlQ2h1bmsoY2h1bmtJZCwgbW9yZU1vZHVsZXMpO1xuIFx0XHRpZiAocGFyZW50SG90VXBkYXRlQ2FsbGJhY2spIHBhcmVudEhvdFVwZGF0ZUNhbGxiYWNrKGNodW5rSWQsIG1vcmVNb2R1bGVzKTtcbiBcdH0gO1xuXG4gXHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnNcbiBcdGZ1bmN0aW9uIGhvdERvd25sb2FkVXBkYXRlQ2h1bmsoY2h1bmtJZCkge1xuIFx0XHR2YXIgaGVhZCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiaGVhZFwiKVswXTtcbiBcdFx0dmFyIHNjcmlwdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzY3JpcHRcIik7XG4gXHRcdHNjcmlwdC5jaGFyc2V0ID0gXCJ1dGYtOFwiO1xuIFx0XHRzY3JpcHQuc3JjID0gX193ZWJwYWNrX3JlcXVpcmVfXy5wICsgXCJcIiArIGNodW5rSWQgKyBcIi5cIiArIGhvdEN1cnJlbnRIYXNoICsgXCIuaG90LXVwZGF0ZS5qc1wiO1xuIFx0XHQ7XG4gXHRcdGhlYWQuYXBwZW5kQ2hpbGQoc2NyaXB0KTtcbiBcdH1cblxuIFx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG4gXHRmdW5jdGlvbiBob3REb3dubG9hZE1hbmlmZXN0KHJlcXVlc3RUaW1lb3V0KSB7XG4gXHRcdHJlcXVlc3RUaW1lb3V0ID0gcmVxdWVzdFRpbWVvdXQgfHwgMTAwMDA7XG4gXHRcdHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpIHtcbiBcdFx0XHRpZiAodHlwZW9mIFhNTEh0dHBSZXF1ZXN0ID09PSBcInVuZGVmaW5lZFwiKVxuIFx0XHRcdFx0cmV0dXJuIHJlamVjdChuZXcgRXJyb3IoXCJObyBicm93c2VyIHN1cHBvcnRcIikpO1xuIFx0XHRcdHRyeSB7XG4gXHRcdFx0XHR2YXIgcmVxdWVzdCA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xuIFx0XHRcdFx0dmFyIHJlcXVlc3RQYXRoID0gX193ZWJwYWNrX3JlcXVpcmVfXy5wICsgXCJcIiArIGhvdEN1cnJlbnRIYXNoICsgXCIuaG90LXVwZGF0ZS5qc29uXCI7XG4gXHRcdFx0XHRyZXF1ZXN0Lm9wZW4oXCJHRVRcIiwgcmVxdWVzdFBhdGgsIHRydWUpO1xuIFx0XHRcdFx0cmVxdWVzdC50aW1lb3V0ID0gcmVxdWVzdFRpbWVvdXQ7XG4gXHRcdFx0XHRyZXF1ZXN0LnNlbmQobnVsbCk7XG4gXHRcdFx0fSBjYXRjaCAoZXJyKSB7XG4gXHRcdFx0XHRyZXR1cm4gcmVqZWN0KGVycik7XG4gXHRcdFx0fVxuIFx0XHRcdHJlcXVlc3Qub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24oKSB7XG4gXHRcdFx0XHRpZiAocmVxdWVzdC5yZWFkeVN0YXRlICE9PSA0KSByZXR1cm47XG4gXHRcdFx0XHRpZiAocmVxdWVzdC5zdGF0dXMgPT09IDApIHtcbiBcdFx0XHRcdFx0Ly8gdGltZW91dFxuIFx0XHRcdFx0XHRyZWplY3QoXG4gXHRcdFx0XHRcdFx0bmV3IEVycm9yKFwiTWFuaWZlc3QgcmVxdWVzdCB0byBcIiArIHJlcXVlc3RQYXRoICsgXCIgdGltZWQgb3V0LlwiKVxuIFx0XHRcdFx0XHQpO1xuIFx0XHRcdFx0fSBlbHNlIGlmIChyZXF1ZXN0LnN0YXR1cyA9PT0gNDA0KSB7XG4gXHRcdFx0XHRcdC8vIG5vIHVwZGF0ZSBhdmFpbGFibGVcbiBcdFx0XHRcdFx0cmVzb2x2ZSgpO1xuIFx0XHRcdFx0fSBlbHNlIGlmIChyZXF1ZXN0LnN0YXR1cyAhPT0gMjAwICYmIHJlcXVlc3Quc3RhdHVzICE9PSAzMDQpIHtcbiBcdFx0XHRcdFx0Ly8gb3RoZXIgZmFpbHVyZVxuIFx0XHRcdFx0XHRyZWplY3QobmV3IEVycm9yKFwiTWFuaWZlc3QgcmVxdWVzdCB0byBcIiArIHJlcXVlc3RQYXRoICsgXCIgZmFpbGVkLlwiKSk7XG4gXHRcdFx0XHR9IGVsc2Uge1xuIFx0XHRcdFx0XHQvLyBzdWNjZXNzXG4gXHRcdFx0XHRcdHRyeSB7XG4gXHRcdFx0XHRcdFx0dmFyIHVwZGF0ZSA9IEpTT04ucGFyc2UocmVxdWVzdC5yZXNwb25zZVRleHQpO1xuIFx0XHRcdFx0XHR9IGNhdGNoIChlKSB7XG4gXHRcdFx0XHRcdFx0cmVqZWN0KGUpO1xuIFx0XHRcdFx0XHRcdHJldHVybjtcbiBcdFx0XHRcdFx0fVxuIFx0XHRcdFx0XHRyZXNvbHZlKHVwZGF0ZSk7XG4gXHRcdFx0XHR9XG4gXHRcdFx0fTtcbiBcdFx0fSk7XG4gXHR9XG5cbiBcdHZhciBob3RBcHBseU9uVXBkYXRlID0gdHJ1ZTtcbiBcdHZhciBob3RDdXJyZW50SGFzaCA9IFwiNzFkZWFmZjJhNmUwYTQ1NGFlNjFcIjsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFyc1xuIFx0dmFyIGhvdFJlcXVlc3RUaW1lb3V0ID0gMTAwMDA7XG4gXHR2YXIgaG90Q3VycmVudE1vZHVsZURhdGEgPSB7fTtcbiBcdHZhciBob3RDdXJyZW50Q2hpbGRNb2R1bGU7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnNcbiBcdHZhciBob3RDdXJyZW50UGFyZW50cyA9IFtdOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXG4gXHR2YXIgaG90Q3VycmVudFBhcmVudHNUZW1wID0gW107IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnNcblxuIFx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG4gXHRmdW5jdGlvbiBob3RDcmVhdGVSZXF1aXJlKG1vZHVsZUlkKSB7XG4gXHRcdHZhciBtZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdO1xuIFx0XHRpZiAoIW1lKSByZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXztcbiBcdFx0dmFyIGZuID0gZnVuY3Rpb24ocmVxdWVzdCkge1xuIFx0XHRcdGlmIChtZS5ob3QuYWN0aXZlKSB7XG4gXHRcdFx0XHRpZiAoaW5zdGFsbGVkTW9kdWxlc1tyZXF1ZXN0XSkge1xuIFx0XHRcdFx0XHRpZiAoaW5zdGFsbGVkTW9kdWxlc1tyZXF1ZXN0XS5wYXJlbnRzLmluZGV4T2YobW9kdWxlSWQpID09PSAtMSlcbiBcdFx0XHRcdFx0XHRpbnN0YWxsZWRNb2R1bGVzW3JlcXVlc3RdLnBhcmVudHMucHVzaChtb2R1bGVJZCk7XG4gXHRcdFx0XHR9IGVsc2Uge1xuIFx0XHRcdFx0XHRob3RDdXJyZW50UGFyZW50cyA9IFttb2R1bGVJZF07XG4gXHRcdFx0XHRcdGhvdEN1cnJlbnRDaGlsZE1vZHVsZSA9IHJlcXVlc3Q7XG4gXHRcdFx0XHR9XG4gXHRcdFx0XHRpZiAobWUuY2hpbGRyZW4uaW5kZXhPZihyZXF1ZXN0KSA9PT0gLTEpIG1lLmNoaWxkcmVuLnB1c2gocmVxdWVzdCk7XG4gXHRcdFx0fSBlbHNlIHtcbiBcdFx0XHRcdGNvbnNvbGUud2FybihcbiBcdFx0XHRcdFx0XCJbSE1SXSB1bmV4cGVjdGVkIHJlcXVpcmUoXCIgK1xuIFx0XHRcdFx0XHRcdHJlcXVlc3QgK1xuIFx0XHRcdFx0XHRcdFwiKSBmcm9tIGRpc3Bvc2VkIG1vZHVsZSBcIiArXG4gXHRcdFx0XHRcdFx0bW9kdWxlSWRcbiBcdFx0XHRcdCk7XG4gXHRcdFx0XHRob3RDdXJyZW50UGFyZW50cyA9IFtdO1xuIFx0XHRcdH1cbiBcdFx0XHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhyZXF1ZXN0KTtcbiBcdFx0fTtcbiBcdFx0dmFyIE9iamVjdEZhY3RvcnkgPSBmdW5jdGlvbiBPYmplY3RGYWN0b3J5KG5hbWUpIHtcbiBcdFx0XHRyZXR1cm4ge1xuIFx0XHRcdFx0Y29uZmlndXJhYmxlOiB0cnVlLFxuIFx0XHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcbiBcdFx0XHRcdGdldDogZnVuY3Rpb24oKSB7XG4gXHRcdFx0XHRcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fW25hbWVdO1xuIFx0XHRcdFx0fSxcbiBcdFx0XHRcdHNldDogZnVuY3Rpb24odmFsdWUpIHtcbiBcdFx0XHRcdFx0X193ZWJwYWNrX3JlcXVpcmVfX1tuYW1lXSA9IHZhbHVlO1xuIFx0XHRcdFx0fVxuIFx0XHRcdH07XG4gXHRcdH07XG4gXHRcdGZvciAodmFyIG5hbWUgaW4gX193ZWJwYWNrX3JlcXVpcmVfXykge1xuIFx0XHRcdGlmIChcbiBcdFx0XHRcdE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChfX3dlYnBhY2tfcmVxdWlyZV9fLCBuYW1lKSAmJlxuIFx0XHRcdFx0bmFtZSAhPT0gXCJlXCJcbiBcdFx0XHQpIHtcbiBcdFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShmbiwgbmFtZSwgT2JqZWN0RmFjdG9yeShuYW1lKSk7XG4gXHRcdFx0fVxuIFx0XHR9XG4gXHRcdGZuLmUgPSBmdW5jdGlvbihjaHVua0lkKSB7XG4gXHRcdFx0aWYgKGhvdFN0YXR1cyA9PT0gXCJyZWFkeVwiKSBob3RTZXRTdGF0dXMoXCJwcmVwYXJlXCIpO1xuIFx0XHRcdGhvdENodW5rc0xvYWRpbmcrKztcbiBcdFx0XHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXy5lKGNodW5rSWQpLnRoZW4oZmluaXNoQ2h1bmtMb2FkaW5nLCBmdW5jdGlvbihlcnIpIHtcbiBcdFx0XHRcdGZpbmlzaENodW5rTG9hZGluZygpO1xuIFx0XHRcdFx0dGhyb3cgZXJyO1xuIFx0XHRcdH0pO1xuXG4gXHRcdFx0ZnVuY3Rpb24gZmluaXNoQ2h1bmtMb2FkaW5nKCkge1xuIFx0XHRcdFx0aG90Q2h1bmtzTG9hZGluZy0tO1xuIFx0XHRcdFx0aWYgKGhvdFN0YXR1cyA9PT0gXCJwcmVwYXJlXCIpIHtcbiBcdFx0XHRcdFx0aWYgKCFob3RXYWl0aW5nRmlsZXNNYXBbY2h1bmtJZF0pIHtcbiBcdFx0XHRcdFx0XHRob3RFbnN1cmVVcGRhdGVDaHVuayhjaHVua0lkKTtcbiBcdFx0XHRcdFx0fVxuIFx0XHRcdFx0XHRpZiAoaG90Q2h1bmtzTG9hZGluZyA9PT0gMCAmJiBob3RXYWl0aW5nRmlsZXMgPT09IDApIHtcbiBcdFx0XHRcdFx0XHRob3RVcGRhdGVEb3dubG9hZGVkKCk7XG4gXHRcdFx0XHRcdH1cbiBcdFx0XHRcdH1cbiBcdFx0XHR9XG4gXHRcdH07XG4gXHRcdHJldHVybiBmbjtcbiBcdH1cblxuIFx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG4gXHRmdW5jdGlvbiBob3RDcmVhdGVNb2R1bGUobW9kdWxlSWQpIHtcbiBcdFx0dmFyIGhvdCA9IHtcbiBcdFx0XHQvLyBwcml2YXRlIHN0dWZmXG4gXHRcdFx0X2FjY2VwdGVkRGVwZW5kZW5jaWVzOiB7fSxcbiBcdFx0XHRfZGVjbGluZWREZXBlbmRlbmNpZXM6IHt9LFxuIFx0XHRcdF9zZWxmQWNjZXB0ZWQ6IGZhbHNlLFxuIFx0XHRcdF9zZWxmRGVjbGluZWQ6IGZhbHNlLFxuIFx0XHRcdF9kaXNwb3NlSGFuZGxlcnM6IFtdLFxuIFx0XHRcdF9tYWluOiBob3RDdXJyZW50Q2hpbGRNb2R1bGUgIT09IG1vZHVsZUlkLFxuXG4gXHRcdFx0Ly8gTW9kdWxlIEFQSVxuIFx0XHRcdGFjdGl2ZTogdHJ1ZSxcbiBcdFx0XHRhY2NlcHQ6IGZ1bmN0aW9uKGRlcCwgY2FsbGJhY2spIHtcbiBcdFx0XHRcdGlmICh0eXBlb2YgZGVwID09PSBcInVuZGVmaW5lZFwiKSBob3QuX3NlbGZBY2NlcHRlZCA9IHRydWU7XG4gXHRcdFx0XHRlbHNlIGlmICh0eXBlb2YgZGVwID09PSBcImZ1bmN0aW9uXCIpIGhvdC5fc2VsZkFjY2VwdGVkID0gZGVwO1xuIFx0XHRcdFx0ZWxzZSBpZiAodHlwZW9mIGRlcCA9PT0gXCJvYmplY3RcIilcbiBcdFx0XHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBkZXAubGVuZ3RoOyBpKyspXG4gXHRcdFx0XHRcdFx0aG90Ll9hY2NlcHRlZERlcGVuZGVuY2llc1tkZXBbaV1dID0gY2FsbGJhY2sgfHwgZnVuY3Rpb24oKSB7fTtcbiBcdFx0XHRcdGVsc2UgaG90Ll9hY2NlcHRlZERlcGVuZGVuY2llc1tkZXBdID0gY2FsbGJhY2sgfHwgZnVuY3Rpb24oKSB7fTtcbiBcdFx0XHR9LFxuIFx0XHRcdGRlY2xpbmU6IGZ1bmN0aW9uKGRlcCkge1xuIFx0XHRcdFx0aWYgKHR5cGVvZiBkZXAgPT09IFwidW5kZWZpbmVkXCIpIGhvdC5fc2VsZkRlY2xpbmVkID0gdHJ1ZTtcbiBcdFx0XHRcdGVsc2UgaWYgKHR5cGVvZiBkZXAgPT09IFwib2JqZWN0XCIpXG4gXHRcdFx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgZGVwLmxlbmd0aDsgaSsrKVxuIFx0XHRcdFx0XHRcdGhvdC5fZGVjbGluZWREZXBlbmRlbmNpZXNbZGVwW2ldXSA9IHRydWU7XG4gXHRcdFx0XHRlbHNlIGhvdC5fZGVjbGluZWREZXBlbmRlbmNpZXNbZGVwXSA9IHRydWU7XG4gXHRcdFx0fSxcbiBcdFx0XHRkaXNwb3NlOiBmdW5jdGlvbihjYWxsYmFjaykge1xuIFx0XHRcdFx0aG90Ll9kaXNwb3NlSGFuZGxlcnMucHVzaChjYWxsYmFjayk7XG4gXHRcdFx0fSxcbiBcdFx0XHRhZGREaXNwb3NlSGFuZGxlcjogZnVuY3Rpb24oY2FsbGJhY2spIHtcbiBcdFx0XHRcdGhvdC5fZGlzcG9zZUhhbmRsZXJzLnB1c2goY2FsbGJhY2spO1xuIFx0XHRcdH0sXG4gXHRcdFx0cmVtb3ZlRGlzcG9zZUhhbmRsZXI6IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gXHRcdFx0XHR2YXIgaWR4ID0gaG90Ll9kaXNwb3NlSGFuZGxlcnMuaW5kZXhPZihjYWxsYmFjayk7XG4gXHRcdFx0XHRpZiAoaWR4ID49IDApIGhvdC5fZGlzcG9zZUhhbmRsZXJzLnNwbGljZShpZHgsIDEpO1xuIFx0XHRcdH0sXG5cbiBcdFx0XHQvLyBNYW5hZ2VtZW50IEFQSVxuIFx0XHRcdGNoZWNrOiBob3RDaGVjayxcbiBcdFx0XHRhcHBseTogaG90QXBwbHksXG4gXHRcdFx0c3RhdHVzOiBmdW5jdGlvbihsKSB7XG4gXHRcdFx0XHRpZiAoIWwpIHJldHVybiBob3RTdGF0dXM7XG4gXHRcdFx0XHRob3RTdGF0dXNIYW5kbGVycy5wdXNoKGwpO1xuIFx0XHRcdH0sXG4gXHRcdFx0YWRkU3RhdHVzSGFuZGxlcjogZnVuY3Rpb24obCkge1xuIFx0XHRcdFx0aG90U3RhdHVzSGFuZGxlcnMucHVzaChsKTtcbiBcdFx0XHR9LFxuIFx0XHRcdHJlbW92ZVN0YXR1c0hhbmRsZXI6IGZ1bmN0aW9uKGwpIHtcbiBcdFx0XHRcdHZhciBpZHggPSBob3RTdGF0dXNIYW5kbGVycy5pbmRleE9mKGwpO1xuIFx0XHRcdFx0aWYgKGlkeCA+PSAwKSBob3RTdGF0dXNIYW5kbGVycy5zcGxpY2UoaWR4LCAxKTtcbiBcdFx0XHR9LFxuXG4gXHRcdFx0Ly9pbmhlcml0IGZyb20gcHJldmlvdXMgZGlzcG9zZSBjYWxsXG4gXHRcdFx0ZGF0YTogaG90Q3VycmVudE1vZHVsZURhdGFbbW9kdWxlSWRdXG4gXHRcdH07XG4gXHRcdGhvdEN1cnJlbnRDaGlsZE1vZHVsZSA9IHVuZGVmaW5lZDtcbiBcdFx0cmV0dXJuIGhvdDtcbiBcdH1cblxuIFx0dmFyIGhvdFN0YXR1c0hhbmRsZXJzID0gW107XG4gXHR2YXIgaG90U3RhdHVzID0gXCJpZGxlXCI7XG5cbiBcdGZ1bmN0aW9uIGhvdFNldFN0YXR1cyhuZXdTdGF0dXMpIHtcbiBcdFx0aG90U3RhdHVzID0gbmV3U3RhdHVzO1xuIFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGhvdFN0YXR1c0hhbmRsZXJzLmxlbmd0aDsgaSsrKVxuIFx0XHRcdGhvdFN0YXR1c0hhbmRsZXJzW2ldLmNhbGwobnVsbCwgbmV3U3RhdHVzKTtcbiBcdH1cblxuIFx0Ly8gd2hpbGUgZG93bmxvYWRpbmdcbiBcdHZhciBob3RXYWl0aW5nRmlsZXMgPSAwO1xuIFx0dmFyIGhvdENodW5rc0xvYWRpbmcgPSAwO1xuIFx0dmFyIGhvdFdhaXRpbmdGaWxlc01hcCA9IHt9O1xuIFx0dmFyIGhvdFJlcXVlc3RlZEZpbGVzTWFwID0ge307XG4gXHR2YXIgaG90QXZhaWxhYmxlRmlsZXNNYXAgPSB7fTtcbiBcdHZhciBob3REZWZlcnJlZDtcblxuIFx0Ly8gVGhlIHVwZGF0ZSBpbmZvXG4gXHR2YXIgaG90VXBkYXRlLCBob3RVcGRhdGVOZXdIYXNoO1xuXG4gXHRmdW5jdGlvbiB0b01vZHVsZUlkKGlkKSB7XG4gXHRcdHZhciBpc051bWJlciA9ICtpZCArIFwiXCIgPT09IGlkO1xuIFx0XHRyZXR1cm4gaXNOdW1iZXIgPyAraWQgOiBpZDtcbiBcdH1cblxuIFx0ZnVuY3Rpb24gaG90Q2hlY2soYXBwbHkpIHtcbiBcdFx0aWYgKGhvdFN0YXR1cyAhPT0gXCJpZGxlXCIpXG4gXHRcdFx0dGhyb3cgbmV3IEVycm9yKFwiY2hlY2soKSBpcyBvbmx5IGFsbG93ZWQgaW4gaWRsZSBzdGF0dXNcIik7XG4gXHRcdGhvdEFwcGx5T25VcGRhdGUgPSBhcHBseTtcbiBcdFx0aG90U2V0U3RhdHVzKFwiY2hlY2tcIik7XG4gXHRcdHJldHVybiBob3REb3dubG9hZE1hbmlmZXN0KGhvdFJlcXVlc3RUaW1lb3V0KS50aGVuKGZ1bmN0aW9uKHVwZGF0ZSkge1xuIFx0XHRcdGlmICghdXBkYXRlKSB7XG4gXHRcdFx0XHRob3RTZXRTdGF0dXMoXCJpZGxlXCIpO1xuIFx0XHRcdFx0cmV0dXJuIG51bGw7XG4gXHRcdFx0fVxuIFx0XHRcdGhvdFJlcXVlc3RlZEZpbGVzTWFwID0ge307XG4gXHRcdFx0aG90V2FpdGluZ0ZpbGVzTWFwID0ge307XG4gXHRcdFx0aG90QXZhaWxhYmxlRmlsZXNNYXAgPSB1cGRhdGUuYztcbiBcdFx0XHRob3RVcGRhdGVOZXdIYXNoID0gdXBkYXRlLmg7XG5cbiBcdFx0XHRob3RTZXRTdGF0dXMoXCJwcmVwYXJlXCIpO1xuIFx0XHRcdHZhciBwcm9taXNlID0gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7XG4gXHRcdFx0XHRob3REZWZlcnJlZCA9IHtcbiBcdFx0XHRcdFx0cmVzb2x2ZTogcmVzb2x2ZSxcbiBcdFx0XHRcdFx0cmVqZWN0OiByZWplY3RcbiBcdFx0XHRcdH07XG4gXHRcdFx0fSk7XG4gXHRcdFx0aG90VXBkYXRlID0ge307XG4gXHRcdFx0dmFyIGNodW5rSWQgPSAwO1xuIFx0XHRcdHtcbiBcdFx0XHRcdC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbG9uZS1ibG9ja3NcbiBcdFx0XHRcdC8qZ2xvYmFscyBjaHVua0lkICovXG4gXHRcdFx0XHRob3RFbnN1cmVVcGRhdGVDaHVuayhjaHVua0lkKTtcbiBcdFx0XHR9XG4gXHRcdFx0aWYgKFxuIFx0XHRcdFx0aG90U3RhdHVzID09PSBcInByZXBhcmVcIiAmJlxuIFx0XHRcdFx0aG90Q2h1bmtzTG9hZGluZyA9PT0gMCAmJlxuIFx0XHRcdFx0aG90V2FpdGluZ0ZpbGVzID09PSAwXG4gXHRcdFx0KSB7XG4gXHRcdFx0XHRob3RVcGRhdGVEb3dubG9hZGVkKCk7XG4gXHRcdFx0fVxuIFx0XHRcdHJldHVybiBwcm9taXNlO1xuIFx0XHR9KTtcbiBcdH1cblxuIFx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG4gXHRmdW5jdGlvbiBob3RBZGRVcGRhdGVDaHVuayhjaHVua0lkLCBtb3JlTW9kdWxlcykge1xuIFx0XHRpZiAoIWhvdEF2YWlsYWJsZUZpbGVzTWFwW2NodW5rSWRdIHx8ICFob3RSZXF1ZXN0ZWRGaWxlc01hcFtjaHVua0lkXSlcbiBcdFx0XHRyZXR1cm47XG4gXHRcdGhvdFJlcXVlc3RlZEZpbGVzTWFwW2NodW5rSWRdID0gZmFsc2U7XG4gXHRcdGZvciAodmFyIG1vZHVsZUlkIGluIG1vcmVNb2R1bGVzKSB7XG4gXHRcdFx0aWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChtb3JlTW9kdWxlcywgbW9kdWxlSWQpKSB7XG4gXHRcdFx0XHRob3RVcGRhdGVbbW9kdWxlSWRdID0gbW9yZU1vZHVsZXNbbW9kdWxlSWRdO1xuIFx0XHRcdH1cbiBcdFx0fVxuIFx0XHRpZiAoLS1ob3RXYWl0aW5nRmlsZXMgPT09IDAgJiYgaG90Q2h1bmtzTG9hZGluZyA9PT0gMCkge1xuIFx0XHRcdGhvdFVwZGF0ZURvd25sb2FkZWQoKTtcbiBcdFx0fVxuIFx0fVxuXG4gXHRmdW5jdGlvbiBob3RFbnN1cmVVcGRhdGVDaHVuayhjaHVua0lkKSB7XG4gXHRcdGlmICghaG90QXZhaWxhYmxlRmlsZXNNYXBbY2h1bmtJZF0pIHtcbiBcdFx0XHRob3RXYWl0aW5nRmlsZXNNYXBbY2h1bmtJZF0gPSB0cnVlO1xuIFx0XHR9IGVsc2Uge1xuIFx0XHRcdGhvdFJlcXVlc3RlZEZpbGVzTWFwW2NodW5rSWRdID0gdHJ1ZTtcbiBcdFx0XHRob3RXYWl0aW5nRmlsZXMrKztcbiBcdFx0XHRob3REb3dubG9hZFVwZGF0ZUNodW5rKGNodW5rSWQpO1xuIFx0XHR9XG4gXHR9XG5cbiBcdGZ1bmN0aW9uIGhvdFVwZGF0ZURvd25sb2FkZWQoKSB7XG4gXHRcdGhvdFNldFN0YXR1cyhcInJlYWR5XCIpO1xuIFx0XHR2YXIgZGVmZXJyZWQgPSBob3REZWZlcnJlZDtcbiBcdFx0aG90RGVmZXJyZWQgPSBudWxsO1xuIFx0XHRpZiAoIWRlZmVycmVkKSByZXR1cm47XG4gXHRcdGlmIChob3RBcHBseU9uVXBkYXRlKSB7XG4gXHRcdFx0Ly8gV3JhcCBkZWZlcnJlZCBvYmplY3QgaW4gUHJvbWlzZSB0byBtYXJrIGl0IGFzIGEgd2VsbC1oYW5kbGVkIFByb21pc2UgdG9cbiBcdFx0XHQvLyBhdm9pZCB0cmlnZ2VyaW5nIHVuY2F1Z2h0IGV4Y2VwdGlvbiB3YXJuaW5nIGluIENocm9tZS5cbiBcdFx0XHQvLyBTZWUgaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL2Nocm9taXVtL2lzc3Vlcy9kZXRhaWw/aWQ9NDY1NjY2XG4gXHRcdFx0UHJvbWlzZS5yZXNvbHZlKClcbiBcdFx0XHRcdC50aGVuKGZ1bmN0aW9uKCkge1xuIFx0XHRcdFx0XHRyZXR1cm4gaG90QXBwbHkoaG90QXBwbHlPblVwZGF0ZSk7XG4gXHRcdFx0XHR9KVxuIFx0XHRcdFx0LnRoZW4oXG4gXHRcdFx0XHRcdGZ1bmN0aW9uKHJlc3VsdCkge1xuIFx0XHRcdFx0XHRcdGRlZmVycmVkLnJlc29sdmUocmVzdWx0KTtcbiBcdFx0XHRcdFx0fSxcbiBcdFx0XHRcdFx0ZnVuY3Rpb24oZXJyKSB7XG4gXHRcdFx0XHRcdFx0ZGVmZXJyZWQucmVqZWN0KGVycik7XG4gXHRcdFx0XHRcdH1cbiBcdFx0XHRcdCk7XG4gXHRcdH0gZWxzZSB7XG4gXHRcdFx0dmFyIG91dGRhdGVkTW9kdWxlcyA9IFtdO1xuIFx0XHRcdGZvciAodmFyIGlkIGluIGhvdFVwZGF0ZSkge1xuIFx0XHRcdFx0aWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChob3RVcGRhdGUsIGlkKSkge1xuIFx0XHRcdFx0XHRvdXRkYXRlZE1vZHVsZXMucHVzaCh0b01vZHVsZUlkKGlkKSk7XG4gXHRcdFx0XHR9XG4gXHRcdFx0fVxuIFx0XHRcdGRlZmVycmVkLnJlc29sdmUob3V0ZGF0ZWRNb2R1bGVzKTtcbiBcdFx0fVxuIFx0fVxuXG4gXHRmdW5jdGlvbiBob3RBcHBseShvcHRpb25zKSB7XG4gXHRcdGlmIChob3RTdGF0dXMgIT09IFwicmVhZHlcIilcbiBcdFx0XHR0aHJvdyBuZXcgRXJyb3IoXCJhcHBseSgpIGlzIG9ubHkgYWxsb3dlZCBpbiByZWFkeSBzdGF0dXNcIik7XG4gXHRcdG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuXG4gXHRcdHZhciBjYjtcbiBcdFx0dmFyIGk7XG4gXHRcdHZhciBqO1xuIFx0XHR2YXIgbW9kdWxlO1xuIFx0XHR2YXIgbW9kdWxlSWQ7XG5cbiBcdFx0ZnVuY3Rpb24gZ2V0QWZmZWN0ZWRTdHVmZih1cGRhdGVNb2R1bGVJZCkge1xuIFx0XHRcdHZhciBvdXRkYXRlZE1vZHVsZXMgPSBbdXBkYXRlTW9kdWxlSWRdO1xuIFx0XHRcdHZhciBvdXRkYXRlZERlcGVuZGVuY2llcyA9IHt9O1xuXG4gXHRcdFx0dmFyIHF1ZXVlID0gb3V0ZGF0ZWRNb2R1bGVzLnNsaWNlKCkubWFwKGZ1bmN0aW9uKGlkKSB7XG4gXHRcdFx0XHRyZXR1cm4ge1xuIFx0XHRcdFx0XHRjaGFpbjogW2lkXSxcbiBcdFx0XHRcdFx0aWQ6IGlkXG4gXHRcdFx0XHR9O1xuIFx0XHRcdH0pO1xuIFx0XHRcdHdoaWxlIChxdWV1ZS5sZW5ndGggPiAwKSB7XG4gXHRcdFx0XHR2YXIgcXVldWVJdGVtID0gcXVldWUucG9wKCk7XG4gXHRcdFx0XHR2YXIgbW9kdWxlSWQgPSBxdWV1ZUl0ZW0uaWQ7XG4gXHRcdFx0XHR2YXIgY2hhaW4gPSBxdWV1ZUl0ZW0uY2hhaW47XG4gXHRcdFx0XHRtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXTtcbiBcdFx0XHRcdGlmICghbW9kdWxlIHx8IG1vZHVsZS5ob3QuX3NlbGZBY2NlcHRlZCkgY29udGludWU7XG4gXHRcdFx0XHRpZiAobW9kdWxlLmhvdC5fc2VsZkRlY2xpbmVkKSB7XG4gXHRcdFx0XHRcdHJldHVybiB7XG4gXHRcdFx0XHRcdFx0dHlwZTogXCJzZWxmLWRlY2xpbmVkXCIsXG4gXHRcdFx0XHRcdFx0Y2hhaW46IGNoYWluLFxuIFx0XHRcdFx0XHRcdG1vZHVsZUlkOiBtb2R1bGVJZFxuIFx0XHRcdFx0XHR9O1xuIFx0XHRcdFx0fVxuIFx0XHRcdFx0aWYgKG1vZHVsZS5ob3QuX21haW4pIHtcbiBcdFx0XHRcdFx0cmV0dXJuIHtcbiBcdFx0XHRcdFx0XHR0eXBlOiBcInVuYWNjZXB0ZWRcIixcbiBcdFx0XHRcdFx0XHRjaGFpbjogY2hhaW4sXG4gXHRcdFx0XHRcdFx0bW9kdWxlSWQ6IG1vZHVsZUlkXG4gXHRcdFx0XHRcdH07XG4gXHRcdFx0XHR9XG4gXHRcdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IG1vZHVsZS5wYXJlbnRzLmxlbmd0aDsgaSsrKSB7XG4gXHRcdFx0XHRcdHZhciBwYXJlbnRJZCA9IG1vZHVsZS5wYXJlbnRzW2ldO1xuIFx0XHRcdFx0XHR2YXIgcGFyZW50ID0gaW5zdGFsbGVkTW9kdWxlc1twYXJlbnRJZF07XG4gXHRcdFx0XHRcdGlmICghcGFyZW50KSBjb250aW51ZTtcbiBcdFx0XHRcdFx0aWYgKHBhcmVudC5ob3QuX2RlY2xpbmVkRGVwZW5kZW5jaWVzW21vZHVsZUlkXSkge1xuIFx0XHRcdFx0XHRcdHJldHVybiB7XG4gXHRcdFx0XHRcdFx0XHR0eXBlOiBcImRlY2xpbmVkXCIsXG4gXHRcdFx0XHRcdFx0XHRjaGFpbjogY2hhaW4uY29uY2F0KFtwYXJlbnRJZF0pLFxuIFx0XHRcdFx0XHRcdFx0bW9kdWxlSWQ6IG1vZHVsZUlkLFxuIFx0XHRcdFx0XHRcdFx0cGFyZW50SWQ6IHBhcmVudElkXG4gXHRcdFx0XHRcdFx0fTtcbiBcdFx0XHRcdFx0fVxuIFx0XHRcdFx0XHRpZiAob3V0ZGF0ZWRNb2R1bGVzLmluZGV4T2YocGFyZW50SWQpICE9PSAtMSkgY29udGludWU7XG4gXHRcdFx0XHRcdGlmIChwYXJlbnQuaG90Ll9hY2NlcHRlZERlcGVuZGVuY2llc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRcdFx0XHRpZiAoIW91dGRhdGVkRGVwZW5kZW5jaWVzW3BhcmVudElkXSlcbiBcdFx0XHRcdFx0XHRcdG91dGRhdGVkRGVwZW5kZW5jaWVzW3BhcmVudElkXSA9IFtdO1xuIFx0XHRcdFx0XHRcdGFkZEFsbFRvU2V0KG91dGRhdGVkRGVwZW5kZW5jaWVzW3BhcmVudElkXSwgW21vZHVsZUlkXSk7XG4gXHRcdFx0XHRcdFx0Y29udGludWU7XG4gXHRcdFx0XHRcdH1cbiBcdFx0XHRcdFx0ZGVsZXRlIG91dGRhdGVkRGVwZW5kZW5jaWVzW3BhcmVudElkXTtcbiBcdFx0XHRcdFx0b3V0ZGF0ZWRNb2R1bGVzLnB1c2gocGFyZW50SWQpO1xuIFx0XHRcdFx0XHRxdWV1ZS5wdXNoKHtcbiBcdFx0XHRcdFx0XHRjaGFpbjogY2hhaW4uY29uY2F0KFtwYXJlbnRJZF0pLFxuIFx0XHRcdFx0XHRcdGlkOiBwYXJlbnRJZFxuIFx0XHRcdFx0XHR9KTtcbiBcdFx0XHRcdH1cbiBcdFx0XHR9XG5cbiBcdFx0XHRyZXR1cm4ge1xuIFx0XHRcdFx0dHlwZTogXCJhY2NlcHRlZFwiLFxuIFx0XHRcdFx0bW9kdWxlSWQ6IHVwZGF0ZU1vZHVsZUlkLFxuIFx0XHRcdFx0b3V0ZGF0ZWRNb2R1bGVzOiBvdXRkYXRlZE1vZHVsZXMsXG4gXHRcdFx0XHRvdXRkYXRlZERlcGVuZGVuY2llczogb3V0ZGF0ZWREZXBlbmRlbmNpZXNcbiBcdFx0XHR9O1xuIFx0XHR9XG5cbiBcdFx0ZnVuY3Rpb24gYWRkQWxsVG9TZXQoYSwgYikge1xuIFx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgYi5sZW5ndGg7IGkrKykge1xuIFx0XHRcdFx0dmFyIGl0ZW0gPSBiW2ldO1xuIFx0XHRcdFx0aWYgKGEuaW5kZXhPZihpdGVtKSA9PT0gLTEpIGEucHVzaChpdGVtKTtcbiBcdFx0XHR9XG4gXHRcdH1cblxuIFx0XHQvLyBhdCBiZWdpbiBhbGwgdXBkYXRlcyBtb2R1bGVzIGFyZSBvdXRkYXRlZFxuIFx0XHQvLyB0aGUgXCJvdXRkYXRlZFwiIHN0YXR1cyBjYW4gcHJvcGFnYXRlIHRvIHBhcmVudHMgaWYgdGhleSBkb24ndCBhY2NlcHQgdGhlIGNoaWxkcmVuXG4gXHRcdHZhciBvdXRkYXRlZERlcGVuZGVuY2llcyA9IHt9O1xuIFx0XHR2YXIgb3V0ZGF0ZWRNb2R1bGVzID0gW107XG4gXHRcdHZhciBhcHBsaWVkVXBkYXRlID0ge307XG5cbiBcdFx0dmFyIHdhcm5VbmV4cGVjdGVkUmVxdWlyZSA9IGZ1bmN0aW9uIHdhcm5VbmV4cGVjdGVkUmVxdWlyZSgpIHtcbiBcdFx0XHRjb25zb2xlLndhcm4oXG4gXHRcdFx0XHRcIltITVJdIHVuZXhwZWN0ZWQgcmVxdWlyZShcIiArIHJlc3VsdC5tb2R1bGVJZCArIFwiKSB0byBkaXNwb3NlZCBtb2R1bGVcIlxuIFx0XHRcdCk7XG4gXHRcdH07XG5cbiBcdFx0Zm9yICh2YXIgaWQgaW4gaG90VXBkYXRlKSB7XG4gXHRcdFx0aWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChob3RVcGRhdGUsIGlkKSkge1xuIFx0XHRcdFx0bW9kdWxlSWQgPSB0b01vZHVsZUlkKGlkKTtcbiBcdFx0XHRcdHZhciByZXN1bHQ7XG4gXHRcdFx0XHRpZiAoaG90VXBkYXRlW2lkXSkge1xuIFx0XHRcdFx0XHRyZXN1bHQgPSBnZXRBZmZlY3RlZFN0dWZmKG1vZHVsZUlkKTtcbiBcdFx0XHRcdH0gZWxzZSB7XG4gXHRcdFx0XHRcdHJlc3VsdCA9IHtcbiBcdFx0XHRcdFx0XHR0eXBlOiBcImRpc3Bvc2VkXCIsXG4gXHRcdFx0XHRcdFx0bW9kdWxlSWQ6IGlkXG4gXHRcdFx0XHRcdH07XG4gXHRcdFx0XHR9XG4gXHRcdFx0XHR2YXIgYWJvcnRFcnJvciA9IGZhbHNlO1xuIFx0XHRcdFx0dmFyIGRvQXBwbHkgPSBmYWxzZTtcbiBcdFx0XHRcdHZhciBkb0Rpc3Bvc2UgPSBmYWxzZTtcbiBcdFx0XHRcdHZhciBjaGFpbkluZm8gPSBcIlwiO1xuIFx0XHRcdFx0aWYgKHJlc3VsdC5jaGFpbikge1xuIFx0XHRcdFx0XHRjaGFpbkluZm8gPSBcIlxcblVwZGF0ZSBwcm9wYWdhdGlvbjogXCIgKyByZXN1bHQuY2hhaW4uam9pbihcIiAtPiBcIik7XG4gXHRcdFx0XHR9XG4gXHRcdFx0XHRzd2l0Y2ggKHJlc3VsdC50eXBlKSB7XG4gXHRcdFx0XHRcdGNhc2UgXCJzZWxmLWRlY2xpbmVkXCI6XG4gXHRcdFx0XHRcdFx0aWYgKG9wdGlvbnMub25EZWNsaW5lZCkgb3B0aW9ucy5vbkRlY2xpbmVkKHJlc3VsdCk7XG4gXHRcdFx0XHRcdFx0aWYgKCFvcHRpb25zLmlnbm9yZURlY2xpbmVkKVxuIFx0XHRcdFx0XHRcdFx0YWJvcnRFcnJvciA9IG5ldyBFcnJvcihcbiBcdFx0XHRcdFx0XHRcdFx0XCJBYm9ydGVkIGJlY2F1c2Ugb2Ygc2VsZiBkZWNsaW5lOiBcIiArXG4gXHRcdFx0XHRcdFx0XHRcdFx0cmVzdWx0Lm1vZHVsZUlkICtcbiBcdFx0XHRcdFx0XHRcdFx0XHRjaGFpbkluZm9cbiBcdFx0XHRcdFx0XHRcdCk7XG4gXHRcdFx0XHRcdFx0YnJlYWs7XG4gXHRcdFx0XHRcdGNhc2UgXCJkZWNsaW5lZFwiOlxuIFx0XHRcdFx0XHRcdGlmIChvcHRpb25zLm9uRGVjbGluZWQpIG9wdGlvbnMub25EZWNsaW5lZChyZXN1bHQpO1xuIFx0XHRcdFx0XHRcdGlmICghb3B0aW9ucy5pZ25vcmVEZWNsaW5lZClcbiBcdFx0XHRcdFx0XHRcdGFib3J0RXJyb3IgPSBuZXcgRXJyb3IoXG4gXHRcdFx0XHRcdFx0XHRcdFwiQWJvcnRlZCBiZWNhdXNlIG9mIGRlY2xpbmVkIGRlcGVuZGVuY3k6IFwiICtcbiBcdFx0XHRcdFx0XHRcdFx0XHRyZXN1bHQubW9kdWxlSWQgK1xuIFx0XHRcdFx0XHRcdFx0XHRcdFwiIGluIFwiICtcbiBcdFx0XHRcdFx0XHRcdFx0XHRyZXN1bHQucGFyZW50SWQgK1xuIFx0XHRcdFx0XHRcdFx0XHRcdGNoYWluSW5mb1xuIFx0XHRcdFx0XHRcdFx0KTtcbiBcdFx0XHRcdFx0XHRicmVhaztcbiBcdFx0XHRcdFx0Y2FzZSBcInVuYWNjZXB0ZWRcIjpcbiBcdFx0XHRcdFx0XHRpZiAob3B0aW9ucy5vblVuYWNjZXB0ZWQpIG9wdGlvbnMub25VbmFjY2VwdGVkKHJlc3VsdCk7XG4gXHRcdFx0XHRcdFx0aWYgKCFvcHRpb25zLmlnbm9yZVVuYWNjZXB0ZWQpXG4gXHRcdFx0XHRcdFx0XHRhYm9ydEVycm9yID0gbmV3IEVycm9yKFxuIFx0XHRcdFx0XHRcdFx0XHRcIkFib3J0ZWQgYmVjYXVzZSBcIiArIG1vZHVsZUlkICsgXCIgaXMgbm90IGFjY2VwdGVkXCIgKyBjaGFpbkluZm9cbiBcdFx0XHRcdFx0XHRcdCk7XG4gXHRcdFx0XHRcdFx0YnJlYWs7XG4gXHRcdFx0XHRcdGNhc2UgXCJhY2NlcHRlZFwiOlxuIFx0XHRcdFx0XHRcdGlmIChvcHRpb25zLm9uQWNjZXB0ZWQpIG9wdGlvbnMub25BY2NlcHRlZChyZXN1bHQpO1xuIFx0XHRcdFx0XHRcdGRvQXBwbHkgPSB0cnVlO1xuIFx0XHRcdFx0XHRcdGJyZWFrO1xuIFx0XHRcdFx0XHRjYXNlIFwiZGlzcG9zZWRcIjpcbiBcdFx0XHRcdFx0XHRpZiAob3B0aW9ucy5vbkRpc3Bvc2VkKSBvcHRpb25zLm9uRGlzcG9zZWQocmVzdWx0KTtcbiBcdFx0XHRcdFx0XHRkb0Rpc3Bvc2UgPSB0cnVlO1xuIFx0XHRcdFx0XHRcdGJyZWFrO1xuIFx0XHRcdFx0XHRkZWZhdWx0OlxuIFx0XHRcdFx0XHRcdHRocm93IG5ldyBFcnJvcihcIlVuZXhjZXB0aW9uIHR5cGUgXCIgKyByZXN1bHQudHlwZSk7XG4gXHRcdFx0XHR9XG4gXHRcdFx0XHRpZiAoYWJvcnRFcnJvcikge1xuIFx0XHRcdFx0XHRob3RTZXRTdGF0dXMoXCJhYm9ydFwiKTtcbiBcdFx0XHRcdFx0cmV0dXJuIFByb21pc2UucmVqZWN0KGFib3J0RXJyb3IpO1xuIFx0XHRcdFx0fVxuIFx0XHRcdFx0aWYgKGRvQXBwbHkpIHtcbiBcdFx0XHRcdFx0YXBwbGllZFVwZGF0ZVttb2R1bGVJZF0gPSBob3RVcGRhdGVbbW9kdWxlSWRdO1xuIFx0XHRcdFx0XHRhZGRBbGxUb1NldChvdXRkYXRlZE1vZHVsZXMsIHJlc3VsdC5vdXRkYXRlZE1vZHVsZXMpO1xuIFx0XHRcdFx0XHRmb3IgKG1vZHVsZUlkIGluIHJlc3VsdC5vdXRkYXRlZERlcGVuZGVuY2llcykge1xuIFx0XHRcdFx0XHRcdGlmIChcbiBcdFx0XHRcdFx0XHRcdE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChcbiBcdFx0XHRcdFx0XHRcdFx0cmVzdWx0Lm91dGRhdGVkRGVwZW5kZW5jaWVzLFxuIFx0XHRcdFx0XHRcdFx0XHRtb2R1bGVJZFxuIFx0XHRcdFx0XHRcdFx0KVxuIFx0XHRcdFx0XHRcdCkge1xuIFx0XHRcdFx0XHRcdFx0aWYgKCFvdXRkYXRlZERlcGVuZGVuY2llc1ttb2R1bGVJZF0pXG4gXHRcdFx0XHRcdFx0XHRcdG91dGRhdGVkRGVwZW5kZW5jaWVzW21vZHVsZUlkXSA9IFtdO1xuIFx0XHRcdFx0XHRcdFx0YWRkQWxsVG9TZXQoXG4gXHRcdFx0XHRcdFx0XHRcdG91dGRhdGVkRGVwZW5kZW5jaWVzW21vZHVsZUlkXSxcbiBcdFx0XHRcdFx0XHRcdFx0cmVzdWx0Lm91dGRhdGVkRGVwZW5kZW5jaWVzW21vZHVsZUlkXVxuIFx0XHRcdFx0XHRcdFx0KTtcbiBcdFx0XHRcdFx0XHR9XG4gXHRcdFx0XHRcdH1cbiBcdFx0XHRcdH1cbiBcdFx0XHRcdGlmIChkb0Rpc3Bvc2UpIHtcbiBcdFx0XHRcdFx0YWRkQWxsVG9TZXQob3V0ZGF0ZWRNb2R1bGVzLCBbcmVzdWx0Lm1vZHVsZUlkXSk7XG4gXHRcdFx0XHRcdGFwcGxpZWRVcGRhdGVbbW9kdWxlSWRdID0gd2FyblVuZXhwZWN0ZWRSZXF1aXJlO1xuIFx0XHRcdFx0fVxuIFx0XHRcdH1cbiBcdFx0fVxuXG4gXHRcdC8vIFN0b3JlIHNlbGYgYWNjZXB0ZWQgb3V0ZGF0ZWQgbW9kdWxlcyB0byByZXF1aXJlIHRoZW0gbGF0ZXIgYnkgdGhlIG1vZHVsZSBzeXN0ZW1cbiBcdFx0dmFyIG91dGRhdGVkU2VsZkFjY2VwdGVkTW9kdWxlcyA9IFtdO1xuIFx0XHRmb3IgKGkgPSAwOyBpIDwgb3V0ZGF0ZWRNb2R1bGVzLmxlbmd0aDsgaSsrKSB7XG4gXHRcdFx0bW9kdWxlSWQgPSBvdXRkYXRlZE1vZHVsZXNbaV07XG4gXHRcdFx0aWYgKFxuIFx0XHRcdFx0aW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gJiZcbiBcdFx0XHRcdGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmhvdC5fc2VsZkFjY2VwdGVkXG4gXHRcdFx0KVxuIFx0XHRcdFx0b3V0ZGF0ZWRTZWxmQWNjZXB0ZWRNb2R1bGVzLnB1c2goe1xuIFx0XHRcdFx0XHRtb2R1bGU6IG1vZHVsZUlkLFxuIFx0XHRcdFx0XHRlcnJvckhhbmRsZXI6IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmhvdC5fc2VsZkFjY2VwdGVkXG4gXHRcdFx0XHR9KTtcbiBcdFx0fVxuXG4gXHRcdC8vIE5vdyBpbiBcImRpc3Bvc2VcIiBwaGFzZVxuIFx0XHRob3RTZXRTdGF0dXMoXCJkaXNwb3NlXCIpO1xuIFx0XHRPYmplY3Qua2V5cyhob3RBdmFpbGFibGVGaWxlc01hcCkuZm9yRWFjaChmdW5jdGlvbihjaHVua0lkKSB7XG4gXHRcdFx0aWYgKGhvdEF2YWlsYWJsZUZpbGVzTWFwW2NodW5rSWRdID09PSBmYWxzZSkge1xuIFx0XHRcdFx0aG90RGlzcG9zZUNodW5rKGNodW5rSWQpO1xuIFx0XHRcdH1cbiBcdFx0fSk7XG5cbiBcdFx0dmFyIGlkeDtcbiBcdFx0dmFyIHF1ZXVlID0gb3V0ZGF0ZWRNb2R1bGVzLnNsaWNlKCk7XG4gXHRcdHdoaWxlIChxdWV1ZS5sZW5ndGggPiAwKSB7XG4gXHRcdFx0bW9kdWxlSWQgPSBxdWV1ZS5wb3AoKTtcbiBcdFx0XHRtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXTtcbiBcdFx0XHRpZiAoIW1vZHVsZSkgY29udGludWU7XG5cbiBcdFx0XHR2YXIgZGF0YSA9IHt9O1xuXG4gXHRcdFx0Ly8gQ2FsbCBkaXNwb3NlIGhhbmRsZXJzXG4gXHRcdFx0dmFyIGRpc3Bvc2VIYW5kbGVycyA9IG1vZHVsZS5ob3QuX2Rpc3Bvc2VIYW5kbGVycztcbiBcdFx0XHRmb3IgKGogPSAwOyBqIDwgZGlzcG9zZUhhbmRsZXJzLmxlbmd0aDsgaisrKSB7XG4gXHRcdFx0XHRjYiA9IGRpc3Bvc2VIYW5kbGVyc1tqXTtcbiBcdFx0XHRcdGNiKGRhdGEpO1xuIFx0XHRcdH1cbiBcdFx0XHRob3RDdXJyZW50TW9kdWxlRGF0YVttb2R1bGVJZF0gPSBkYXRhO1xuXG4gXHRcdFx0Ly8gZGlzYWJsZSBtb2R1bGUgKHRoaXMgZGlzYWJsZXMgcmVxdWlyZXMgZnJvbSB0aGlzIG1vZHVsZSlcbiBcdFx0XHRtb2R1bGUuaG90LmFjdGl2ZSA9IGZhbHNlO1xuXG4gXHRcdFx0Ly8gcmVtb3ZlIG1vZHVsZSBmcm9tIGNhY2hlXG4gXHRcdFx0ZGVsZXRlIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdO1xuXG4gXHRcdFx0Ly8gd2hlbiBkaXNwb3NpbmcgdGhlcmUgaXMgbm8gbmVlZCB0byBjYWxsIGRpc3Bvc2UgaGFuZGxlclxuIFx0XHRcdGRlbGV0ZSBvdXRkYXRlZERlcGVuZGVuY2llc1ttb2R1bGVJZF07XG5cbiBcdFx0XHQvLyByZW1vdmUgXCJwYXJlbnRzXCIgcmVmZXJlbmNlcyBmcm9tIGFsbCBjaGlsZHJlblxuIFx0XHRcdGZvciAoaiA9IDA7IGogPCBtb2R1bGUuY2hpbGRyZW4ubGVuZ3RoOyBqKyspIHtcbiBcdFx0XHRcdHZhciBjaGlsZCA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlLmNoaWxkcmVuW2pdXTtcbiBcdFx0XHRcdGlmICghY2hpbGQpIGNvbnRpbnVlO1xuIFx0XHRcdFx0aWR4ID0gY2hpbGQucGFyZW50cy5pbmRleE9mKG1vZHVsZUlkKTtcbiBcdFx0XHRcdGlmIChpZHggPj0gMCkge1xuIFx0XHRcdFx0XHRjaGlsZC5wYXJlbnRzLnNwbGljZShpZHgsIDEpO1xuIFx0XHRcdFx0fVxuIFx0XHRcdH1cbiBcdFx0fVxuXG4gXHRcdC8vIHJlbW92ZSBvdXRkYXRlZCBkZXBlbmRlbmN5IGZyb20gbW9kdWxlIGNoaWxkcmVuXG4gXHRcdHZhciBkZXBlbmRlbmN5O1xuIFx0XHR2YXIgbW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXM7XG4gXHRcdGZvciAobW9kdWxlSWQgaW4gb3V0ZGF0ZWREZXBlbmRlbmNpZXMpIHtcbiBcdFx0XHRpZiAoXG4gXHRcdFx0XHRPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob3V0ZGF0ZWREZXBlbmRlbmNpZXMsIG1vZHVsZUlkKVxuIFx0XHRcdCkge1xuIFx0XHRcdFx0bW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF07XG4gXHRcdFx0XHRpZiAobW9kdWxlKSB7XG4gXHRcdFx0XHRcdG1vZHVsZU91dGRhdGVkRGVwZW5kZW5jaWVzID0gb3V0ZGF0ZWREZXBlbmRlbmNpZXNbbW9kdWxlSWRdO1xuIFx0XHRcdFx0XHRmb3IgKGogPSAwOyBqIDwgbW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXMubGVuZ3RoOyBqKyspIHtcbiBcdFx0XHRcdFx0XHRkZXBlbmRlbmN5ID0gbW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXNbal07XG4gXHRcdFx0XHRcdFx0aWR4ID0gbW9kdWxlLmNoaWxkcmVuLmluZGV4T2YoZGVwZW5kZW5jeSk7XG4gXHRcdFx0XHRcdFx0aWYgKGlkeCA+PSAwKSBtb2R1bGUuY2hpbGRyZW4uc3BsaWNlKGlkeCwgMSk7XG4gXHRcdFx0XHRcdH1cbiBcdFx0XHRcdH1cbiBcdFx0XHR9XG4gXHRcdH1cblxuIFx0XHQvLyBOb3QgaW4gXCJhcHBseVwiIHBoYXNlXG4gXHRcdGhvdFNldFN0YXR1cyhcImFwcGx5XCIpO1xuXG4gXHRcdGhvdEN1cnJlbnRIYXNoID0gaG90VXBkYXRlTmV3SGFzaDtcblxuIFx0XHQvLyBpbnNlcnQgbmV3IGNvZGVcbiBcdFx0Zm9yIChtb2R1bGVJZCBpbiBhcHBsaWVkVXBkYXRlKSB7XG4gXHRcdFx0aWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChhcHBsaWVkVXBkYXRlLCBtb2R1bGVJZCkpIHtcbiBcdFx0XHRcdG1vZHVsZXNbbW9kdWxlSWRdID0gYXBwbGllZFVwZGF0ZVttb2R1bGVJZF07XG4gXHRcdFx0fVxuIFx0XHR9XG5cbiBcdFx0Ly8gY2FsbCBhY2NlcHQgaGFuZGxlcnNcbiBcdFx0dmFyIGVycm9yID0gbnVsbDtcbiBcdFx0Zm9yIChtb2R1bGVJZCBpbiBvdXRkYXRlZERlcGVuZGVuY2llcykge1xuIFx0XHRcdGlmIChcbiBcdFx0XHRcdE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvdXRkYXRlZERlcGVuZGVuY2llcywgbW9kdWxlSWQpXG4gXHRcdFx0KSB7XG4gXHRcdFx0XHRtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXTtcbiBcdFx0XHRcdGlmIChtb2R1bGUpIHtcbiBcdFx0XHRcdFx0bW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXMgPSBvdXRkYXRlZERlcGVuZGVuY2llc1ttb2R1bGVJZF07XG4gXHRcdFx0XHRcdHZhciBjYWxsYmFja3MgPSBbXTtcbiBcdFx0XHRcdFx0Zm9yIChpID0gMDsgaSA8IG1vZHVsZU91dGRhdGVkRGVwZW5kZW5jaWVzLmxlbmd0aDsgaSsrKSB7XG4gXHRcdFx0XHRcdFx0ZGVwZW5kZW5jeSA9IG1vZHVsZU91dGRhdGVkRGVwZW5kZW5jaWVzW2ldO1xuIFx0XHRcdFx0XHRcdGNiID0gbW9kdWxlLmhvdC5fYWNjZXB0ZWREZXBlbmRlbmNpZXNbZGVwZW5kZW5jeV07XG4gXHRcdFx0XHRcdFx0aWYgKGNiKSB7XG4gXHRcdFx0XHRcdFx0XHRpZiAoY2FsbGJhY2tzLmluZGV4T2YoY2IpICE9PSAtMSkgY29udGludWU7XG4gXHRcdFx0XHRcdFx0XHRjYWxsYmFja3MucHVzaChjYik7XG4gXHRcdFx0XHRcdFx0fVxuIFx0XHRcdFx0XHR9XG4gXHRcdFx0XHRcdGZvciAoaSA9IDA7IGkgPCBjYWxsYmFja3MubGVuZ3RoOyBpKyspIHtcbiBcdFx0XHRcdFx0XHRjYiA9IGNhbGxiYWNrc1tpXTtcbiBcdFx0XHRcdFx0XHR0cnkge1xuIFx0XHRcdFx0XHRcdFx0Y2IobW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXMpO1xuIFx0XHRcdFx0XHRcdH0gY2F0Y2ggKGVycikge1xuIFx0XHRcdFx0XHRcdFx0aWYgKG9wdGlvbnMub25FcnJvcmVkKSB7XG4gXHRcdFx0XHRcdFx0XHRcdG9wdGlvbnMub25FcnJvcmVkKHtcbiBcdFx0XHRcdFx0XHRcdFx0XHR0eXBlOiBcImFjY2VwdC1lcnJvcmVkXCIsXG4gXHRcdFx0XHRcdFx0XHRcdFx0bW9kdWxlSWQ6IG1vZHVsZUlkLFxuIFx0XHRcdFx0XHRcdFx0XHRcdGRlcGVuZGVuY3lJZDogbW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXNbaV0sXG4gXHRcdFx0XHRcdFx0XHRcdFx0ZXJyb3I6IGVyclxuIFx0XHRcdFx0XHRcdFx0XHR9KTtcbiBcdFx0XHRcdFx0XHRcdH1cbiBcdFx0XHRcdFx0XHRcdGlmICghb3B0aW9ucy5pZ25vcmVFcnJvcmVkKSB7XG4gXHRcdFx0XHRcdFx0XHRcdGlmICghZXJyb3IpIGVycm9yID0gZXJyO1xuIFx0XHRcdFx0XHRcdFx0fVxuIFx0XHRcdFx0XHRcdH1cbiBcdFx0XHRcdFx0fVxuIFx0XHRcdFx0fVxuIFx0XHRcdH1cbiBcdFx0fVxuXG4gXHRcdC8vIExvYWQgc2VsZiBhY2NlcHRlZCBtb2R1bGVzXG4gXHRcdGZvciAoaSA9IDA7IGkgPCBvdXRkYXRlZFNlbGZBY2NlcHRlZE1vZHVsZXMubGVuZ3RoOyBpKyspIHtcbiBcdFx0XHR2YXIgaXRlbSA9IG91dGRhdGVkU2VsZkFjY2VwdGVkTW9kdWxlc1tpXTtcbiBcdFx0XHRtb2R1bGVJZCA9IGl0ZW0ubW9kdWxlO1xuIFx0XHRcdGhvdEN1cnJlbnRQYXJlbnRzID0gW21vZHVsZUlkXTtcbiBcdFx0XHR0cnkge1xuIFx0XHRcdFx0X193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCk7XG4gXHRcdFx0fSBjYXRjaCAoZXJyKSB7XG4gXHRcdFx0XHRpZiAodHlwZW9mIGl0ZW0uZXJyb3JIYW5kbGVyID09PSBcImZ1bmN0aW9uXCIpIHtcbiBcdFx0XHRcdFx0dHJ5IHtcbiBcdFx0XHRcdFx0XHRpdGVtLmVycm9ySGFuZGxlcihlcnIpO1xuIFx0XHRcdFx0XHR9IGNhdGNoIChlcnIyKSB7XG4gXHRcdFx0XHRcdFx0aWYgKG9wdGlvbnMub25FcnJvcmVkKSB7XG4gXHRcdFx0XHRcdFx0XHRvcHRpb25zLm9uRXJyb3JlZCh7XG4gXHRcdFx0XHRcdFx0XHRcdHR5cGU6IFwic2VsZi1hY2NlcHQtZXJyb3ItaGFuZGxlci1lcnJvcmVkXCIsXG4gXHRcdFx0XHRcdFx0XHRcdG1vZHVsZUlkOiBtb2R1bGVJZCxcbiBcdFx0XHRcdFx0XHRcdFx0ZXJyb3I6IGVycjIsXG4gXHRcdFx0XHRcdFx0XHRcdG9yaWdpbmFsRXJyb3I6IGVyclxuIFx0XHRcdFx0XHRcdFx0fSk7XG4gXHRcdFx0XHRcdFx0fVxuIFx0XHRcdFx0XHRcdGlmICghb3B0aW9ucy5pZ25vcmVFcnJvcmVkKSB7XG4gXHRcdFx0XHRcdFx0XHRpZiAoIWVycm9yKSBlcnJvciA9IGVycjI7XG4gXHRcdFx0XHRcdFx0fVxuIFx0XHRcdFx0XHRcdGlmICghZXJyb3IpIGVycm9yID0gZXJyO1xuIFx0XHRcdFx0XHR9XG4gXHRcdFx0XHR9IGVsc2Uge1xuIFx0XHRcdFx0XHRpZiAob3B0aW9ucy5vbkVycm9yZWQpIHtcbiBcdFx0XHRcdFx0XHRvcHRpb25zLm9uRXJyb3JlZCh7XG4gXHRcdFx0XHRcdFx0XHR0eXBlOiBcInNlbGYtYWNjZXB0LWVycm9yZWRcIixcbiBcdFx0XHRcdFx0XHRcdG1vZHVsZUlkOiBtb2R1bGVJZCxcbiBcdFx0XHRcdFx0XHRcdGVycm9yOiBlcnJcbiBcdFx0XHRcdFx0XHR9KTtcbiBcdFx0XHRcdFx0fVxuIFx0XHRcdFx0XHRpZiAoIW9wdGlvbnMuaWdub3JlRXJyb3JlZCkge1xuIFx0XHRcdFx0XHRcdGlmICghZXJyb3IpIGVycm9yID0gZXJyO1xuIFx0XHRcdFx0XHR9XG4gXHRcdFx0XHR9XG4gXHRcdFx0fVxuIFx0XHR9XG5cbiBcdFx0Ly8gaGFuZGxlIGVycm9ycyBpbiBhY2NlcHQgaGFuZGxlcnMgYW5kIHNlbGYgYWNjZXB0ZWQgbW9kdWxlIGxvYWRcbiBcdFx0aWYgKGVycm9yKSB7XG4gXHRcdFx0aG90U2V0U3RhdHVzKFwiZmFpbFwiKTtcbiBcdFx0XHRyZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpO1xuIFx0XHR9XG5cbiBcdFx0aG90U2V0U3RhdHVzKFwiaWRsZVwiKTtcbiBcdFx0cmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUpIHtcbiBcdFx0XHRyZXNvbHZlKG91dGRhdGVkTW9kdWxlcyk7XG4gXHRcdH0pO1xuIFx0fVxuXG4gXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fSxcbiBcdFx0XHRob3Q6IGhvdENyZWF0ZU1vZHVsZShtb2R1bGVJZCksXG4gXHRcdFx0cGFyZW50czogKGhvdEN1cnJlbnRQYXJlbnRzVGVtcCA9IGhvdEN1cnJlbnRQYXJlbnRzLCBob3RDdXJyZW50UGFyZW50cyA9IFtdLCBob3RDdXJyZW50UGFyZW50c1RlbXApLFxuIFx0XHRcdGNoaWxkcmVuOiBbXVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBob3RDcmVhdGVSZXF1aXJlKG1vZHVsZUlkKSk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7XG4gXHRcdFx0XHRjb25maWd1cmFibGU6IGZhbHNlLFxuIFx0XHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcbiBcdFx0XHRcdGdldDogZ2V0dGVyXG4gXHRcdFx0fSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cbiBcdC8vIF9fd2VicGFja19oYXNoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18uaCA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gaG90Q3VycmVudEhhc2g7IH07XG5cblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gaG90Q3JlYXRlUmVxdWlyZShcIi4vc3JjL2luZGV4LmpzXCIpKF9fd2VicGFja19yZXF1aXJlX18ucyA9IFwiLi9zcmMvaW5kZXguanNcIik7XG4iLCIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQHR5cGVjaGVja3NcbiAqL1xuXG52YXIgZW1wdHlGdW5jdGlvbiA9IHJlcXVpcmUoJy4vZW1wdHlGdW5jdGlvbicpO1xuXG4vKipcbiAqIFVwc3RyZWFtIHZlcnNpb24gb2YgZXZlbnQgbGlzdGVuZXIuIERvZXMgbm90IHRha2UgaW50byBhY2NvdW50IHNwZWNpZmljXG4gKiBuYXR1cmUgb2YgcGxhdGZvcm0uXG4gKi9cbnZhciBFdmVudExpc3RlbmVyID0ge1xuICAvKipcbiAgICogTGlzdGVuIHRvIERPTSBldmVudHMgZHVyaW5nIHRoZSBidWJibGUgcGhhc2UuXG4gICAqXG4gICAqIEBwYXJhbSB7RE9NRXZlbnRUYXJnZXR9IHRhcmdldCBET00gZWxlbWVudCB0byByZWdpc3RlciBsaXN0ZW5lciBvbi5cbiAgICogQHBhcmFtIHtzdHJpbmd9IGV2ZW50VHlwZSBFdmVudCB0eXBlLCBlLmcuICdjbGljaycgb3IgJ21vdXNlb3ZlcicuXG4gICAqIEBwYXJhbSB7ZnVuY3Rpb259IGNhbGxiYWNrIENhbGxiYWNrIGZ1bmN0aW9uLlxuICAgKiBAcmV0dXJuIHtvYmplY3R9IE9iamVjdCB3aXRoIGEgYHJlbW92ZWAgbWV0aG9kLlxuICAgKi9cbiAgbGlzdGVuOiBmdW5jdGlvbiBsaXN0ZW4odGFyZ2V0LCBldmVudFR5cGUsIGNhbGxiYWNrKSB7XG4gICAgaWYgKHRhcmdldC5hZGRFdmVudExpc3RlbmVyKSB7XG4gICAgICB0YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcihldmVudFR5cGUsIGNhbGxiYWNrLCBmYWxzZSk7XG4gICAgICByZXR1cm4ge1xuICAgICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgICAgICB0YXJnZXQucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudFR5cGUsIGNhbGxiYWNrLCBmYWxzZSk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfSBlbHNlIGlmICh0YXJnZXQuYXR0YWNoRXZlbnQpIHtcbiAgICAgIHRhcmdldC5hdHRhY2hFdmVudCgnb24nICsgZXZlbnRUeXBlLCBjYWxsYmFjayk7XG4gICAgICByZXR1cm4ge1xuICAgICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgICAgICB0YXJnZXQuZGV0YWNoRXZlbnQoJ29uJyArIGV2ZW50VHlwZSwgY2FsbGJhY2spO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cbiAgfSxcblxuICAvKipcbiAgICogTGlzdGVuIHRvIERPTSBldmVudHMgZHVyaW5nIHRoZSBjYXB0dXJlIHBoYXNlLlxuICAgKlxuICAgKiBAcGFyYW0ge0RPTUV2ZW50VGFyZ2V0fSB0YXJnZXQgRE9NIGVsZW1lbnQgdG8gcmVnaXN0ZXIgbGlzdGVuZXIgb24uXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBldmVudFR5cGUgRXZlbnQgdHlwZSwgZS5nLiAnY2xpY2snIG9yICdtb3VzZW92ZXInLlxuICAgKiBAcGFyYW0ge2Z1bmN0aW9ufSBjYWxsYmFjayBDYWxsYmFjayBmdW5jdGlvbi5cbiAgICogQHJldHVybiB7b2JqZWN0fSBPYmplY3Qgd2l0aCBhIGByZW1vdmVgIG1ldGhvZC5cbiAgICovXG4gIGNhcHR1cmU6IGZ1bmN0aW9uIGNhcHR1cmUodGFyZ2V0LCBldmVudFR5cGUsIGNhbGxiYWNrKSB7XG4gICAgaWYgKHRhcmdldC5hZGRFdmVudExpc3RlbmVyKSB7XG4gICAgICB0YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcihldmVudFR5cGUsIGNhbGxiYWNrLCB0cnVlKTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgICAgIHRhcmdldC5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50VHlwZSwgY2FsbGJhY2ssIHRydWUpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH0gZWxzZSB7XG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICBjb25zb2xlLmVycm9yKCdBdHRlbXB0ZWQgdG8gbGlzdGVuIHRvIGV2ZW50cyBkdXJpbmcgdGhlIGNhcHR1cmUgcGhhc2Ugb24gYSAnICsgJ2Jyb3dzZXIgdGhhdCBkb2VzIG5vdCBzdXBwb3J0IHRoZSBjYXB0dXJlIHBoYXNlLiBZb3VyIGFwcGxpY2F0aW9uICcgKyAnd2lsbCBub3QgcmVjZWl2ZSBzb21lIGV2ZW50cy4nKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB7XG4gICAgICAgIHJlbW92ZTogZW1wdHlGdW5jdGlvblxuICAgICAgfTtcbiAgICB9XG4gIH0sXG5cbiAgcmVnaXN0ZXJEZWZhdWx0OiBmdW5jdGlvbiByZWdpc3RlckRlZmF1bHQoKSB7fVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBFdmVudExpc3RlbmVyOyIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIGNhblVzZURPTSA9ICEhKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5kb2N1bWVudCAmJiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCk7XG5cbi8qKlxuICogU2ltcGxlLCBsaWdodHdlaWdodCBtb2R1bGUgYXNzaXN0aW5nIHdpdGggdGhlIGRldGVjdGlvbiBhbmQgY29udGV4dCBvZlxuICogV29ya2VyLiBIZWxwcyBhdm9pZCBjaXJjdWxhciBkZXBlbmRlbmNpZXMgYW5kIGFsbG93cyBjb2RlIHRvIHJlYXNvbiBhYm91dFxuICogd2hldGhlciBvciBub3QgdGhleSBhcmUgaW4gYSBXb3JrZXIsIGV2ZW4gaWYgdGhleSBuZXZlciBpbmNsdWRlIHRoZSBtYWluXG4gKiBgUmVhY3RXb3JrZXJgIGRlcGVuZGVuY3kuXG4gKi9cbnZhciBFeGVjdXRpb25FbnZpcm9ubWVudCA9IHtcblxuICBjYW5Vc2VET006IGNhblVzZURPTSxcblxuICBjYW5Vc2VXb3JrZXJzOiB0eXBlb2YgV29ya2VyICE9PSAndW5kZWZpbmVkJyxcblxuICBjYW5Vc2VFdmVudExpc3RlbmVyczogY2FuVXNlRE9NICYmICEhKHdpbmRvdy5hZGRFdmVudExpc3RlbmVyIHx8IHdpbmRvdy5hdHRhY2hFdmVudCksXG5cbiAgY2FuVXNlVmlld3BvcnQ6IGNhblVzZURPTSAmJiAhIXdpbmRvdy5zY3JlZW4sXG5cbiAgaXNJbldvcmtlcjogIWNhblVzZURPTSAvLyBGb3Igbm93LCB0aGlzIGlzIHRydWUgLSBtaWdodCBjaGFuZ2UgaW4gdGhlIGZ1dHVyZS5cblxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBFeGVjdXRpb25FbnZpcm9ubWVudDsiLCIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogXG4gKi9cblxudmFyIGlzVGV4dE5vZGUgPSByZXF1aXJlKCcuL2lzVGV4dE5vZGUnKTtcblxuLyplc2xpbnQtZGlzYWJsZSBuby1iaXR3aXNlICovXG5cbi8qKlxuICogQ2hlY2tzIGlmIGEgZ2l2ZW4gRE9NIG5vZGUgY29udGFpbnMgb3IgaXMgYW5vdGhlciBET00gbm9kZS5cbiAqL1xuZnVuY3Rpb24gY29udGFpbnNOb2RlKG91dGVyTm9kZSwgaW5uZXJOb2RlKSB7XG4gIGlmICghb3V0ZXJOb2RlIHx8ICFpbm5lck5vZGUpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH0gZWxzZSBpZiAob3V0ZXJOb2RlID09PSBpbm5lck5vZGUpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBlbHNlIGlmIChpc1RleHROb2RlKG91dGVyTm9kZSkpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH0gZWxzZSBpZiAoaXNUZXh0Tm9kZShpbm5lck5vZGUpKSB7XG4gICAgcmV0dXJuIGNvbnRhaW5zTm9kZShvdXRlck5vZGUsIGlubmVyTm9kZS5wYXJlbnROb2RlKTtcbiAgfSBlbHNlIGlmICgnY29udGFpbnMnIGluIG91dGVyTm9kZSkge1xuICAgIHJldHVybiBvdXRlck5vZGUuY29udGFpbnMoaW5uZXJOb2RlKTtcbiAgfSBlbHNlIGlmIChvdXRlck5vZGUuY29tcGFyZURvY3VtZW50UG9zaXRpb24pIHtcbiAgICByZXR1cm4gISEob3V0ZXJOb2RlLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKGlubmVyTm9kZSkgJiAxNik7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY29udGFpbnNOb2RlOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIFxuICovXG5cbmZ1bmN0aW9uIG1ha2VFbXB0eUZ1bmN0aW9uKGFyZykge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBhcmc7XG4gIH07XG59XG5cbi8qKlxuICogVGhpcyBmdW5jdGlvbiBhY2NlcHRzIGFuZCBkaXNjYXJkcyBpbnB1dHM7IGl0IGhhcyBubyBzaWRlIGVmZmVjdHMuIFRoaXMgaXNcbiAqIHByaW1hcmlseSB1c2VmdWwgaWRpb21hdGljYWxseSBmb3Igb3ZlcnJpZGFibGUgZnVuY3Rpb24gZW5kcG9pbnRzIHdoaWNoXG4gKiBhbHdheXMgbmVlZCB0byBiZSBjYWxsYWJsZSwgc2luY2UgSlMgbGFja3MgYSBudWxsLWNhbGwgaWRpb20gYWxhIENvY29hLlxuICovXG52YXIgZW1wdHlGdW5jdGlvbiA9IGZ1bmN0aW9uIGVtcHR5RnVuY3Rpb24oKSB7fTtcblxuZW1wdHlGdW5jdGlvbi50aGF0UmV0dXJucyA9IG1ha2VFbXB0eUZ1bmN0aW9uO1xuZW1wdHlGdW5jdGlvbi50aGF0UmV0dXJuc0ZhbHNlID0gbWFrZUVtcHR5RnVuY3Rpb24oZmFsc2UpO1xuZW1wdHlGdW5jdGlvbi50aGF0UmV0dXJuc1RydWUgPSBtYWtlRW1wdHlGdW5jdGlvbih0cnVlKTtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNOdWxsID0gbWFrZUVtcHR5RnVuY3Rpb24obnVsbCk7XG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zVGhpcyA9IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIHRoaXM7XG59O1xuZW1wdHlGdW5jdGlvbi50aGF0UmV0dXJuc0FyZ3VtZW50ID0gZnVuY3Rpb24gKGFyZykge1xuICByZXR1cm4gYXJnO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBlbXB0eUZ1bmN0aW9uOyIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIGVtcHR5T2JqZWN0ID0ge307XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIE9iamVjdC5mcmVlemUoZW1wdHlPYmplY3QpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGVtcHR5T2JqZWN0OyIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBAcGFyYW0ge0RPTUVsZW1lbnR9IG5vZGUgaW5wdXQvdGV4dGFyZWEgdG8gZm9jdXNcbiAqL1xuXG5mdW5jdGlvbiBmb2N1c05vZGUobm9kZSkge1xuICAvLyBJRTggY2FuIHRocm93IFwiQ2FuJ3QgbW92ZSBmb2N1cyB0byB0aGUgY29udHJvbCBiZWNhdXNlIGl0IGlzIGludmlzaWJsZSxcbiAgLy8gbm90IGVuYWJsZWQsIG9yIG9mIGEgdHlwZSB0aGF0IGRvZXMgbm90IGFjY2VwdCB0aGUgZm9jdXMuXCIgZm9yIGFsbCBraW5kcyBvZlxuICAvLyByZWFzb25zIHRoYXQgYXJlIHRvbyBleHBlbnNpdmUgYW5kIGZyYWdpbGUgdG8gdGVzdC5cbiAgdHJ5IHtcbiAgICBub2RlLmZvY3VzKCk7XG4gIH0gY2F0Y2ggKGUpIHt9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZm9jdXNOb2RlOyIsIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAdHlwZWNoZWNrc1xuICovXG5cbi8qIGVzbGludC1kaXNhYmxlIGZiLXd3dy90eXBlb2YtdW5kZWZpbmVkICovXG5cbi8qKlxuICogU2FtZSBhcyBkb2N1bWVudC5hY3RpdmVFbGVtZW50IGJ1dCB3cmFwcyBpbiBhIHRyeS1jYXRjaCBibG9jay4gSW4gSUUgaXQgaXNcbiAqIG5vdCBzYWZlIHRvIGNhbGwgZG9jdW1lbnQuYWN0aXZlRWxlbWVudCBpZiB0aGVyZSBpcyBub3RoaW5nIGZvY3VzZWQuXG4gKlxuICogVGhlIGFjdGl2ZUVsZW1lbnQgd2lsbCBiZSBudWxsIG9ubHkgaWYgdGhlIGRvY3VtZW50IG9yIGRvY3VtZW50IGJvZHkgaXMgbm90XG4gKiB5ZXQgZGVmaW5lZC5cbiAqXG4gKiBAcGFyYW0gez9ET01Eb2N1bWVudH0gZG9jIERlZmF1bHRzIHRvIGN1cnJlbnQgZG9jdW1lbnQuXG4gKiBAcmV0dXJuIHs/RE9NRWxlbWVudH1cbiAqL1xuZnVuY3Rpb24gZ2V0QWN0aXZlRWxlbWVudChkb2MpIC8qP0RPTUVsZW1lbnQqL3tcbiAgZG9jID0gZG9jIHx8ICh0eXBlb2YgZG9jdW1lbnQgIT09ICd1bmRlZmluZWQnID8gZG9jdW1lbnQgOiB1bmRlZmluZWQpO1xuICBpZiAodHlwZW9mIGRvYyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICB0cnkge1xuICAgIHJldHVybiBkb2MuYWN0aXZlRWxlbWVudCB8fCBkb2MuYm9keTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiBkb2MuYm9keTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGdldEFjdGl2ZUVsZW1lbnQ7IiwiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEB0eXBlY2hlY2tzXG4gKi9cblxuLyoqXG4gKiBAcGFyYW0geyp9IG9iamVjdCBUaGUgb2JqZWN0IHRvIGNoZWNrLlxuICogQHJldHVybiB7Ym9vbGVhbn0gV2hldGhlciBvciBub3QgdGhlIG9iamVjdCBpcyBhIERPTSBub2RlLlxuICovXG5mdW5jdGlvbiBpc05vZGUob2JqZWN0KSB7XG4gIHZhciBkb2MgPSBvYmplY3QgPyBvYmplY3Qub3duZXJEb2N1bWVudCB8fCBvYmplY3QgOiBkb2N1bWVudDtcbiAgdmFyIGRlZmF1bHRWaWV3ID0gZG9jLmRlZmF1bHRWaWV3IHx8IHdpbmRvdztcbiAgcmV0dXJuICEhKG9iamVjdCAmJiAodHlwZW9mIGRlZmF1bHRWaWV3Lk5vZGUgPT09ICdmdW5jdGlvbicgPyBvYmplY3QgaW5zdGFuY2VvZiBkZWZhdWx0Vmlldy5Ob2RlIDogdHlwZW9mIG9iamVjdCA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIG9iamVjdC5ub2RlVHlwZSA9PT0gJ251bWJlcicgJiYgdHlwZW9mIG9iamVjdC5ub2RlTmFtZSA9PT0gJ3N0cmluZycpKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc05vZGU7IiwiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEB0eXBlY2hlY2tzXG4gKi9cblxudmFyIGlzTm9kZSA9IHJlcXVpcmUoJy4vaXNOb2RlJyk7XG5cbi8qKlxuICogQHBhcmFtIHsqfSBvYmplY3QgVGhlIG9iamVjdCB0byBjaGVjay5cbiAqIEByZXR1cm4ge2Jvb2xlYW59IFdoZXRoZXIgb3Igbm90IHRoZSBvYmplY3QgaXMgYSBET00gdGV4dCBub2RlLlxuICovXG5mdW5jdGlvbiBpc1RleHROb2RlKG9iamVjdCkge1xuICByZXR1cm4gaXNOb2RlKG9iamVjdCkgJiYgb2JqZWN0Lm5vZGVUeXBlID09IDM7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaXNUZXh0Tm9kZTsiLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEB0eXBlY2hlY2tzXG4gKiBcbiAqL1xuXG4vKmVzbGludC1kaXNhYmxlIG5vLXNlbGYtY29tcGFyZSAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5cbi8qKlxuICogaW5saW5lZCBPYmplY3QuaXMgcG9seWZpbGwgdG8gYXZvaWQgcmVxdWlyaW5nIGNvbnN1bWVycyBzaGlwIHRoZWlyIG93blxuICogaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvT2JqZWN0L2lzXG4gKi9cbmZ1bmN0aW9uIGlzKHgsIHkpIHtcbiAgLy8gU2FtZVZhbHVlIGFsZ29yaXRobVxuICBpZiAoeCA9PT0geSkge1xuICAgIC8vIFN0ZXBzIDEtNSwgNy0xMFxuICAgIC8vIFN0ZXBzIDYuYi02LmU6ICswICE9IC0wXG4gICAgLy8gQWRkZWQgdGhlIG5vbnplcm8geSBjaGVjayB0byBtYWtlIEZsb3cgaGFwcHksIGJ1dCBpdCBpcyByZWR1bmRhbnRcbiAgICByZXR1cm4geCAhPT0gMCB8fCB5ICE9PSAwIHx8IDEgLyB4ID09PSAxIC8geTtcbiAgfSBlbHNlIHtcbiAgICAvLyBTdGVwIDYuYTogTmFOID09IE5hTlxuICAgIHJldHVybiB4ICE9PSB4ICYmIHkgIT09IHk7XG4gIH1cbn1cblxuLyoqXG4gKiBQZXJmb3JtcyBlcXVhbGl0eSBieSBpdGVyYXRpbmcgdGhyb3VnaCBrZXlzIG9uIGFuIG9iamVjdCBhbmQgcmV0dXJuaW5nIGZhbHNlXG4gKiB3aGVuIGFueSBrZXkgaGFzIHZhbHVlcyB3aGljaCBhcmUgbm90IHN0cmljdGx5IGVxdWFsIGJldHdlZW4gdGhlIGFyZ3VtZW50cy5cbiAqIFJldHVybnMgdHJ1ZSB3aGVuIHRoZSB2YWx1ZXMgb2YgYWxsIGtleXMgYXJlIHN0cmljdGx5IGVxdWFsLlxuICovXG5mdW5jdGlvbiBzaGFsbG93RXF1YWwob2JqQSwgb2JqQikge1xuICBpZiAoaXMob2JqQSwgb2JqQikpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIGlmICh0eXBlb2Ygb2JqQSAhPT0gJ29iamVjdCcgfHwgb2JqQSA9PT0gbnVsbCB8fCB0eXBlb2Ygb2JqQiAhPT0gJ29iamVjdCcgfHwgb2JqQiA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHZhciBrZXlzQSA9IE9iamVjdC5rZXlzKG9iakEpO1xuICB2YXIga2V5c0IgPSBPYmplY3Qua2V5cyhvYmpCKTtcblxuICBpZiAoa2V5c0EubGVuZ3RoICE9PSBrZXlzQi5sZW5ndGgpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICAvLyBUZXN0IGZvciBBJ3Mga2V5cyBkaWZmZXJlbnQgZnJvbSBCLlxuICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXNBLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKCFoYXNPd25Qcm9wZXJ0eS5jYWxsKG9iakIsIGtleXNBW2ldKSB8fCAhaXMob2JqQVtrZXlzQVtpXV0sIG9iakJba2V5c0FbaV1dKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNoYWxsb3dFcXVhbDsiLCIvLyBzdXBlciBzaW1wbGUgbW9kdWxlIGZvciB0aGUgbW9zdCBjb21tb24gbm9kZWpzIHVzZSBjYXNlLlxuZXhwb3J0cy5tYXJrZG93biA9IHJlcXVpcmUoXCIuL21hcmtkb3duXCIpO1xuZXhwb3J0cy5wYXJzZSA9IGV4cG9ydHMubWFya2Rvd24udG9IVE1MO1xuIiwiLy8gUmVsZWFzZWQgdW5kZXIgTUlUIGxpY2Vuc2Vcbi8vIENvcHlyaWdodCAoYykgMjAwOS0yMDEwIERvbWluaWMgQmFnZ290dFxuLy8gQ29weXJpZ2h0IChjKSAyMDA5LTIwMTAgQXNoIEJlcmxpblxuLy8gQ29weXJpZ2h0IChjKSAyMDExIENocmlzdG9waCBEb3JuIDxjaHJpc3RvcGhAY2hyaXN0b3BoZG9ybi5jb20+IChodHRwOi8vd3d3LmNocmlzdG9waGRvcm4uY29tKVxuXG4vKmpzaGludCBicm93c2VyOnRydWUsIGRldmVsOnRydWUgKi9cblxuKGZ1bmN0aW9uKCBleHBvc2UgKSB7XG5cbi8qKlxuICogIGNsYXNzIE1hcmtkb3duXG4gKlxuICogIE1hcmtkb3duIHByb2Nlc3NpbmcgaW4gSmF2YXNjcmlwdCBkb25lIHJpZ2h0LiBXZSBoYXZlIHZlcnkgcGFydGljdWxhciB2aWV3c1xuICogIG9uIHdoYXQgY29uc3RpdHV0ZXMgJ3JpZ2h0JyB3aGljaCBpbmNsdWRlOlxuICpcbiAqICAtIHByb2R1Y2VzIHdlbGwtZm9ybWVkIEhUTUwgKHRoaXMgbWVhbnMgdGhhdCBlbSBhbmQgc3Ryb25nIG5lc3RpbmcgaXNcbiAqICAgIGltcG9ydGFudClcbiAqXG4gKiAgLSBoYXMgYW4gaW50ZXJtZWRpYXRlIHJlcHJlc2VudGF0aW9uIHRvIGFsbG93IHByb2Nlc3Npbmcgb2YgcGFyc2VkIGRhdGEgKFdlXG4gKiAgICBpbiBmYWN0IGhhdmUgdHdvLCBib3RoIGFzIFtKc29uTUxdOiBhIG1hcmtkb3duIHRyZWUgYW5kIGFuIEhUTUwgdHJlZSkuXG4gKlxuICogIC0gaXMgZWFzaWx5IGV4dGVuc2libGUgdG8gYWRkIG5ldyBkaWFsZWN0cyB3aXRob3V0IGhhdmluZyB0byByZXdyaXRlIHRoZVxuICogICAgZW50aXJlIHBhcnNpbmcgbWVjaGFuaWNzXG4gKlxuICogIC0gaGFzIGEgZ29vZCB0ZXN0IHN1aXRlXG4gKlxuICogIFRoaXMgaW1wbGVtZW50YXRpb24gZnVsZmlsbHMgYWxsIG9mIHRoZXNlIChleGNlcHQgdGhhdCB0aGUgdGVzdCBzdWl0ZSBjb3VsZFxuICogIGRvIHdpdGggZXhwYW5kaW5nIHRvIGF1dG9tYXRpY2FsbHkgcnVuIGFsbCB0aGUgZml4dHVyZXMgZnJvbSBvdGhlciBNYXJrZG93blxuICogIGltcGxlbWVudGF0aW9ucy4pXG4gKlxuICogICMjIyMjIEludGVybWVkaWF0ZSBSZXByZXNlbnRhdGlvblxuICpcbiAqICAqVE9ETyogVGFsayBhYm91dCB0aGlzIDopIEl0cyBKc29uTUwsIGJ1dCBkb2N1bWVudCB0aGUgbm9kZSBuYW1lcyB3ZSB1c2UuXG4gKlxuICogIFtKc29uTUxdOiBodHRwOi8vanNvbm1sLm9yZy8gXCJKU09OIE1hcmt1cCBMYW5ndWFnZVwiXG4gKiovXG52YXIgTWFya2Rvd24gPSBleHBvc2UuTWFya2Rvd24gPSBmdW5jdGlvbihkaWFsZWN0KSB7XG4gIHN3aXRjaCAodHlwZW9mIGRpYWxlY3QpIHtcbiAgICBjYXNlIFwidW5kZWZpbmVkXCI6XG4gICAgICB0aGlzLmRpYWxlY3QgPSBNYXJrZG93bi5kaWFsZWN0cy5HcnViZXI7XG4gICAgICBicmVhaztcbiAgICBjYXNlIFwib2JqZWN0XCI6XG4gICAgICB0aGlzLmRpYWxlY3QgPSBkaWFsZWN0O1xuICAgICAgYnJlYWs7XG4gICAgZGVmYXVsdDpcbiAgICAgIGlmICggZGlhbGVjdCBpbiBNYXJrZG93bi5kaWFsZWN0cyApIHtcbiAgICAgICAgdGhpcy5kaWFsZWN0ID0gTWFya2Rvd24uZGlhbGVjdHNbZGlhbGVjdF07XG4gICAgICB9XG4gICAgICBlbHNlIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVW5rbm93biBNYXJrZG93biBkaWFsZWN0ICdcIiArIFN0cmluZyhkaWFsZWN0KSArIFwiJ1wiKTtcbiAgICAgIH1cbiAgICAgIGJyZWFrO1xuICB9XG4gIHRoaXMuZW1fc3RhdGUgPSBbXTtcbiAgdGhpcy5zdHJvbmdfc3RhdGUgPSBbXTtcbiAgdGhpcy5kZWJ1Z19pbmRlbnQgPSBcIlwiO1xufTtcblxuLyoqXG4gKiAgcGFyc2UoIG1hcmtkb3duLCBbZGlhbGVjdF0gKSAtPiBKc29uTUxcbiAqICAtIG1hcmtkb3duIChTdHJpbmcpOiBtYXJrZG93biBzdHJpbmcgdG8gcGFyc2VcbiAqICAtIGRpYWxlY3QgKFN0cmluZyB8IERpYWxlY3QpOiB0aGUgZGlhbGVjdCB0byB1c2UsIGRlZmF1bHRzIHRvIGdydWJlclxuICpcbiAqICBQYXJzZSBgbWFya2Rvd25gIGFuZCByZXR1cm4gYSBtYXJrZG93biBkb2N1bWVudCBhcyBhIE1hcmtkb3duLkpzb25NTCB0cmVlLlxuICoqL1xuZXhwb3NlLnBhcnNlID0gZnVuY3Rpb24oIHNvdXJjZSwgZGlhbGVjdCApIHtcbiAgLy8gZGlhbGVjdCB3aWxsIGRlZmF1bHQgaWYgdW5kZWZpbmVkXG4gIHZhciBtZCA9IG5ldyBNYXJrZG93biggZGlhbGVjdCApO1xuICByZXR1cm4gbWQudG9UcmVlKCBzb3VyY2UgKTtcbn07XG5cbi8qKlxuICogIHRvSFRNTCggbWFya2Rvd24sIFtkaWFsZWN0XSAgKSAtPiBTdHJpbmdcbiAqICB0b0hUTUwoIG1kX3RyZWUgKSAtPiBTdHJpbmdcbiAqICAtIG1hcmtkb3duIChTdHJpbmcpOiBtYXJrZG93biBzdHJpbmcgdG8gcGFyc2VcbiAqICAtIG1kX3RyZWUgKE1hcmtkb3duLkpzb25NTCk6IHBhcnNlZCBtYXJrZG93biB0cmVlXG4gKlxuICogIFRha2UgbWFya2Rvd24gKGVpdGhlciBhcyBhIHN0cmluZyBvciBhcyBhIEpzb25NTCB0cmVlKSBhbmQgcnVuIGl0IHRocm91Z2hcbiAqICBbW3RvSFRNTFRyZWVdXSB0aGVuIHR1cm4gaXQgaW50byBhIHdlbGwtZm9ybWF0ZWQgSFRNTCBmcmFnbWVudC5cbiAqKi9cbmV4cG9zZS50b0hUTUwgPSBmdW5jdGlvbiB0b0hUTUwoIHNvdXJjZSAsIGRpYWxlY3QgLCBvcHRpb25zICkge1xuICB2YXIgaW5wdXQgPSBleHBvc2UudG9IVE1MVHJlZSggc291cmNlICwgZGlhbGVjdCAsIG9wdGlvbnMgKTtcblxuICByZXR1cm4gZXhwb3NlLnJlbmRlckpzb25NTCggaW5wdXQgKTtcbn07XG5cbi8qKlxuICogIHRvSFRNTFRyZWUoIG1hcmtkb3duLCBbZGlhbGVjdF0gKSAtPiBKc29uTUxcbiAqICB0b0hUTUxUcmVlKCBtZF90cmVlICkgLT4gSnNvbk1MXG4gKiAgLSBtYXJrZG93biAoU3RyaW5nKTogbWFya2Rvd24gc3RyaW5nIHRvIHBhcnNlXG4gKiAgLSBkaWFsZWN0IChTdHJpbmcgfCBEaWFsZWN0KTogdGhlIGRpYWxlY3QgdG8gdXNlLCBkZWZhdWx0cyB0byBncnViZXJcbiAqICAtIG1kX3RyZWUgKE1hcmtkb3duLkpzb25NTCk6IHBhcnNlZCBtYXJrZG93biB0cmVlXG4gKlxuICogIFR1cm4gbWFya2Rvd24gaW50byBIVE1MLCByZXByZXNlbnRlZCBhcyBhIEpzb25NTCB0cmVlLiBJZiBhIHN0cmluZyBpcyBnaXZlblxuICogIHRvIHRoaXMgZnVuY3Rpb24sIGl0IGlzIGZpcnN0IHBhcnNlZCBpbnRvIGEgbWFya2Rvd24gdHJlZSBieSBjYWxsaW5nXG4gKiAgW1twYXJzZV1dLlxuICoqL1xuZXhwb3NlLnRvSFRNTFRyZWUgPSBmdW5jdGlvbiB0b0hUTUxUcmVlKCBpbnB1dCwgZGlhbGVjdCAsIG9wdGlvbnMgKSB7XG4gIC8vIGNvbnZlcnQgc3RyaW5nIGlucHV0IHRvIGFuIE1EIHRyZWVcbiAgaWYgKCB0eXBlb2YgaW5wdXQgPT09XCJzdHJpbmdcIiApIGlucHV0ID0gdGhpcy5wYXJzZSggaW5wdXQsIGRpYWxlY3QgKTtcblxuICAvLyBOb3cgY29udmVydCB0aGUgTUQgdHJlZSB0byBhbiBIVE1MIHRyZWVcblxuICAvLyByZW1vdmUgcmVmZXJlbmNlcyBmcm9tIHRoZSB0cmVlXG4gIHZhciBhdHRycyA9IGV4dHJhY3RfYXR0ciggaW5wdXQgKSxcbiAgICAgIHJlZnMgPSB7fTtcblxuICBpZiAoIGF0dHJzICYmIGF0dHJzLnJlZmVyZW5jZXMgKSB7XG4gICAgcmVmcyA9IGF0dHJzLnJlZmVyZW5jZXM7XG4gIH1cblxuICB2YXIgaHRtbCA9IGNvbnZlcnRfdHJlZV90b19odG1sKCBpbnB1dCwgcmVmcyAsIG9wdGlvbnMgKTtcbiAgbWVyZ2VfdGV4dF9ub2RlcyggaHRtbCApO1xuICByZXR1cm4gaHRtbDtcbn07XG5cbi8vIEZvciBTcGlkZXJtb25rZXkgYmFzZWQgZW5naW5lc1xuZnVuY3Rpb24gbWtfYmxvY2tfdG9Tb3VyY2UoKSB7XG4gIHJldHVybiBcIk1hcmtkb3duLm1rX2Jsb2NrKCBcIiArXG4gICAgICAgICAgdW5ldmFsKHRoaXMudG9TdHJpbmcoKSkgK1xuICAgICAgICAgIFwiLCBcIiArXG4gICAgICAgICAgdW5ldmFsKHRoaXMudHJhaWxpbmcpICtcbiAgICAgICAgICBcIiwgXCIgK1xuICAgICAgICAgIHVuZXZhbCh0aGlzLmxpbmVOdW1iZXIpICtcbiAgICAgICAgICBcIiApXCI7XG59XG5cbi8vIG5vZGVcbmZ1bmN0aW9uIG1rX2Jsb2NrX2luc3BlY3QoKSB7XG4gIHZhciB1dGlsID0gcmVxdWlyZShcInV0aWxcIik7XG4gIHJldHVybiBcIk1hcmtkb3duLm1rX2Jsb2NrKCBcIiArXG4gICAgICAgICAgdXRpbC5pbnNwZWN0KHRoaXMudG9TdHJpbmcoKSkgK1xuICAgICAgICAgIFwiLCBcIiArXG4gICAgICAgICAgdXRpbC5pbnNwZWN0KHRoaXMudHJhaWxpbmcpICtcbiAgICAgICAgICBcIiwgXCIgK1xuICAgICAgICAgIHV0aWwuaW5zcGVjdCh0aGlzLmxpbmVOdW1iZXIpICtcbiAgICAgICAgICBcIiApXCI7XG5cbn1cblxudmFyIG1rX2Jsb2NrID0gTWFya2Rvd24ubWtfYmxvY2sgPSBmdW5jdGlvbihibG9jaywgdHJhaWwsIGxpbmUpIHtcbiAgLy8gQmUgaGVscGZ1bCBmb3IgZGVmYXVsdCBjYXNlIGluIHRlc3RzLlxuICBpZiAoIGFyZ3VtZW50cy5sZW5ndGggPT0gMSApIHRyYWlsID0gXCJcXG5cXG5cIjtcblxuICB2YXIgcyA9IG5ldyBTdHJpbmcoYmxvY2spO1xuICBzLnRyYWlsaW5nID0gdHJhaWw7XG4gIC8vIFRvIG1ha2UgaXQgY2xlYXIgaXRzIG5vdCBqdXN0IGEgc3RyaW5nXG4gIHMuaW5zcGVjdCA9IG1rX2Jsb2NrX2luc3BlY3Q7XG4gIHMudG9Tb3VyY2UgPSBta19ibG9ja190b1NvdXJjZTtcblxuICBpZiAoIGxpbmUgIT0gdW5kZWZpbmVkIClcbiAgICBzLmxpbmVOdW1iZXIgPSBsaW5lO1xuXG4gIHJldHVybiBzO1xufTtcblxuZnVuY3Rpb24gY291bnRfbGluZXMoIHN0ciApIHtcbiAgdmFyIG4gPSAwLCBpID0gLTE7XG4gIHdoaWxlICggKCBpID0gc3RyLmluZGV4T2YoXCJcXG5cIiwgaSArIDEpICkgIT09IC0xICkgbisrO1xuICByZXR1cm4gbjtcbn1cblxuLy8gSW50ZXJuYWwgLSBzcGxpdCBzb3VyY2UgaW50byByb3VnaCBibG9ja3Ncbk1hcmtkb3duLnByb3RvdHlwZS5zcGxpdF9ibG9ja3MgPSBmdW5jdGlvbiBzcGxpdEJsb2NrcyggaW5wdXQsIHN0YXJ0TGluZSApIHtcbiAgaW5wdXQgPSBpbnB1dC5yZXBsYWNlKC8oXFxyXFxufFxcbnxcXHIpL2csIFwiXFxuXCIpO1xuICAvLyBbXFxzXFxTXSBtYXRjaGVzIF9hbnl0aGluZ18gKG5ld2xpbmUgb3Igc3BhY2UpXG4gIC8vIFteXSBpcyBlcXVpdmFsZW50IGJ1dCBkb2Vzbid0IHdvcmsgaW4gSUVzLlxuICB2YXIgcmUgPSAvKFtcXHNcXFNdKz8pKCR8XFxuI3xcXG4oPzpcXHMqXFxufCQpKykvZyxcbiAgICAgIGJsb2NrcyA9IFtdLFxuICAgICAgbTtcblxuICB2YXIgbGluZV9ubyA9IDE7XG5cbiAgaWYgKCAoIG0gPSAvXihcXHMqXFxuKS8uZXhlYyhpbnB1dCkgKSAhPSBudWxsICkge1xuICAgIC8vIHNraXAgKGJ1dCBjb3VudCkgbGVhZGluZyBibGFuayBsaW5lc1xuICAgIGxpbmVfbm8gKz0gY291bnRfbGluZXMoIG1bMF0gKTtcbiAgICByZS5sYXN0SW5kZXggPSBtWzBdLmxlbmd0aDtcbiAgfVxuXG4gIHdoaWxlICggKCBtID0gcmUuZXhlYyhpbnB1dCkgKSAhPT0gbnVsbCApIHtcbiAgICBpZiAobVsyXSA9PSBcIlxcbiNcIikge1xuICAgICAgbVsyXSA9IFwiXFxuXCI7XG4gICAgICByZS5sYXN0SW5kZXgtLTtcbiAgICB9XG4gICAgYmxvY2tzLnB1c2goIG1rX2Jsb2NrKCBtWzFdLCBtWzJdLCBsaW5lX25vICkgKTtcbiAgICBsaW5lX25vICs9IGNvdW50X2xpbmVzKCBtWzBdICk7XG4gIH1cblxuICByZXR1cm4gYmxvY2tzO1xufTtcblxuLyoqXG4gKiAgTWFya2Rvd24jcHJvY2Vzc0Jsb2NrKCBibG9jaywgbmV4dCApIC0+IHVuZGVmaW5lZCB8IFsgSnNvbk1MLCAuLi4gXVxuICogIC0gYmxvY2sgKFN0cmluZyk6IHRoZSBibG9jayB0byBwcm9jZXNzXG4gKiAgLSBuZXh0IChBcnJheSk6IHRoZSBmb2xsb3dpbmcgYmxvY2tzXG4gKlxuICogUHJvY2VzcyBgYmxvY2tgIGFuZCByZXR1cm4gYW4gYXJyYXkgb2YgSnNvbk1MIG5vZGVzIHJlcHJlc2VudGluZyBgYmxvY2tgLlxuICpcbiAqIEl0IGRvZXMgdGhpcyBieSBhc2tpbmcgZWFjaCBibG9jayBsZXZlbCBmdW5jdGlvbiBpbiB0aGUgZGlhbGVjdCB0byBwcm9jZXNzXG4gKiB0aGUgYmxvY2sgdW50aWwgb25lIGNhbi4gU3VjY2VzZnVsIGhhbmRsaW5nIGlzIGluZGljYXRlZCBieSByZXR1cm5pbmcgYW5cbiAqIGFycmF5ICh3aXRoIHplcm8gb3IgbW9yZSBKc29uTUwgbm9kZXMpLCBmYWlsdXJlIGJ5IGEgZmFsc2UgdmFsdWUuXG4gKlxuICogQmxvY2tzIGhhbmRsZXJzIGFyZSByZXNwb25zaWJsZSBmb3IgY2FsbGluZyBbW01hcmtkb3duI3Byb2Nlc3NJbmxpbmVdXVxuICogdGhlbXNlbHZlcyBhcyBhcHByb3ByaWF0ZS5cbiAqXG4gKiBJZiB0aGUgYmxvY2tzIHdlcmUgc3BsaXQgaW5jb3JyZWN0bHkgb3IgYWRqYWNlbnQgYmxvY2tzIG5lZWQgY29sbGFwc2luZyB5b3VcbiAqIGNhbiBhZGp1c3QgYG5leHRgIGluIHBsYWNlIHVzaW5nIHNoaWZ0L3NwbGljZSBldGMuXG4gKlxuICogSWYgYW55IG9mIHRoaXMgZGVmYXVsdCBiZWhhdmlvdXIgaXMgbm90IHJpZ2h0IGZvciB0aGUgZGlhbGVjdCwgeW91IGNhblxuICogZGVmaW5lIGEgYF9fY2FsbF9fYCBtZXRob2Qgb24gdGhlIGRpYWxlY3QgdGhhdCB3aWxsIGdldCBpbnZva2VkIHRvIGhhbmRsZVxuICogdGhlIGJsb2NrIHByb2Nlc3NpbmcuXG4gKi9cbk1hcmtkb3duLnByb3RvdHlwZS5wcm9jZXNzQmxvY2sgPSBmdW5jdGlvbiBwcm9jZXNzQmxvY2soIGJsb2NrLCBuZXh0ICkge1xuICB2YXIgY2JzID0gdGhpcy5kaWFsZWN0LmJsb2NrLFxuICAgICAgb3JkID0gY2JzLl9fb3JkZXJfXztcblxuICBpZiAoIFwiX19jYWxsX19cIiBpbiBjYnMgKSB7XG4gICAgcmV0dXJuIGNicy5fX2NhbGxfXy5jYWxsKHRoaXMsIGJsb2NrLCBuZXh0KTtcbiAgfVxuXG4gIGZvciAoIHZhciBpID0gMDsgaSA8IG9yZC5sZW5ndGg7IGkrKyApIHtcbiAgICAvL0Q6dGhpcy5kZWJ1ZyggXCJUZXN0aW5nXCIsIG9yZFtpXSApO1xuICAgIHZhciByZXMgPSBjYnNbIG9yZFtpXSBdLmNhbGwoIHRoaXMsIGJsb2NrLCBuZXh0ICk7XG4gICAgaWYgKCByZXMgKSB7XG4gICAgICAvL0Q6dGhpcy5kZWJ1ZyhcIiAgbWF0Y2hlZFwiKTtcbiAgICAgIGlmICggIWlzQXJyYXkocmVzKSB8fCAoIHJlcy5sZW5ndGggPiAwICYmICEoIGlzQXJyYXkocmVzWzBdKSApICkgKVxuICAgICAgICB0aGlzLmRlYnVnKG9yZFtpXSwgXCJkaWRuJ3QgcmV0dXJuIGEgcHJvcGVyIGFycmF5XCIpO1xuICAgICAgLy9EOnRoaXMuZGVidWcoIFwiXCIgKTtcbiAgICAgIHJldHVybiByZXM7XG4gICAgfVxuICB9XG5cbiAgLy8gVWhvaCEgbm8gbWF0Y2ghIFNob3VsZCB3ZSB0aHJvdyBhbiBlcnJvcj9cbiAgcmV0dXJuIFtdO1xufTtcblxuTWFya2Rvd24ucHJvdG90eXBlLnByb2Nlc3NJbmxpbmUgPSBmdW5jdGlvbiBwcm9jZXNzSW5saW5lKCBibG9jayApIHtcbiAgcmV0dXJuIHRoaXMuZGlhbGVjdC5pbmxpbmUuX19jYWxsX18uY2FsbCggdGhpcywgU3RyaW5nKCBibG9jayApICk7XG59O1xuXG4vKipcbiAqICBNYXJrZG93biN0b1RyZWUoIHNvdXJjZSApIC0+IEpzb25NTFxuICogIC0gc291cmNlIChTdHJpbmcpOiBtYXJrZG93biBzb3VyY2UgdG8gcGFyc2VcbiAqXG4gKiAgUGFyc2UgYHNvdXJjZWAgaW50byBhIEpzb25NTCB0cmVlIHJlcHJlc2VudGluZyB0aGUgbWFya2Rvd24gZG9jdW1lbnQuXG4gKiovXG4vLyBjdXN0b21fdHJlZSBtZWFucyBzZXQgdGhpcy50cmVlIHRvIGBjdXN0b21fdHJlZWAgYW5kIHJlc3RvcmUgb2xkIHZhbHVlIG9uIHJldHVyblxuTWFya2Rvd24ucHJvdG90eXBlLnRvVHJlZSA9IGZ1bmN0aW9uIHRvVHJlZSggc291cmNlLCBjdXN0b21fcm9vdCApIHtcbiAgdmFyIGJsb2NrcyA9IHNvdXJjZSBpbnN0YW5jZW9mIEFycmF5ID8gc291cmNlIDogdGhpcy5zcGxpdF9ibG9ja3MoIHNvdXJjZSApO1xuXG4gIC8vIE1ha2UgdHJlZSBhIG1lbWJlciB2YXJpYWJsZSBzbyBpdHMgZWFzaWVyIHRvIG1lc3Mgd2l0aCBpbiBleHRlbnNpb25zXG4gIHZhciBvbGRfdHJlZSA9IHRoaXMudHJlZTtcbiAgdHJ5IHtcbiAgICB0aGlzLnRyZWUgPSBjdXN0b21fcm9vdCB8fCB0aGlzLnRyZWUgfHwgWyBcIm1hcmtkb3duXCIgXTtcblxuICAgIGJsb2NrczpcbiAgICB3aGlsZSAoIGJsb2Nrcy5sZW5ndGggKSB7XG4gICAgICB2YXIgYiA9IHRoaXMucHJvY2Vzc0Jsb2NrKCBibG9ja3Muc2hpZnQoKSwgYmxvY2tzICk7XG5cbiAgICAgIC8vIFJlZmVyZW5jZSBibG9ja3MgYW5kIHRoZSBsaWtlIHdvbid0IHJldHVybiBhbnkgY29udGVudFxuICAgICAgaWYgKCAhYi5sZW5ndGggKSBjb250aW51ZSBibG9ja3M7XG5cbiAgICAgIHRoaXMudHJlZS5wdXNoLmFwcGx5KCB0aGlzLnRyZWUsIGIgKTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMudHJlZTtcbiAgfVxuICBmaW5hbGx5IHtcbiAgICBpZiAoIGN1c3RvbV9yb290ICkge1xuICAgICAgdGhpcy50cmVlID0gb2xkX3RyZWU7XG4gICAgfVxuICB9XG59O1xuXG4vLyBOb29wIGJ5IGRlZmF1bHRcbk1hcmtkb3duLnByb3RvdHlwZS5kZWJ1ZyA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIGFyZ3MgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbCggYXJndW1lbnRzKTtcbiAgYXJncy51bnNoaWZ0KHRoaXMuZGVidWdfaW5kZW50KTtcbiAgaWYgKCB0eXBlb2YgcHJpbnQgIT09IFwidW5kZWZpbmVkXCIgKVxuICAgICAgcHJpbnQuYXBwbHkoIHByaW50LCBhcmdzICk7XG4gIGlmICggdHlwZW9mIGNvbnNvbGUgIT09IFwidW5kZWZpbmVkXCIgJiYgdHlwZW9mIGNvbnNvbGUubG9nICE9PSBcInVuZGVmaW5lZFwiIClcbiAgICAgIGNvbnNvbGUubG9nLmFwcGx5KCBudWxsLCBhcmdzICk7XG59XG5cbk1hcmtkb3duLnByb3RvdHlwZS5sb29wX3JlX292ZXJfYmxvY2sgPSBmdW5jdGlvbiggcmUsIGJsb2NrLCBjYiApIHtcbiAgLy8gRG9udCB1c2UgL2cgcmVnZXhwcyB3aXRoIHRoaXNcbiAgdmFyIG0sXG4gICAgICBiID0gYmxvY2sudmFsdWVPZigpO1xuXG4gIHdoaWxlICggYi5sZW5ndGggJiYgKG0gPSByZS5leGVjKGIpICkgIT0gbnVsbCApIHtcbiAgICBiID0gYi5zdWJzdHIoIG1bMF0ubGVuZ3RoICk7XG4gICAgY2IuY2FsbCh0aGlzLCBtKTtcbiAgfVxuICByZXR1cm4gYjtcbn07XG5cbi8qKlxuICogTWFya2Rvd24uZGlhbGVjdHNcbiAqXG4gKiBOYW1lc3BhY2Ugb2YgYnVpbHQtaW4gZGlhbGVjdHMuXG4gKiovXG5NYXJrZG93bi5kaWFsZWN0cyA9IHt9O1xuXG4vKipcbiAqIE1hcmtkb3duLmRpYWxlY3RzLkdydWJlclxuICpcbiAqIFRoZSBkZWZhdWx0IGRpYWxlY3QgdGhhdCBmb2xsb3dzIHRoZSBydWxlcyBzZXQgb3V0IGJ5IEpvaG4gR3J1YmVyJ3NcbiAqIG1hcmtkb3duLnBsIGFzIGNsb3NlbHkgYXMgcG9zc2libGUuIFdlbGwgYWN0dWFsbHkgd2UgZm9sbG93IHRoZSBiZWhhdmlvdXIgb2ZcbiAqIHRoYXQgc2NyaXB0IHdoaWNoIGluIHNvbWUgcGxhY2VzIGlzIG5vdCBleGFjdGx5IHdoYXQgdGhlIHN5bnRheCB3ZWIgcGFnZVxuICogc2F5cy5cbiAqKi9cbk1hcmtkb3duLmRpYWxlY3RzLkdydWJlciA9IHtcbiAgYmxvY2s6IHtcbiAgICBhdHhIZWFkZXI6IGZ1bmN0aW9uIGF0eEhlYWRlciggYmxvY2ssIG5leHQgKSB7XG4gICAgICB2YXIgbSA9IGJsb2NrLm1hdGNoKCAvXigjezEsNn0pXFxzKiguKj8pXFxzKiMqXFxzKig/OlxcbnwkKS8gKTtcblxuICAgICAgaWYgKCAhbSApIHJldHVybiB1bmRlZmluZWQ7XG5cbiAgICAgIHZhciBoZWFkZXIgPSBbIFwiaGVhZGVyXCIsIHsgbGV2ZWw6IG1bIDEgXS5sZW5ndGggfSBdO1xuICAgICAgQXJyYXkucHJvdG90eXBlLnB1c2guYXBwbHkoaGVhZGVyLCB0aGlzLnByb2Nlc3NJbmxpbmUobVsgMiBdKSk7XG5cbiAgICAgIGlmICggbVswXS5sZW5ndGggPCBibG9jay5sZW5ndGggKVxuICAgICAgICBuZXh0LnVuc2hpZnQoIG1rX2Jsb2NrKCBibG9jay5zdWJzdHIoIG1bMF0ubGVuZ3RoICksIGJsb2NrLnRyYWlsaW5nLCBibG9jay5saW5lTnVtYmVyICsgMiApICk7XG5cbiAgICAgIHJldHVybiBbIGhlYWRlciBdO1xuICAgIH0sXG5cbiAgICBzZXRleHRIZWFkZXI6IGZ1bmN0aW9uIHNldGV4dEhlYWRlciggYmxvY2ssIG5leHQgKSB7XG4gICAgICB2YXIgbSA9IGJsb2NrLm1hdGNoKCAvXiguKilcXG4oWy09XSlcXDJcXDIrKD86XFxufCQpLyApO1xuXG4gICAgICBpZiAoICFtICkgcmV0dXJuIHVuZGVmaW5lZDtcblxuICAgICAgdmFyIGxldmVsID0gKCBtWyAyIF0gPT09IFwiPVwiICkgPyAxIDogMjtcbiAgICAgIHZhciBoZWFkZXIgPSBbIFwiaGVhZGVyXCIsIHsgbGV2ZWwgOiBsZXZlbCB9LCBtWyAxIF0gXTtcblxuICAgICAgaWYgKCBtWzBdLmxlbmd0aCA8IGJsb2NrLmxlbmd0aCApXG4gICAgICAgIG5leHQudW5zaGlmdCggbWtfYmxvY2soIGJsb2NrLnN1YnN0ciggbVswXS5sZW5ndGggKSwgYmxvY2sudHJhaWxpbmcsIGJsb2NrLmxpbmVOdW1iZXIgKyAyICkgKTtcblxuICAgICAgcmV0dXJuIFsgaGVhZGVyIF07XG4gICAgfSxcblxuICAgIGNvZGU6IGZ1bmN0aW9uIGNvZGUoIGJsb2NrLCBuZXh0ICkge1xuICAgICAgLy8gfCAgICBGb29cbiAgICAgIC8vIHxiYXJcbiAgICAgIC8vIHNob3VsZCBiZSBhIGNvZGUgYmxvY2sgZm9sbG93ZWQgYnkgYSBwYXJhZ3JhcGguIEZ1blxuICAgICAgLy9cbiAgICAgIC8vIFRoZXJlIG1pZ2h0IGFsc28gYmUgYWRqYWNlbnQgY29kZSBibG9jayB0byBtZXJnZS5cblxuICAgICAgdmFyIHJldCA9IFtdLFxuICAgICAgICAgIHJlID0gL14oPzogezAsM31cXHR8IHs0fSkoLiopXFxuPy8sXG4gICAgICAgICAgbGluZXM7XG5cbiAgICAgIC8vIDQgc3BhY2VzICsgY29udGVudFxuICAgICAgaWYgKCAhYmxvY2subWF0Y2goIHJlICkgKSByZXR1cm4gdW5kZWZpbmVkO1xuXG4gICAgICBibG9ja19zZWFyY2g6XG4gICAgICBkbyB7XG4gICAgICAgIC8vIE5vdyBwdWxsIG91dCB0aGUgcmVzdCBvZiB0aGUgbGluZXNcbiAgICAgICAgdmFyIGIgPSB0aGlzLmxvb3BfcmVfb3Zlcl9ibG9jayhcbiAgICAgICAgICAgICAgICAgIHJlLCBibG9jay52YWx1ZU9mKCksIGZ1bmN0aW9uKCBtICkgeyByZXQucHVzaCggbVsxXSApOyB9ICk7XG5cbiAgICAgICAgaWYgKCBiLmxlbmd0aCApIHtcbiAgICAgICAgICAvLyBDYXNlIGFsbHVkZWQgdG8gaW4gZmlyc3QgY29tbWVudC4gcHVzaCBpdCBiYWNrIG9uIGFzIGEgbmV3IGJsb2NrXG4gICAgICAgICAgbmV4dC51bnNoaWZ0KCBta19ibG9jayhiLCBibG9jay50cmFpbGluZykgKTtcbiAgICAgICAgICBicmVhayBibG9ja19zZWFyY2g7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoIG5leHQubGVuZ3RoICkge1xuICAgICAgICAgIC8vIENoZWNrIHRoZSBuZXh0IGJsb2NrIC0gaXQgbWlnaHQgYmUgY29kZSB0b29cbiAgICAgICAgICBpZiAoICFuZXh0WzBdLm1hdGNoKCByZSApICkgYnJlYWsgYmxvY2tfc2VhcmNoO1xuXG4gICAgICAgICAgLy8gUHVsbCBob3cgaG93IG1hbnkgYmxhbmtzIGxpbmVzIGZvbGxvdyAtIG1pbnVzIHR3byB0byBhY2NvdW50IGZvciAuam9pblxuICAgICAgICAgIHJldC5wdXNoICggYmxvY2sudHJhaWxpbmcucmVwbGFjZSgvW15cXG5dL2csIFwiXCIpLnN1YnN0cmluZygyKSApO1xuXG4gICAgICAgICAgYmxvY2sgPSBuZXh0LnNoaWZ0KCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgYnJlYWsgYmxvY2tfc2VhcmNoO1xuICAgICAgICB9XG4gICAgICB9IHdoaWxlICggdHJ1ZSApO1xuXG4gICAgICByZXR1cm4gWyBbIFwiY29kZV9ibG9ja1wiLCByZXQuam9pbihcIlxcblwiKSBdIF07XG4gICAgfSxcblxuICAgIGhvcml6UnVsZTogZnVuY3Rpb24gaG9yaXpSdWxlKCBibG9jaywgbmV4dCApIHtcbiAgICAgIC8vIHRoaXMgbmVlZHMgdG8gZmluZCBhbnkgaHIgaW4gdGhlIGJsb2NrIHRvIGhhbmRsZSBhYnV0dGluZyBibG9ja3NcbiAgICAgIHZhciBtID0gYmxvY2subWF0Y2goIC9eKD86KFtcXHNcXFNdKj8pXFxuKT9bIFxcdF0qKFstXypdKSg/OlsgXFx0XSpcXDIpezIsfVsgXFx0XSooPzpcXG4oW1xcc1xcU10qKSk/JC8gKTtcblxuICAgICAgaWYgKCAhbSApIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgIH1cblxuICAgICAgdmFyIGpzb25tbCA9IFsgWyBcImhyXCIgXSBdO1xuXG4gICAgICAvLyBpZiB0aGVyZSdzIGEgbGVhZGluZyBhYnV0dGluZyBibG9jaywgcHJvY2VzcyBpdFxuICAgICAgaWYgKCBtWyAxIF0gKSB7XG4gICAgICAgIGpzb25tbC51bnNoaWZ0LmFwcGx5KCBqc29ubWwsIHRoaXMucHJvY2Vzc0Jsb2NrKCBtWyAxIF0sIFtdICkgKTtcbiAgICAgIH1cblxuICAgICAgLy8gaWYgdGhlcmUncyBhIHRyYWlsaW5nIGFidXR0aW5nIGJsb2NrLCBzdGljayBpdCBpbnRvIG5leHRcbiAgICAgIGlmICggbVsgMyBdICkge1xuICAgICAgICBuZXh0LnVuc2hpZnQoIG1rX2Jsb2NrKCBtWyAzIF0gKSApO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4ganNvbm1sO1xuICAgIH0sXG5cbiAgICAvLyBUaGVyZSBhcmUgdHdvIHR5cGVzIG9mIGxpc3RzLiBUaWdodCBhbmQgbG9vc2UuIFRpZ2h0IGxpc3RzIGhhdmUgbm8gd2hpdGVzcGFjZVxuICAgIC8vIGJldHdlZW4gdGhlIGl0ZW1zIChhbmQgcmVzdWx0IGluIHRleHQganVzdCBpbiB0aGUgPGxpPikgYW5kIGxvb3NlIGxpc3RzLFxuICAgIC8vIHdoaWNoIGhhdmUgYW4gZW1wdHkgbGluZSBiZXR3ZWVuIGxpc3QgaXRlbXMsIHJlc3VsdGluZyBpbiAob25lIG9yIG1vcmUpXG4gICAgLy8gcGFyYWdyYXBocyBpbnNpZGUgdGhlIDxsaT4uXG4gICAgLy9cbiAgICAvLyBUaGVyZSBhcmUgYWxsIHNvcnRzIHdlaXJkIGVkZ2UgY2FzZXMgYWJvdXQgdGhlIG9yaWdpbmFsIG1hcmtkb3duLnBsJ3NcbiAgICAvLyBoYW5kbGluZyBvZiBsaXN0czpcbiAgICAvL1xuICAgIC8vICogTmVzdGVkIGxpc3RzIGFyZSBzdXBwb3NlZCB0byBiZSBpbmRlbnRlZCBieSBmb3VyIGNoYXJzIHBlciBsZXZlbC4gQnV0XG4gICAgLy8gICBpZiB0aGV5IGFyZW4ndCwgeW91IGNhbiBnZXQgYSBuZXN0ZWQgbGlzdCBieSBpbmRlbnRpbmcgYnkgbGVzcyB0aGFuXG4gICAgLy8gICBmb3VyIHNvIGxvbmcgYXMgdGhlIGluZGVudCBkb2Vzbid0IG1hdGNoIGFuIGluZGVudCBvZiBhbiBleGlzdGluZyBsaXN0XG4gICAgLy8gICBpdGVtIGluIHRoZSAnbmVzdCBzdGFjaycuXG4gICAgLy9cbiAgICAvLyAqIFRoZSB0eXBlIG9mIHRoZSBsaXN0IChidWxsZXQgb3IgbnVtYmVyKSBpcyBjb250cm9sbGVkIGp1c3QgYnkgdGhlXG4gICAgLy8gICAgZmlyc3QgaXRlbSBhdCB0aGUgaW5kZW50LiBTdWJzZXF1ZW50IGNoYW5nZXMgYXJlIGlnbm9yZWQgdW5sZXNzIHRoZXlcbiAgICAvLyAgICBhcmUgZm9yIG5lc3RlZCBsaXN0c1xuICAgIC8vXG4gICAgbGlzdHM6IChmdW5jdGlvbiggKSB7XG4gICAgICAvLyBVc2UgYSBjbG9zdXJlIHRvIGhpZGUgYSBmZXcgdmFyaWFibGVzLlxuICAgICAgdmFyIGFueV9saXN0ID0gXCJbKistXXxcXFxcZCtcXFxcLlwiLFxuICAgICAgICAgIGJ1bGxldF9saXN0ID0gL1sqKy1dLyxcbiAgICAgICAgICBudW1iZXJfbGlzdCA9IC9cXGQrXFwuLyxcbiAgICAgICAgICAvLyBDYXB0dXJlIGxlYWRpbmcgaW5kZW50IGFzIGl0IG1hdHRlcnMgZm9yIGRldGVybWluaW5nIG5lc3RlZCBsaXN0cy5cbiAgICAgICAgICBpc19saXN0X3JlID0gbmV3IFJlZ0V4cCggXCJeKCB7MCwzfSkoXCIgKyBhbnlfbGlzdCArIFwiKVsgXFx0XStcIiApLFxuICAgICAgICAgIGluZGVudF9yZSA9IFwiKD86IHswLDN9XFxcXHR8IHs0fSlcIjtcblxuICAgICAgLy8gVE9ETzogQ2FjaGUgdGhpcyByZWdleHAgZm9yIGNlcnRhaW4gZGVwdGhzLlxuICAgICAgLy8gQ3JlYXRlIGEgcmVnZXhwIHN1aXRhYmxlIGZvciBtYXRjaGluZyBhbiBsaSBmb3IgYSBnaXZlbiBzdGFjayBkZXB0aFxuICAgICAgZnVuY3Rpb24gcmVnZXhfZm9yX2RlcHRoKCBkZXB0aCApIHtcblxuICAgICAgICByZXR1cm4gbmV3IFJlZ0V4cChcbiAgICAgICAgICAvLyBtWzFdID0gaW5kZW50LCBtWzJdID0gbGlzdF90eXBlXG4gICAgICAgICAgXCIoPzpeKFwiICsgaW5kZW50X3JlICsgXCJ7MCxcIiArIGRlcHRoICsgXCJ9IHswLDN9KShcIiArIGFueV9saXN0ICsgXCIpXFxcXHMrKXxcIiArXG4gICAgICAgICAgLy8gbVszXSA9IGNvbnRcbiAgICAgICAgICBcIiheXCIgKyBpbmRlbnRfcmUgKyBcInswLFwiICsgKGRlcHRoLTEpICsgXCJ9WyBdezAsNH0pXCJcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIGV4cGFuZF90YWIoIGlucHV0ICkge1xuICAgICAgICByZXR1cm4gaW5wdXQucmVwbGFjZSggLyB7MCwzfVxcdC9nLCBcIiAgICBcIiApO1xuICAgICAgfVxuXG4gICAgICAvLyBBZGQgaW5saW5lIGNvbnRlbnQgYGlubGluZWAgdG8gYGxpYC4gaW5saW5lIGNvbWVzIGZyb20gcHJvY2Vzc0lubGluZVxuICAgICAgLy8gc28gaXMgYW4gYXJyYXkgb2YgY29udGVudFxuICAgICAgZnVuY3Rpb24gYWRkKGxpLCBsb29zZSwgaW5saW5lLCBubCkge1xuICAgICAgICBpZiAoIGxvb3NlICkge1xuICAgICAgICAgIGxpLnB1c2goIFsgXCJwYXJhXCIgXS5jb25jYXQoaW5saW5lKSApO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICAvLyBIbW1tLCBzaG91bGQgdGhpcyBiZSBhbnkgYmxvY2sgbGV2ZWwgZWxlbWVudCBvciBqdXN0IHBhcmFzP1xuICAgICAgICB2YXIgYWRkX3RvID0gbGlbbGkubGVuZ3RoIC0xXSBpbnN0YW5jZW9mIEFycmF5ICYmIGxpW2xpLmxlbmd0aCAtIDFdWzBdID09IFwicGFyYVwiXG4gICAgICAgICAgICAgICAgICAgPyBsaVtsaS5sZW5ndGggLTFdXG4gICAgICAgICAgICAgICAgICAgOiBsaTtcblxuICAgICAgICAvLyBJZiB0aGVyZSBpcyBhbHJlYWR5IHNvbWUgY29udGVudCBpbiB0aGlzIGxpc3QsIGFkZCB0aGUgbmV3IGxpbmUgaW5cbiAgICAgICAgaWYgKCBubCAmJiBsaS5sZW5ndGggPiAxICkgaW5saW5lLnVuc2hpZnQobmwpO1xuXG4gICAgICAgIGZvciAoIHZhciBpID0gMDsgaSA8IGlubGluZS5sZW5ndGg7IGkrKyApIHtcbiAgICAgICAgICB2YXIgd2hhdCA9IGlubGluZVtpXSxcbiAgICAgICAgICAgICAgaXNfc3RyID0gdHlwZW9mIHdoYXQgPT0gXCJzdHJpbmdcIjtcbiAgICAgICAgICBpZiAoIGlzX3N0ciAmJiBhZGRfdG8ubGVuZ3RoID4gMSAmJiB0eXBlb2YgYWRkX3RvW2FkZF90by5sZW5ndGgtMV0gPT0gXCJzdHJpbmdcIiApIHtcbiAgICAgICAgICAgIGFkZF90b1sgYWRkX3RvLmxlbmd0aC0xIF0gKz0gd2hhdDtcbiAgICAgICAgICB9XG4gICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBhZGRfdG8ucHVzaCggd2hhdCApO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyBjb250YWluZWQgbWVhbnMgaGF2ZSBhbiBpbmRlbnQgZ3JlYXRlciB0aGFuIHRoZSBjdXJyZW50IG9uZS4gT25cbiAgICAgIC8vICpldmVyeSogbGluZSBpbiB0aGUgYmxvY2tcbiAgICAgIGZ1bmN0aW9uIGdldF9jb250YWluZWRfYmxvY2tzKCBkZXB0aCwgYmxvY2tzICkge1xuXG4gICAgICAgIHZhciByZSA9IG5ldyBSZWdFeHAoIFwiXihcIiArIGluZGVudF9yZSArIFwie1wiICsgZGVwdGggKyBcIn0uKj9cXFxcbj8pKiRcIiApLFxuICAgICAgICAgICAgcmVwbGFjZSA9IG5ldyBSZWdFeHAoXCJeXCIgKyBpbmRlbnRfcmUgKyBcIntcIiArIGRlcHRoICsgXCJ9XCIsIFwiZ21cIiksXG4gICAgICAgICAgICByZXQgPSBbXTtcblxuICAgICAgICB3aGlsZSAoIGJsb2Nrcy5sZW5ndGggPiAwICkge1xuICAgICAgICAgIGlmICggcmUuZXhlYyggYmxvY2tzWzBdICkgKSB7XG4gICAgICAgICAgICB2YXIgYiA9IGJsb2Nrcy5zaGlmdCgpLFxuICAgICAgICAgICAgICAgIC8vIE5vdyByZW1vdmUgdGhhdCBpbmRlbnRcbiAgICAgICAgICAgICAgICB4ID0gYi5yZXBsYWNlKCByZXBsYWNlLCBcIlwiKTtcblxuICAgICAgICAgICAgcmV0LnB1c2goIG1rX2Jsb2NrKCB4LCBiLnRyYWlsaW5nLCBiLmxpbmVOdW1iZXIgKSApO1xuICAgICAgICAgIH1cbiAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmV0O1xuICAgICAgfVxuXG4gICAgICAvLyBwYXNzZWQgdG8gc3RhY2suZm9yRWFjaCB0byB0dXJuIGxpc3QgaXRlbXMgdXAgdGhlIHN0YWNrIGludG8gcGFyYXNcbiAgICAgIGZ1bmN0aW9uIHBhcmFncmFwaGlmeShzLCBpLCBzdGFjaykge1xuICAgICAgICB2YXIgbGlzdCA9IHMubGlzdDtcbiAgICAgICAgdmFyIGxhc3RfbGkgPSBsaXN0W2xpc3QubGVuZ3RoLTFdO1xuXG4gICAgICAgIGlmICggbGFzdF9saVsxXSBpbnN0YW5jZW9mIEFycmF5ICYmIGxhc3RfbGlbMV1bMF0gPT0gXCJwYXJhXCIgKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmICggaSArIDEgPT0gc3RhY2subGVuZ3RoICkge1xuICAgICAgICAgIC8vIExhc3Qgc3RhY2sgZnJhbWVcbiAgICAgICAgICAvLyBLZWVwIHRoZSBzYW1lIGFycmF5LCBidXQgcmVwbGFjZSB0aGUgY29udGVudHNcbiAgICAgICAgICBsYXN0X2xpLnB1c2goIFtcInBhcmFcIl0uY29uY2F0KCBsYXN0X2xpLnNwbGljZSgxLCBsYXN0X2xpLmxlbmd0aCAtIDEpICkgKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICB2YXIgc3VibGlzdCA9IGxhc3RfbGkucG9wKCk7XG4gICAgICAgICAgbGFzdF9saS5wdXNoKCBbXCJwYXJhXCJdLmNvbmNhdCggbGFzdF9saS5zcGxpY2UoMSwgbGFzdF9saS5sZW5ndGggLSAxKSApLCBzdWJsaXN0ICk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8gVGhlIG1hdGNoZXIgZnVuY3Rpb25cbiAgICAgIHJldHVybiBmdW5jdGlvbiggYmxvY2ssIG5leHQgKSB7XG4gICAgICAgIHZhciBtID0gYmxvY2subWF0Y2goIGlzX2xpc3RfcmUgKTtcbiAgICAgICAgaWYgKCAhbSApIHJldHVybiB1bmRlZmluZWQ7XG5cbiAgICAgICAgZnVuY3Rpb24gbWFrZV9saXN0KCBtICkge1xuICAgICAgICAgIHZhciBsaXN0ID0gYnVsbGV0X2xpc3QuZXhlYyggbVsyXSApXG4gICAgICAgICAgICAgICAgICAgPyBbXCJidWxsZXRsaXN0XCJdXG4gICAgICAgICAgICAgICAgICAgOiBbXCJudW1iZXJsaXN0XCJdO1xuXG4gICAgICAgICAgc3RhY2sucHVzaCggeyBsaXN0OiBsaXN0LCBpbmRlbnQ6IG1bMV0gfSApO1xuICAgICAgICAgIHJldHVybiBsaXN0O1xuICAgICAgICB9XG5cblxuICAgICAgICB2YXIgc3RhY2sgPSBbXSwgLy8gU3RhY2sgb2YgbGlzdHMgZm9yIG5lc3RpbmcuXG4gICAgICAgICAgICBsaXN0ID0gbWFrZV9saXN0KCBtICksXG4gICAgICAgICAgICBsYXN0X2xpLFxuICAgICAgICAgICAgbG9vc2UgPSBmYWxzZSxcbiAgICAgICAgICAgIHJldCA9IFsgc3RhY2tbMF0ubGlzdCBdLFxuICAgICAgICAgICAgaTtcblxuICAgICAgICAvLyBMb29wIHRvIHNlYXJjaCBvdmVyIGJsb2NrIGxvb2tpbmcgZm9yIGlubmVyIGJsb2NrIGVsZW1lbnRzIGFuZCBsb29zZSBsaXN0c1xuICAgICAgICBsb29zZV9zZWFyY2g6XG4gICAgICAgIHdoaWxlICggdHJ1ZSApIHtcbiAgICAgICAgICAvLyBTcGxpdCBpbnRvIGxpbmVzIHByZXNlcnZpbmcgbmV3IGxpbmVzIGF0IGVuZCBvZiBsaW5lXG4gICAgICAgICAgdmFyIGxpbmVzID0gYmxvY2suc3BsaXQoIC8oPz1cXG4pLyApO1xuXG4gICAgICAgICAgLy8gV2UgaGF2ZSB0byBncmFiIGFsbCBsaW5lcyBmb3IgYSBsaSBhbmQgY2FsbCBwcm9jZXNzSW5saW5lIG9uIHRoZW1cbiAgICAgICAgICAvLyBvbmNlIGFzIHRoZXJlIGFyZSBzb21lIGlubGluZSB0aGluZ3MgdGhhdCBjYW4gc3BhbiBsaW5lcy5cbiAgICAgICAgICB2YXIgbGlfYWNjdW11bGF0ZSA9IFwiXCI7XG5cbiAgICAgICAgICAvLyBMb29wIG92ZXIgdGhlIGxpbmVzIGluIHRoaXMgYmxvY2sgbG9va2luZyBmb3IgdGlnaHQgbGlzdHMuXG4gICAgICAgICAgdGlnaHRfc2VhcmNoOlxuICAgICAgICAgIGZvciAoIHZhciBsaW5lX25vID0gMDsgbGluZV9ubyA8IGxpbmVzLmxlbmd0aDsgbGluZV9ubysrICkge1xuICAgICAgICAgICAgdmFyIG5sID0gXCJcIixcbiAgICAgICAgICAgICAgICBsID0gbGluZXNbbGluZV9ub10ucmVwbGFjZSgvXlxcbi8sIGZ1bmN0aW9uKG4pIHsgbmwgPSBuOyByZXR1cm4gXCJcIjsgfSk7XG5cbiAgICAgICAgICAgIC8vIFRPRE86IHJlYWxseSBzaG91bGQgY2FjaGUgdGhpc1xuICAgICAgICAgICAgdmFyIGxpbmVfcmUgPSByZWdleF9mb3JfZGVwdGgoIHN0YWNrLmxlbmd0aCApO1xuXG4gICAgICAgICAgICBtID0gbC5tYXRjaCggbGluZV9yZSApO1xuICAgICAgICAgICAgLy9wcmludCggXCJsaW5lOlwiLCB1bmV2YWwobCksIFwiXFxubGluZSBtYXRjaDpcIiwgdW5ldmFsKG0pICk7XG5cbiAgICAgICAgICAgIC8vIFdlIGhhdmUgYSBsaXN0IGl0ZW1cbiAgICAgICAgICAgIGlmICggbVsxXSAhPT0gdW5kZWZpbmVkICkge1xuICAgICAgICAgICAgICAvLyBQcm9jZXNzIHRoZSBwcmV2aW91cyBsaXN0IGl0ZW0sIGlmIGFueVxuICAgICAgICAgICAgICBpZiAoIGxpX2FjY3VtdWxhdGUubGVuZ3RoICkge1xuICAgICAgICAgICAgICAgIGFkZCggbGFzdF9saSwgbG9vc2UsIHRoaXMucHJvY2Vzc0lubGluZSggbGlfYWNjdW11bGF0ZSApLCBubCApO1xuICAgICAgICAgICAgICAgIC8vIExvb3NlIG1vZGUgd2lsbCBoYXZlIGJlZW4gZGVhbHQgd2l0aC4gUmVzZXQgaXRcbiAgICAgICAgICAgICAgICBsb29zZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIGxpX2FjY3VtdWxhdGUgPSBcIlwiO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgbVsxXSA9IGV4cGFuZF90YWIoIG1bMV0gKTtcbiAgICAgICAgICAgICAgdmFyIHdhbnRlZF9kZXB0aCA9IE1hdGguZmxvb3IobVsxXS5sZW5ndGgvNCkrMTtcbiAgICAgICAgICAgICAgLy9wcmludCggXCJ3YW50OlwiLCB3YW50ZWRfZGVwdGgsIFwic3RhY2s6XCIsIHN0YWNrLmxlbmd0aCk7XG4gICAgICAgICAgICAgIGlmICggd2FudGVkX2RlcHRoID4gc3RhY2subGVuZ3RoICkge1xuICAgICAgICAgICAgICAgIC8vIERlZXAgZW5vdWdoIGZvciBhIG5lc3RlZCBsaXN0IG91dHJpZ2h0XG4gICAgICAgICAgICAgICAgLy9wcmludCAoIFwibmV3IG5lc3RlZCBsaXN0XCIgKTtcbiAgICAgICAgICAgICAgICBsaXN0ID0gbWFrZV9saXN0KCBtICk7XG4gICAgICAgICAgICAgICAgbGFzdF9saS5wdXNoKCBsaXN0ICk7XG4gICAgICAgICAgICAgICAgbGFzdF9saSA9IGxpc3RbMV0gPSBbIFwibGlzdGl0ZW1cIiBdO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIFdlIGFyZW4ndCBkZWVwIGVub3VnaCB0byBiZSBzdHJpY3RseSBhIG5ldyBsZXZlbC4gVGhpcyBpc1xuICAgICAgICAgICAgICAgIC8vIHdoZXJlIE1kLnBsIGdvZXMgbnV0cy4gSWYgdGhlIGluZGVudCBtYXRjaGVzIGEgbGV2ZWwgaW4gdGhlXG4gICAgICAgICAgICAgICAgLy8gc3RhY2ssIHB1dCBpdCB0aGVyZSwgZWxzZSBwdXQgaXQgb25lIGRlZXBlciB0aGVuIHRoZVxuICAgICAgICAgICAgICAgIC8vIHdhbnRlZF9kZXB0aCBkZXNlcnZlcy5cbiAgICAgICAgICAgICAgICB2YXIgZm91bmQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBmb3IgKCBpID0gMDsgaSA8IHN0YWNrLmxlbmd0aDsgaSsrICkge1xuICAgICAgICAgICAgICAgICAgaWYgKCBzdGFja1sgaSBdLmluZGVudCAhPSBtWzFdICkgY29udGludWU7XG4gICAgICAgICAgICAgICAgICBsaXN0ID0gc3RhY2tbIGkgXS5saXN0O1xuICAgICAgICAgICAgICAgICAgc3RhY2suc3BsaWNlKCBpKzEsIHN0YWNrLmxlbmd0aCAtIChpKzEpICk7XG4gICAgICAgICAgICAgICAgICBmb3VuZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBpZiAoIWZvdW5kKSB7XG4gICAgICAgICAgICAgICAgICAvL3ByaW50KFwibm90IGZvdW5kLiBsOlwiLCB1bmV2YWwobCkpO1xuICAgICAgICAgICAgICAgICAgd2FudGVkX2RlcHRoKys7XG4gICAgICAgICAgICAgICAgICBpZiAoIHdhbnRlZF9kZXB0aCA8PSBzdGFjay5sZW5ndGggKSB7XG4gICAgICAgICAgICAgICAgICAgIHN0YWNrLnNwbGljZSh3YW50ZWRfZGVwdGgsIHN0YWNrLmxlbmd0aCAtIHdhbnRlZF9kZXB0aCk7XG4gICAgICAgICAgICAgICAgICAgIC8vcHJpbnQoXCJEZXNpcmVkIGRlcHRoIG5vd1wiLCB3YW50ZWRfZGVwdGgsIFwic3RhY2s6XCIsIHN0YWNrLmxlbmd0aCk7XG4gICAgICAgICAgICAgICAgICAgIGxpc3QgPSBzdGFja1t3YW50ZWRfZGVwdGgtMV0ubGlzdDtcbiAgICAgICAgICAgICAgICAgICAgLy9wcmludChcImxpc3Q6XCIsIHVuZXZhbChsaXN0KSApO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIC8vcHJpbnQgKFwibWFkZSBuZXcgc3RhY2sgZm9yIG1lc3N5IGluZGVudFwiKTtcbiAgICAgICAgICAgICAgICAgICAgbGlzdCA9IG1ha2VfbGlzdChtKTtcbiAgICAgICAgICAgICAgICAgICAgbGFzdF9saS5wdXNoKGxpc3QpO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIC8vcHJpbnQoIHVuZXZhbChsaXN0KSwgXCJsYXN0XCIsIGxpc3QgPT09IHN0YWNrW3N0YWNrLmxlbmd0aC0xXS5saXN0ICk7XG4gICAgICAgICAgICAgICAgbGFzdF9saSA9IFsgXCJsaXN0aXRlbVwiIF07XG4gICAgICAgICAgICAgICAgbGlzdC5wdXNoKGxhc3RfbGkpO1xuICAgICAgICAgICAgICB9IC8vIGVuZCBkZXB0aCBvZiBzaGVuZWdhaW5zXG4gICAgICAgICAgICAgIG5sID0gXCJcIjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gQWRkIGNvbnRlbnRcbiAgICAgICAgICAgIGlmICggbC5sZW5ndGggPiBtWzBdLmxlbmd0aCApIHtcbiAgICAgICAgICAgICAgbGlfYWNjdW11bGF0ZSArPSBubCArIGwuc3Vic3RyKCBtWzBdLmxlbmd0aCApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gLy8gdGlnaHRfc2VhcmNoXG5cbiAgICAgICAgICBpZiAoIGxpX2FjY3VtdWxhdGUubGVuZ3RoICkge1xuICAgICAgICAgICAgYWRkKCBsYXN0X2xpLCBsb29zZSwgdGhpcy5wcm9jZXNzSW5saW5lKCBsaV9hY2N1bXVsYXRlICksIG5sICk7XG4gICAgICAgICAgICAvLyBMb29zZSBtb2RlIHdpbGwgaGF2ZSBiZWVuIGRlYWx0IHdpdGguIFJlc2V0IGl0XG4gICAgICAgICAgICBsb29zZSA9IGZhbHNlO1xuICAgICAgICAgICAgbGlfYWNjdW11bGF0ZSA9IFwiXCI7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgLy8gTG9vayBhdCB0aGUgbmV4dCBibG9jayAtIHdlIG1pZ2h0IGhhdmUgYSBsb29zZSBsaXN0LiBPciBhbiBleHRyYVxuICAgICAgICAgIC8vIHBhcmFncmFwaCBmb3IgdGhlIGN1cnJlbnQgbGlcbiAgICAgICAgICB2YXIgY29udGFpbmVkID0gZ2V0X2NvbnRhaW5lZF9ibG9ja3MoIHN0YWNrLmxlbmd0aCwgbmV4dCApO1xuXG4gICAgICAgICAgLy8gRGVhbCB3aXRoIGNvZGUgYmxvY2tzIG9yIHByb3Blcmx5IG5lc3RlZCBsaXN0c1xuICAgICAgICAgIGlmICggY29udGFpbmVkLmxlbmd0aCA+IDAgKSB7XG4gICAgICAgICAgICAvLyBNYWtlIHN1cmUgYWxsIGxpc3RpdGVtcyB1cCB0aGUgc3RhY2sgYXJlIHBhcmFncmFwaHNcbiAgICAgICAgICAgIGZvckVhY2goIHN0YWNrLCBwYXJhZ3JhcGhpZnksIHRoaXMpO1xuXG4gICAgICAgICAgICBsYXN0X2xpLnB1c2guYXBwbHkoIGxhc3RfbGksIHRoaXMudG9UcmVlKCBjb250YWluZWQsIFtdICkgKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICB2YXIgbmV4dF9ibG9jayA9IG5leHRbMF0gJiYgbmV4dFswXS52YWx1ZU9mKCkgfHwgXCJcIjtcblxuICAgICAgICAgIGlmICggbmV4dF9ibG9jay5tYXRjaChpc19saXN0X3JlKSB8fCBuZXh0X2Jsb2NrLm1hdGNoKCAvXiAvICkgKSB7XG4gICAgICAgICAgICBibG9jayA9IG5leHQuc2hpZnQoKTtcblxuICAgICAgICAgICAgLy8gQ2hlY2sgZm9yIGFuIEhSIGZvbGxvd2luZyBhIGxpc3Q6IGZlYXR1cmVzL2xpc3RzL2hyX2FidXR0aW5nXG4gICAgICAgICAgICB2YXIgaHIgPSB0aGlzLmRpYWxlY3QuYmxvY2suaG9yaXpSdWxlKCBibG9jaywgbmV4dCApO1xuXG4gICAgICAgICAgICBpZiAoIGhyICkge1xuICAgICAgICAgICAgICByZXQucHVzaC5hcHBseShyZXQsIGhyKTtcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIE1ha2Ugc3VyZSBhbGwgbGlzdGl0ZW1zIHVwIHRoZSBzdGFjayBhcmUgcGFyYWdyYXBoc1xuICAgICAgICAgICAgZm9yRWFjaCggc3RhY2ssIHBhcmFncmFwaGlmeSwgdGhpcyk7XG5cbiAgICAgICAgICAgIGxvb3NlID0gdHJ1ZTtcbiAgICAgICAgICAgIGNvbnRpbnVlIGxvb3NlX3NlYXJjaDtcbiAgICAgICAgICB9XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH0gLy8gbG9vc2Vfc2VhcmNoXG5cbiAgICAgICAgcmV0dXJuIHJldDtcbiAgICAgIH07XG4gICAgfSkoKSxcblxuICAgIGJsb2NrcXVvdGU6IGZ1bmN0aW9uIGJsb2NrcXVvdGUoIGJsb2NrLCBuZXh0ICkge1xuICAgICAgaWYgKCAhYmxvY2subWF0Y2goIC9ePi9tICkgKVxuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuXG4gICAgICB2YXIganNvbm1sID0gW107XG5cbiAgICAgIC8vIHNlcGFyYXRlIG91dCB0aGUgbGVhZGluZyBhYnV0dGluZyBibG9jaywgaWYgYW55LiBJLmUuIGluIHRoaXMgY2FzZTpcbiAgICAgIC8vXG4gICAgICAvLyAgYVxuICAgICAgLy8gID4gYlxuICAgICAgLy9cbiAgICAgIGlmICggYmxvY2tbIDAgXSAhPSBcIj5cIiApIHtcbiAgICAgICAgdmFyIGxpbmVzID0gYmxvY2suc3BsaXQoIC9cXG4vICksXG4gICAgICAgICAgICBwcmV2ID0gW10sXG4gICAgICAgICAgICBsaW5lX25vID0gYmxvY2subGluZU51bWJlcjtcblxuICAgICAgICAvLyBrZWVwIHNoaWZ0aW5nIGxpbmVzIHVudGlsIHlvdSBmaW5kIGEgY3JvdGNoZXRcbiAgICAgICAgd2hpbGUgKCBsaW5lcy5sZW5ndGggJiYgbGluZXNbIDAgXVsgMCBdICE9IFwiPlwiICkge1xuICAgICAgICAgICAgcHJldi5wdXNoKCBsaW5lcy5zaGlmdCgpICk7XG4gICAgICAgICAgICBsaW5lX25vKys7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgYWJ1dHRpbmcgPSBta19ibG9jayggcHJldi5qb2luKCBcIlxcblwiICksIFwiXFxuXCIsIGJsb2NrLmxpbmVOdW1iZXIgKTtcbiAgICAgICAganNvbm1sLnB1c2guYXBwbHkoIGpzb25tbCwgdGhpcy5wcm9jZXNzQmxvY2soIGFidXR0aW5nLCBbXSApICk7XG4gICAgICAgIC8vIHJlYXNzZW1ibGUgbmV3IGJsb2NrIG9mIGp1c3QgYmxvY2sgcXVvdGVzIVxuICAgICAgICBibG9jayA9IG1rX2Jsb2NrKCBsaW5lcy5qb2luKCBcIlxcblwiICksIGJsb2NrLnRyYWlsaW5nLCBsaW5lX25vICk7XG4gICAgICB9XG5cblxuICAgICAgLy8gaWYgdGhlIG5leHQgYmxvY2sgaXMgYWxzbyBhIGJsb2NrcXVvdGUgbWVyZ2UgaXQgaW5cbiAgICAgIHdoaWxlICggbmV4dC5sZW5ndGggJiYgbmV4dFsgMCBdWyAwIF0gPT0gXCI+XCIgKSB7XG4gICAgICAgIHZhciBiID0gbmV4dC5zaGlmdCgpO1xuICAgICAgICBibG9jayA9IG1rX2Jsb2NrKCBibG9jayArIGJsb2NrLnRyYWlsaW5nICsgYiwgYi50cmFpbGluZywgYmxvY2subGluZU51bWJlciApO1xuICAgICAgfVxuXG4gICAgICAvLyBTdHJpcCBvZmYgdGhlIGxlYWRpbmcgXCI+IFwiIGFuZCByZS1wcm9jZXNzIGFzIGEgYmxvY2suXG4gICAgICB2YXIgaW5wdXQgPSBibG9jay5yZXBsYWNlKCAvXj4gPy9nbSwgXCJcIiApLFxuICAgICAgICAgIG9sZF90cmVlID0gdGhpcy50cmVlLFxuICAgICAgICAgIHByb2Nlc3NlZEJsb2NrID0gdGhpcy50b1RyZWUoIGlucHV0LCBbIFwiYmxvY2txdW90ZVwiIF0gKSxcbiAgICAgICAgICBhdHRyID0gZXh0cmFjdF9hdHRyKCBwcm9jZXNzZWRCbG9jayApO1xuXG4gICAgICAvLyBJZiBhbnkgbGluayByZWZlcmVuY2VzIHdlcmUgZm91bmQgZ2V0IHJpZCBvZiB0aGVtXG4gICAgICBpZiAoIGF0dHIgJiYgYXR0ci5yZWZlcmVuY2VzICkge1xuICAgICAgICBkZWxldGUgYXR0ci5yZWZlcmVuY2VzO1xuICAgICAgICAvLyBBbmQgdGhlbiByZW1vdmUgdGhlIGF0dHJpYnV0ZSBvYmplY3QgaWYgaXQncyBlbXB0eVxuICAgICAgICBpZiAoIGlzRW1wdHkoIGF0dHIgKSApIHtcbiAgICAgICAgICBwcm9jZXNzZWRCbG9jay5zcGxpY2UoIDEsIDEgKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBqc29ubWwucHVzaCggcHJvY2Vzc2VkQmxvY2sgKTtcbiAgICAgIHJldHVybiBqc29ubWw7XG4gICAgfSxcblxuICAgIHJlZmVyZW5jZURlZm46IGZ1bmN0aW9uIHJlZmVyZW5jZURlZm4oIGJsb2NrLCBuZXh0KSB7XG4gICAgICB2YXIgcmUgPSAvXlxccypcXFsoLio/KVxcXTpcXHMqKFxcUyspKD86XFxzKyg/OihbJ1wiXSkoLio/KVxcM3xcXCgoLio/KVxcKSkpP1xcbj8vO1xuICAgICAgLy8gaW50ZXJlc3RpbmcgbWF0Y2hlcyBhcmUgWyAsIHJlZl9pZCwgdXJsLCAsIHRpdGxlLCB0aXRsZSBdXG5cbiAgICAgIGlmICggIWJsb2NrLm1hdGNoKHJlKSApXG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG5cbiAgICAgIC8vIG1ha2UgYW4gYXR0cmlidXRlIG5vZGUgaWYgaXQgZG9lc24ndCBleGlzdFxuICAgICAgaWYgKCAhZXh0cmFjdF9hdHRyKCB0aGlzLnRyZWUgKSApIHtcbiAgICAgICAgdGhpcy50cmVlLnNwbGljZSggMSwgMCwge30gKTtcbiAgICAgIH1cblxuICAgICAgdmFyIGF0dHJzID0gZXh0cmFjdF9hdHRyKCB0aGlzLnRyZWUgKTtcblxuICAgICAgLy8gbWFrZSBhIHJlZmVyZW5jZXMgaGFzaCBpZiBpdCBkb2Vzbid0IGV4aXN0XG4gICAgICBpZiAoIGF0dHJzLnJlZmVyZW5jZXMgPT09IHVuZGVmaW5lZCApIHtcbiAgICAgICAgYXR0cnMucmVmZXJlbmNlcyA9IHt9O1xuICAgICAgfVxuXG4gICAgICB2YXIgYiA9IHRoaXMubG9vcF9yZV9vdmVyX2Jsb2NrKHJlLCBibG9jaywgZnVuY3Rpb24oIG0gKSB7XG5cbiAgICAgICAgaWYgKCBtWzJdICYmIG1bMl1bMF0gPT0gXCI8XCIgJiYgbVsyXVttWzJdLmxlbmd0aC0xXSA9PSBcIj5cIiApXG4gICAgICAgICAgbVsyXSA9IG1bMl0uc3Vic3RyaW5nKCAxLCBtWzJdLmxlbmd0aCAtIDEgKTtcblxuICAgICAgICB2YXIgcmVmID0gYXR0cnMucmVmZXJlbmNlc1sgbVsxXS50b0xvd2VyQ2FzZSgpIF0gPSB7XG4gICAgICAgICAgaHJlZjogbVsyXVxuICAgICAgICB9O1xuXG4gICAgICAgIGlmICggbVs0XSAhPT0gdW5kZWZpbmVkIClcbiAgICAgICAgICByZWYudGl0bGUgPSBtWzRdO1xuICAgICAgICBlbHNlIGlmICggbVs1XSAhPT0gdW5kZWZpbmVkIClcbiAgICAgICAgICByZWYudGl0bGUgPSBtWzVdO1xuXG4gICAgICB9ICk7XG5cbiAgICAgIGlmICggYi5sZW5ndGggKVxuICAgICAgICBuZXh0LnVuc2hpZnQoIG1rX2Jsb2NrKCBiLCBibG9jay50cmFpbGluZyApICk7XG5cbiAgICAgIHJldHVybiBbXTtcbiAgICB9LFxuXG4gICAgcGFyYTogZnVuY3Rpb24gcGFyYSggYmxvY2ssIG5leHQgKSB7XG4gICAgICAvLyBldmVyeXRoaW5nJ3MgYSBwYXJhIVxuICAgICAgcmV0dXJuIFsgW1wicGFyYVwiXS5jb25jYXQoIHRoaXMucHJvY2Vzc0lubGluZSggYmxvY2sgKSApIF07XG4gICAgfVxuICB9XG59O1xuXG5NYXJrZG93bi5kaWFsZWN0cy5HcnViZXIuaW5saW5lID0ge1xuXG4gICAgX19vbmVFbGVtZW50X186IGZ1bmN0aW9uIG9uZUVsZW1lbnQoIHRleHQsIHBhdHRlcm5zX29yX3JlLCBwcmV2aW91c19ub2RlcyApIHtcbiAgICAgIHZhciBtLFxuICAgICAgICAgIHJlcyxcbiAgICAgICAgICBsYXN0SW5kZXggPSAwO1xuXG4gICAgICBwYXR0ZXJuc19vcl9yZSA9IHBhdHRlcm5zX29yX3JlIHx8IHRoaXMuZGlhbGVjdC5pbmxpbmUuX19wYXR0ZXJuc19fO1xuICAgICAgdmFyIHJlID0gbmV3IFJlZ0V4cCggXCIoW1xcXFxzXFxcXFNdKj8pKFwiICsgKHBhdHRlcm5zX29yX3JlLnNvdXJjZSB8fCBwYXR0ZXJuc19vcl9yZSkgKyBcIilcIiApO1xuXG4gICAgICBtID0gcmUuZXhlYyggdGV4dCApO1xuICAgICAgaWYgKCFtKSB7XG4gICAgICAgIC8vIEp1c3QgYm9yaW5nIHRleHRcbiAgICAgICAgcmV0dXJuIFsgdGV4dC5sZW5ndGgsIHRleHQgXTtcbiAgICAgIH1cbiAgICAgIGVsc2UgaWYgKCBtWzFdICkge1xuICAgICAgICAvLyBTb21lIHVuLWludGVyZXN0aW5nIHRleHQgbWF0Y2hlZC4gUmV0dXJuIHRoYXQgZmlyc3RcbiAgICAgICAgcmV0dXJuIFsgbVsxXS5sZW5ndGgsIG1bMV0gXTtcbiAgICAgIH1cblxuICAgICAgdmFyIHJlcztcbiAgICAgIGlmICggbVsyXSBpbiB0aGlzLmRpYWxlY3QuaW5saW5lICkge1xuICAgICAgICByZXMgPSB0aGlzLmRpYWxlY3QuaW5saW5lWyBtWzJdIF0uY2FsbChcbiAgICAgICAgICAgICAgICAgIHRoaXMsXG4gICAgICAgICAgICAgICAgICB0ZXh0LnN1YnN0ciggbS5pbmRleCApLCBtLCBwcmV2aW91c19ub2RlcyB8fCBbXSApO1xuICAgICAgfVxuICAgICAgLy8gRGVmYXVsdCBmb3Igbm93IHRvIG1ha2UgZGV2IGVhc2llci4ganVzdCBzbHVycCBzcGVjaWFsIGFuZCBvdXRwdXQgaXQuXG4gICAgICByZXMgPSByZXMgfHwgWyBtWzJdLmxlbmd0aCwgbVsyXSBdO1xuICAgICAgcmV0dXJuIHJlcztcbiAgICB9LFxuXG4gICAgX19jYWxsX186IGZ1bmN0aW9uIGlubGluZSggdGV4dCwgcGF0dGVybnMgKSB7XG5cbiAgICAgIHZhciBvdXQgPSBbXSxcbiAgICAgICAgICByZXM7XG5cbiAgICAgIGZ1bmN0aW9uIGFkZCh4KSB7XG4gICAgICAgIC8vRDpzZWxmLmRlYnVnKFwiICBhZGRpbmcgb3V0cHV0XCIsIHVuZXZhbCh4KSk7XG4gICAgICAgIGlmICggdHlwZW9mIHggPT0gXCJzdHJpbmdcIiAmJiB0eXBlb2Ygb3V0W291dC5sZW5ndGgtMV0gPT0gXCJzdHJpbmdcIiApXG4gICAgICAgICAgb3V0WyBvdXQubGVuZ3RoLTEgXSArPSB4O1xuICAgICAgICBlbHNlXG4gICAgICAgICAgb3V0LnB1c2goeCk7XG4gICAgICB9XG5cbiAgICAgIHdoaWxlICggdGV4dC5sZW5ndGggPiAwICkge1xuICAgICAgICByZXMgPSB0aGlzLmRpYWxlY3QuaW5saW5lLl9fb25lRWxlbWVudF9fLmNhbGwodGhpcywgdGV4dCwgcGF0dGVybnMsIG91dCApO1xuICAgICAgICB0ZXh0ID0gdGV4dC5zdWJzdHIoIHJlcy5zaGlmdCgpICk7XG4gICAgICAgIGZvckVhY2gocmVzLCBhZGQgKVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gb3V0O1xuICAgIH0sXG5cbiAgICAvLyBUaGVzZSBjaGFyYWN0ZXJzIGFyZSBpbnRlcnN0aW5nIGVsc2V3aGVyZSwgc28gaGF2ZSBydWxlcyBmb3IgdGhlbSBzbyB0aGF0XG4gICAgLy8gY2h1bmtzIG9mIHBsYWluIHRleHQgYmxvY2tzIGRvbid0IGluY2x1ZGUgdGhlbVxuICAgIFwiXVwiOiBmdW5jdGlvbiAoKSB7fSxcbiAgICBcIn1cIjogZnVuY3Rpb24gKCkge30sXG5cbiAgICBfX2VzY2FwZV9fIDogL15cXFxcW1xcXFxgXFwqX3t9XFxbXFxdKCkjXFwrLiFcXC1dLyxcblxuICAgIFwiXFxcXFwiOiBmdW5jdGlvbiBlc2NhcGVkKCB0ZXh0ICkge1xuICAgICAgLy8gWyBsZW5ndGggb2YgaW5wdXQgcHJvY2Vzc2VkLCBub2RlL2NoaWxkcmVuIHRvIGFkZC4uLiBdXG4gICAgICAvLyBPbmx5IGVzYWNhcGU6IFxcIGAgKiBfIHsgfSBbIF0gKCApICMgKiArIC0gLiAhXG4gICAgICBpZiAoIHRoaXMuZGlhbGVjdC5pbmxpbmUuX19lc2NhcGVfXy5leGVjKCB0ZXh0ICkgKVxuICAgICAgICByZXR1cm4gWyAyLCB0ZXh0LmNoYXJBdCggMSApIF07XG4gICAgICBlbHNlXG4gICAgICAgIC8vIE5vdCBhbiBlc2FjcGVcbiAgICAgICAgcmV0dXJuIFsgMSwgXCJcXFxcXCIgXTtcbiAgICB9LFxuXG4gICAgXCIhW1wiOiBmdW5jdGlvbiBpbWFnZSggdGV4dCApIHtcblxuICAgICAgLy8gVW5saWtlIGltYWdlcywgYWx0IHRleHQgaXMgcGxhaW4gdGV4dCBvbmx5LiBubyBvdGhlciBlbGVtZW50cyBhcmVcbiAgICAgIC8vIGFsbG93ZWQgaW4gdGhlcmVcblxuICAgICAgLy8gIVtBbHQgdGV4dF0oL3BhdGgvdG8vaW1nLmpwZyBcIk9wdGlvbmFsIHRpdGxlXCIpXG4gICAgICAvLyAgICAgIDEgICAgICAgICAgMiAgICAgICAgICAgIDMgICAgICAgNCAgICAgICAgIDwtLS0gY2FwdHVyZXNcbiAgICAgIHZhciBtID0gdGV4dC5tYXRjaCggL14hXFxbKC4qPylcXF1bIFxcdF0qXFwoWyBcXHRdKihbXlwiKV0qPykoPzpbIFxcdF0rKFtcIiddKSguKj8pXFwzKT9bIFxcdF0qXFwpLyApO1xuXG4gICAgICBpZiAoIG0gKSB7XG4gICAgICAgIGlmICggbVsyXSAmJiBtWzJdWzBdID09IFwiPFwiICYmIG1bMl1bbVsyXS5sZW5ndGgtMV0gPT0gXCI+XCIgKVxuICAgICAgICAgIG1bMl0gPSBtWzJdLnN1YnN0cmluZyggMSwgbVsyXS5sZW5ndGggLSAxICk7XG5cbiAgICAgICAgbVsyXSA9IHRoaXMuZGlhbGVjdC5pbmxpbmUuX19jYWxsX18uY2FsbCggdGhpcywgbVsyXSwgL1xcXFwvIClbMF07XG5cbiAgICAgICAgdmFyIGF0dHJzID0geyBhbHQ6IG1bMV0sIGhyZWY6IG1bMl0gfHwgXCJcIiB9O1xuICAgICAgICBpZiAoIG1bNF0gIT09IHVuZGVmaW5lZClcbiAgICAgICAgICBhdHRycy50aXRsZSA9IG1bNF07XG5cbiAgICAgICAgcmV0dXJuIFsgbVswXS5sZW5ndGgsIFsgXCJpbWdcIiwgYXR0cnMgXSBdO1xuICAgICAgfVxuXG4gICAgICAvLyAhW0FsdCB0ZXh0XVtpZF1cbiAgICAgIG0gPSB0ZXh0Lm1hdGNoKCAvXiFcXFsoLio/KVxcXVsgXFx0XSpcXFsoLio/KVxcXS8gKTtcblxuICAgICAgaWYgKCBtICkge1xuICAgICAgICAvLyBXZSBjYW4ndCBjaGVjayBpZiB0aGUgcmVmZXJlbmNlIGlzIGtub3duIGhlcmUgYXMgaXQgbGlrZWx5IHdvbnQgYmVcbiAgICAgICAgLy8gZm91bmQgdGlsbCBhZnRlci4gQ2hlY2sgaXQgaW4gbWQgdHJlZS0+aG10bCB0cmVlIGNvbnZlcnNpb25cbiAgICAgICAgcmV0dXJuIFsgbVswXS5sZW5ndGgsIFsgXCJpbWdfcmVmXCIsIHsgYWx0OiBtWzFdLCByZWY6IG1bMl0udG9Mb3dlckNhc2UoKSwgb3JpZ2luYWw6IG1bMF0gfSBdIF07XG4gICAgICB9XG5cbiAgICAgIC8vIEp1c3QgY29uc3VtZSB0aGUgJyFbJ1xuICAgICAgcmV0dXJuIFsgMiwgXCIhW1wiIF07XG4gICAgfSxcblxuICAgIFwiW1wiOiBmdW5jdGlvbiBsaW5rKCB0ZXh0ICkge1xuXG4gICAgICB2YXIgb3JpZyA9IFN0cmluZyh0ZXh0KTtcbiAgICAgIC8vIElubGluZSBjb250ZW50IGlzIHBvc3NpYmxlIGluc2lkZSBgbGluayB0ZXh0YFxuICAgICAgdmFyIHJlcyA9IE1hcmtkb3duLkRpYWxlY3RIZWxwZXJzLmlubGluZV91bnRpbF9jaGFyLmNhbGwoIHRoaXMsIHRleHQuc3Vic3RyKDEpLCBcIl1cIiApO1xuXG4gICAgICAvLyBObyBjbG9zaW5nICddJyBmb3VuZC4gSnVzdCBjb25zdW1lIHRoZSBbXG4gICAgICBpZiAoICFyZXMgKSByZXR1cm4gWyAxLCBcIltcIiBdO1xuXG4gICAgICB2YXIgY29uc3VtZWQgPSAxICsgcmVzWyAwIF0sXG4gICAgICAgICAgY2hpbGRyZW4gPSByZXNbIDEgXSxcbiAgICAgICAgICBsaW5rLFxuICAgICAgICAgIGF0dHJzO1xuXG4gICAgICAvLyBBdCB0aGlzIHBvaW50IHRoZSBmaXJzdCBbLi4uXSBoYXMgYmVlbiBwYXJzZWQuIFNlZSB3aGF0IGZvbGxvd3MgdG8gZmluZFxuICAgICAgLy8gb3V0IHdoaWNoIGtpbmQgb2YgbGluayB3ZSBhcmUgKHJlZmVyZW5jZSBvciBkaXJlY3QgdXJsKVxuICAgICAgdGV4dCA9IHRleHQuc3Vic3RyKCBjb25zdW1lZCApO1xuXG4gICAgICAvLyBbbGluayB0ZXh0XSgvcGF0aC90by9pbWcuanBnIFwiT3B0aW9uYWwgdGl0bGVcIilcbiAgICAgIC8vICAgICAgICAgICAgICAgICAxICAgICAgICAgICAgMiAgICAgICAzICAgICAgICAgPC0tLSBjYXB0dXJlc1xuICAgICAgLy8gVGhpcyB3aWxsIGNhcHR1cmUgdXAgdG8gdGhlIGxhc3QgcGFyZW4gaW4gdGhlIGJsb2NrLiBXZSB0aGVuIHB1bGxcbiAgICAgIC8vIGJhY2sgYmFzZWQgb24gaWYgdGhlcmUgYSBtYXRjaGluZyBvbmVzIGluIHRoZSB1cmxcbiAgICAgIC8vICAgIChbaGVyZV0oL3VybC8odGVzdCkpXG4gICAgICAvLyBUaGUgcGFyZW5zIGhhdmUgdG8gYmUgYmFsYW5jZWRcbiAgICAgIHZhciBtID0gdGV4dC5tYXRjaCggL15cXHMqXFwoWyBcXHRdKihbXlwiJ10qKSg/OlsgXFx0XSsoW1wiJ10pKC4qPylcXDIpP1sgXFx0XSpcXCkvICk7XG4gICAgICBpZiAoIG0gKSB7XG4gICAgICAgIHZhciB1cmwgPSBtWzFdO1xuICAgICAgICBjb25zdW1lZCArPSBtWzBdLmxlbmd0aDtcblxuICAgICAgICBpZiAoIHVybCAmJiB1cmxbMF0gPT0gXCI8XCIgJiYgdXJsW3VybC5sZW5ndGgtMV0gPT0gXCI+XCIgKVxuICAgICAgICAgIHVybCA9IHVybC5zdWJzdHJpbmcoIDEsIHVybC5sZW5ndGggLSAxICk7XG5cbiAgICAgICAgLy8gSWYgdGhlcmUgaXMgYSB0aXRsZSB3ZSBkb24ndCBoYXZlIHRvIHdvcnJ5IGFib3V0IHBhcmVucyBpbiB0aGUgdXJsXG4gICAgICAgIGlmICggIW1bM10gKSB7XG4gICAgICAgICAgdmFyIG9wZW5fcGFyZW5zID0gMTsgLy8gT25lIG9wZW4gdGhhdCBpc24ndCBpbiB0aGUgY2FwdHVyZVxuICAgICAgICAgIGZvciAoIHZhciBsZW4gPSAwOyBsZW4gPCB1cmwubGVuZ3RoOyBsZW4rKyApIHtcbiAgICAgICAgICAgIHN3aXRjaCAoIHVybFtsZW5dICkge1xuICAgICAgICAgICAgY2FzZSBcIihcIjpcbiAgICAgICAgICAgICAgb3Blbl9wYXJlbnMrKztcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwiKVwiOlxuICAgICAgICAgICAgICBpZiAoIC0tb3Blbl9wYXJlbnMgPT0gMCkge1xuICAgICAgICAgICAgICAgIGNvbnN1bWVkIC09IHVybC5sZW5ndGggLSBsZW47XG4gICAgICAgICAgICAgICAgdXJsID0gdXJsLnN1YnN0cmluZygwLCBsZW4pO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFByb2Nlc3MgZXNjYXBlcyBvbmx5XG4gICAgICAgIHVybCA9IHRoaXMuZGlhbGVjdC5pbmxpbmUuX19jYWxsX18uY2FsbCggdGhpcywgdXJsLCAvXFxcXC8gKVswXTtcblxuICAgICAgICBhdHRycyA9IHsgaHJlZjogdXJsIHx8IFwiXCIgfTtcbiAgICAgICAgaWYgKCBtWzNdICE9PSB1bmRlZmluZWQpXG4gICAgICAgICAgYXR0cnMudGl0bGUgPSBtWzNdO1xuXG4gICAgICAgIGxpbmsgPSBbIFwibGlua1wiLCBhdHRycyBdLmNvbmNhdCggY2hpbGRyZW4gKTtcbiAgICAgICAgcmV0dXJuIFsgY29uc3VtZWQsIGxpbmsgXTtcbiAgICAgIH1cblxuICAgICAgLy8gW0FsdCB0ZXh0XVtpZF1cbiAgICAgIC8vIFtBbHQgdGV4dF0gW2lkXVxuICAgICAgbSA9IHRleHQubWF0Y2goIC9eXFxzKlxcWyguKj8pXFxdLyApO1xuXG4gICAgICBpZiAoIG0gKSB7XG5cbiAgICAgICAgY29uc3VtZWQgKz0gbVsgMCBdLmxlbmd0aDtcblxuICAgICAgICAvLyBbbGlua3NdW10gdXNlcyBsaW5rcyBhcyBpdHMgcmVmZXJlbmNlXG4gICAgICAgIGF0dHJzID0geyByZWY6ICggbVsgMSBdIHx8IFN0cmluZyhjaGlsZHJlbikgKS50b0xvd2VyQ2FzZSgpLCAgb3JpZ2luYWw6IG9yaWcuc3Vic3RyKCAwLCBjb25zdW1lZCApIH07XG5cbiAgICAgICAgbGluayA9IFsgXCJsaW5rX3JlZlwiLCBhdHRycyBdLmNvbmNhdCggY2hpbGRyZW4gKTtcblxuICAgICAgICAvLyBXZSBjYW4ndCBjaGVjayBpZiB0aGUgcmVmZXJlbmNlIGlzIGtub3duIGhlcmUgYXMgaXQgbGlrZWx5IHdvbnQgYmVcbiAgICAgICAgLy8gZm91bmQgdGlsbCBhZnRlci4gQ2hlY2sgaXQgaW4gbWQgdHJlZS0+aG10bCB0cmVlIGNvbnZlcnNpb24uXG4gICAgICAgIC8vIFN0b3JlIHRoZSBvcmlnaW5hbCBzbyB0aGF0IGNvbnZlcnNpb24gY2FuIHJldmVydCBpZiB0aGUgcmVmIGlzbid0IGZvdW5kLlxuICAgICAgICByZXR1cm4gWyBjb25zdW1lZCwgbGluayBdO1xuICAgICAgfVxuXG4gICAgICAvLyBbaWRdXG4gICAgICAvLyBPbmx5IGlmIGlkIGlzIHBsYWluIChubyBmb3JtYXR0aW5nLilcbiAgICAgIGlmICggY2hpbGRyZW4ubGVuZ3RoID09IDEgJiYgdHlwZW9mIGNoaWxkcmVuWzBdID09IFwic3RyaW5nXCIgKSB7XG5cbiAgICAgICAgYXR0cnMgPSB7IHJlZjogY2hpbGRyZW5bMF0udG9Mb3dlckNhc2UoKSwgIG9yaWdpbmFsOiBvcmlnLnN1YnN0ciggMCwgY29uc3VtZWQgKSB9O1xuICAgICAgICBsaW5rID0gWyBcImxpbmtfcmVmXCIsIGF0dHJzLCBjaGlsZHJlblswXSBdO1xuICAgICAgICByZXR1cm4gWyBjb25zdW1lZCwgbGluayBdO1xuICAgICAgfVxuXG4gICAgICAvLyBKdXN0IGNvbnN1bWUgdGhlIFwiW1wiXG4gICAgICByZXR1cm4gWyAxLCBcIltcIiBdO1xuICAgIH0sXG5cblxuICAgIFwiPFwiOiBmdW5jdGlvbiBhdXRvTGluayggdGV4dCApIHtcbiAgICAgIHZhciBtO1xuXG4gICAgICBpZiAoICggbSA9IHRleHQubWF0Y2goIC9ePCg/OigoaHR0cHM/fGZ0cHxtYWlsdG8pOltePl0rKXwoLio/QC4qP1xcLlthLXpBLVpdKykpPi8gKSApICE9IG51bGwgKSB7XG4gICAgICAgIGlmICggbVszXSApIHtcbiAgICAgICAgICByZXR1cm4gWyBtWzBdLmxlbmd0aCwgWyBcImxpbmtcIiwgeyBocmVmOiBcIm1haWx0bzpcIiArIG1bM10gfSwgbVszXSBdIF07XG5cbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICggbVsyXSA9PSBcIm1haWx0b1wiICkge1xuICAgICAgICAgIHJldHVybiBbIG1bMF0ubGVuZ3RoLCBbIFwibGlua1wiLCB7IGhyZWY6IG1bMV0gfSwgbVsxXS5zdWJzdHIoXCJtYWlsdG86XCIubGVuZ3RoICkgXSBdO1xuICAgICAgICB9XG4gICAgICAgIGVsc2VcbiAgICAgICAgICByZXR1cm4gWyBtWzBdLmxlbmd0aCwgWyBcImxpbmtcIiwgeyBocmVmOiBtWzFdIH0sIG1bMV0gXSBdO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gWyAxLCBcIjxcIiBdO1xuICAgIH0sXG5cbiAgICBcImBcIjogZnVuY3Rpb24gaW5saW5lQ29kZSggdGV4dCApIHtcbiAgICAgIC8vIElubGluZSBjb2RlIGJsb2NrLiBhcyBtYW55IGJhY2t0aWNrcyBhcyB5b3UgbGlrZSB0byBzdGFydCBpdFxuICAgICAgLy8gQWx3YXlzIHNraXAgb3ZlciB0aGUgb3BlbmluZyB0aWNrcy5cbiAgICAgIHZhciBtID0gdGV4dC5tYXRjaCggLyhgKykoKFtcXHNcXFNdKj8pXFwxKS8gKTtcblxuICAgICAgaWYgKCBtICYmIG1bMl0gKVxuICAgICAgICByZXR1cm4gWyBtWzFdLmxlbmd0aCArIG1bMl0ubGVuZ3RoLCBbIFwiaW5saW5lY29kZVwiLCBtWzNdIF0gXTtcbiAgICAgIGVsc2Uge1xuICAgICAgICAvLyBUT0RPOiBObyBtYXRjaGluZyBlbmQgY29kZSBmb3VuZCAtIHdhcm4hXG4gICAgICAgIHJldHVybiBbIDEsIFwiYFwiIF07XG4gICAgICB9XG4gICAgfSxcblxuICAgIFwiICBcXG5cIjogZnVuY3Rpb24gbGluZUJyZWFrKCB0ZXh0ICkge1xuICAgICAgcmV0dXJuIFsgMywgWyBcImxpbmVicmVha1wiIF0gXTtcbiAgICB9XG5cbn07XG5cbi8vIE1ldGEgSGVscGVyL2dlbmVyYXRvciBtZXRob2QgZm9yIGVtIGFuZCBzdHJvbmcgaGFuZGxpbmdcbmZ1bmN0aW9uIHN0cm9uZ19lbSggdGFnLCBtZCApIHtcblxuICB2YXIgc3RhdGVfc2xvdCA9IHRhZyArIFwiX3N0YXRlXCIsXG4gICAgICBvdGhlcl9zbG90ID0gdGFnID09IFwic3Ryb25nXCIgPyBcImVtX3N0YXRlXCIgOiBcInN0cm9uZ19zdGF0ZVwiO1xuXG4gIGZ1bmN0aW9uIENsb3NlVGFnKGxlbikge1xuICAgIHRoaXMubGVuX2FmdGVyID0gbGVuO1xuICAgIHRoaXMubmFtZSA9IFwiY2xvc2VfXCIgKyBtZDtcbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAoIHRleHQsIG9yaWdfbWF0Y2ggKSB7XG5cbiAgICBpZiAoIHRoaXNbc3RhdGVfc2xvdF1bMF0gPT0gbWQgKSB7XG4gICAgICAvLyBNb3N0IHJlY2VudCBlbSBpcyBvZiB0aGlzIHR5cGVcbiAgICAgIC8vRDp0aGlzLmRlYnVnKFwiY2xvc2luZ1wiLCBtZCk7XG4gICAgICB0aGlzW3N0YXRlX3Nsb3RdLnNoaWZ0KCk7XG5cbiAgICAgIC8vIFwiQ29uc3VtZVwiIGV2ZXJ5dGhpbmcgdG8gZ28gYmFjayB0byB0aGUgcmVjcnVzaW9uIGluIHRoZSBlbHNlLWJsb2NrIGJlbG93XG4gICAgICByZXR1cm5bIHRleHQubGVuZ3RoLCBuZXcgQ2xvc2VUYWcodGV4dC5sZW5ndGgtbWQubGVuZ3RoKSBdO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgIC8vIFN0b3JlIGEgY2xvbmUgb2YgdGhlIGVtL3N0cm9uZyBzdGF0ZXNcbiAgICAgIHZhciBvdGhlciA9IHRoaXNbb3RoZXJfc2xvdF0uc2xpY2UoKSxcbiAgICAgICAgICBzdGF0ZSA9IHRoaXNbc3RhdGVfc2xvdF0uc2xpY2UoKTtcblxuICAgICAgdGhpc1tzdGF0ZV9zbG90XS51bnNoaWZ0KG1kKTtcblxuICAgICAgLy9EOnRoaXMuZGVidWdfaW5kZW50ICs9IFwiICBcIjtcblxuICAgICAgLy8gUmVjdXJzZVxuICAgICAgdmFyIHJlcyA9IHRoaXMucHJvY2Vzc0lubGluZSggdGV4dC5zdWJzdHIoIG1kLmxlbmd0aCApICk7XG4gICAgICAvL0Q6dGhpcy5kZWJ1Z19pbmRlbnQgPSB0aGlzLmRlYnVnX2luZGVudC5zdWJzdHIoMik7XG5cbiAgICAgIHZhciBsYXN0ID0gcmVzW3Jlcy5sZW5ndGggLSAxXTtcblxuICAgICAgLy9EOnRoaXMuZGVidWcoXCJwcm9jZXNzSW5saW5lIGZyb21cIiwgdGFnICsgXCI6IFwiLCB1bmV2YWwoIHJlcyApICk7XG5cbiAgICAgIHZhciBjaGVjayA9IHRoaXNbc3RhdGVfc2xvdF0uc2hpZnQoKTtcbiAgICAgIGlmICggbGFzdCBpbnN0YW5jZW9mIENsb3NlVGFnICkge1xuICAgICAgICByZXMucG9wKCk7XG4gICAgICAgIC8vIFdlIG1hdGNoZWQhIEh1enphaC5cbiAgICAgICAgdmFyIGNvbnN1bWVkID0gdGV4dC5sZW5ndGggLSBsYXN0Lmxlbl9hZnRlcjtcbiAgICAgICAgcmV0dXJuIFsgY29uc3VtZWQsIFsgdGFnIF0uY29uY2F0KHJlcykgXTtcbiAgICAgIH1cbiAgICAgIGVsc2Uge1xuICAgICAgICAvLyBSZXN0b3JlIHRoZSBzdGF0ZSBvZiB0aGUgb3RoZXIga2luZC4gV2UgbWlnaHQgaGF2ZSBtaXN0YWtlbmx5IGNsb3NlZCBpdC5cbiAgICAgICAgdGhpc1tvdGhlcl9zbG90XSA9IG90aGVyO1xuICAgICAgICB0aGlzW3N0YXRlX3Nsb3RdID0gc3RhdGU7XG5cbiAgICAgICAgLy8gV2UgY2FuJ3QgcmV1c2UgdGhlIHByb2Nlc3NlZCByZXN1bHQgYXMgaXQgY291bGQgaGF2ZSB3cm9uZyBwYXJzaW5nIGNvbnRleHRzIGluIGl0LlxuICAgICAgICByZXR1cm4gWyBtZC5sZW5ndGgsIG1kIF07XG4gICAgICB9XG4gICAgfVxuICB9OyAvLyBFbmQgcmV0dXJuZWQgZnVuY3Rpb25cbn1cblxuTWFya2Rvd24uZGlhbGVjdHMuR3J1YmVyLmlubGluZVtcIioqXCJdID0gc3Ryb25nX2VtKFwic3Ryb25nXCIsIFwiKipcIik7XG5NYXJrZG93bi5kaWFsZWN0cy5HcnViZXIuaW5saW5lW1wiX19cIl0gPSBzdHJvbmdfZW0oXCJzdHJvbmdcIiwgXCJfX1wiKTtcbk1hcmtkb3duLmRpYWxlY3RzLkdydWJlci5pbmxpbmVbXCIqXCJdICA9IHN0cm9uZ19lbShcImVtXCIsIFwiKlwiKTtcbk1hcmtkb3duLmRpYWxlY3RzLkdydWJlci5pbmxpbmVbXCJfXCJdICA9IHN0cm9uZ19lbShcImVtXCIsIFwiX1wiKTtcblxuXG4vLyBCdWlsZCBkZWZhdWx0IG9yZGVyIGZyb20gaW5zZXJ0aW9uIG9yZGVyLlxuTWFya2Rvd24uYnVpbGRCbG9ja09yZGVyID0gZnVuY3Rpb24oZCkge1xuICB2YXIgb3JkID0gW107XG4gIGZvciAoIHZhciBpIGluIGQgKSB7XG4gICAgaWYgKCBpID09IFwiX19vcmRlcl9fXCIgfHwgaSA9PSBcIl9fY2FsbF9fXCIgKSBjb250aW51ZTtcbiAgICBvcmQucHVzaCggaSApO1xuICB9XG4gIGQuX19vcmRlcl9fID0gb3JkO1xufTtcblxuLy8gQnVpbGQgcGF0dGVybnMgZm9yIGlubGluZSBtYXRjaGVyXG5NYXJrZG93bi5idWlsZElubGluZVBhdHRlcm5zID0gZnVuY3Rpb24oZCkge1xuICB2YXIgcGF0dGVybnMgPSBbXTtcblxuICBmb3IgKCB2YXIgaSBpbiBkICkge1xuICAgIC8vIF9fZm9vX18gaXMgcmVzZXJ2ZWQgYW5kIG5vdCBhIHBhdHRlcm5cbiAgICBpZiAoIGkubWF0Y2goIC9eX18uKl9fJC8pICkgY29udGludWU7XG4gICAgdmFyIGwgPSBpLnJlcGxhY2UoIC8oW1xcXFwuKis/fCgpXFxbXFxde31dKS9nLCBcIlxcXFwkMVwiIClcbiAgICAgICAgICAgICAucmVwbGFjZSggL1xcbi8sIFwiXFxcXG5cIiApO1xuICAgIHBhdHRlcm5zLnB1c2goIGkubGVuZ3RoID09IDEgPyBsIDogXCIoPzpcIiArIGwgKyBcIilcIiApO1xuICB9XG5cbiAgcGF0dGVybnMgPSBwYXR0ZXJucy5qb2luKFwifFwiKTtcbiAgZC5fX3BhdHRlcm5zX18gPSBwYXR0ZXJucztcbiAgLy9wcmludChcInBhdHRlcm5zOlwiLCB1bmV2YWwoIHBhdHRlcm5zICkgKTtcblxuICB2YXIgZm4gPSBkLl9fY2FsbF9fO1xuICBkLl9fY2FsbF9fID0gZnVuY3Rpb24odGV4dCwgcGF0dGVybikge1xuICAgIGlmICggcGF0dGVybiAhPSB1bmRlZmluZWQgKSB7XG4gICAgICByZXR1cm4gZm4uY2FsbCh0aGlzLCB0ZXh0LCBwYXR0ZXJuKTtcbiAgICB9XG4gICAgZWxzZVxuICAgIHtcbiAgICAgIHJldHVybiBmbi5jYWxsKHRoaXMsIHRleHQsIHBhdHRlcm5zKTtcbiAgICB9XG4gIH07XG59O1xuXG5NYXJrZG93bi5EaWFsZWN0SGVscGVycyA9IHt9O1xuTWFya2Rvd24uRGlhbGVjdEhlbHBlcnMuaW5saW5lX3VudGlsX2NoYXIgPSBmdW5jdGlvbiggdGV4dCwgd2FudCApIHtcbiAgdmFyIGNvbnN1bWVkID0gMCxcbiAgICAgIG5vZGVzID0gW107XG5cbiAgd2hpbGUgKCB0cnVlICkge1xuICAgIGlmICggdGV4dC5jaGFyQXQoIGNvbnN1bWVkICkgPT0gd2FudCApIHtcbiAgICAgIC8vIEZvdW5kIHRoZSBjaGFyYWN0ZXIgd2Ugd2VyZSBsb29raW5nIGZvclxuICAgICAgY29uc3VtZWQrKztcbiAgICAgIHJldHVybiBbIGNvbnN1bWVkLCBub2RlcyBdO1xuICAgIH1cblxuICAgIGlmICggY29uc3VtZWQgPj0gdGV4dC5sZW5ndGggKSB7XG4gICAgICAvLyBObyBjbG9zaW5nIGNoYXIgZm91bmQuIEFib3J0LlxuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgdmFyIHJlcyA9IHRoaXMuZGlhbGVjdC5pbmxpbmUuX19vbmVFbGVtZW50X18uY2FsbCh0aGlzLCB0ZXh0LnN1YnN0ciggY29uc3VtZWQgKSApO1xuICAgIGNvbnN1bWVkICs9IHJlc1sgMCBdO1xuICAgIC8vIEFkZCBhbnkgcmV0dXJuZWQgbm9kZXMuXG4gICAgbm9kZXMucHVzaC5hcHBseSggbm9kZXMsIHJlcy5zbGljZSggMSApICk7XG4gIH1cbn1cblxuLy8gSGVscGVyIGZ1bmN0aW9uIHRvIG1ha2Ugc3ViLWNsYXNzaW5nIGEgZGlhbGVjdCBlYXNpZXJcbk1hcmtkb3duLnN1YmNsYXNzRGlhbGVjdCA9IGZ1bmN0aW9uKCBkICkge1xuICBmdW5jdGlvbiBCbG9jaygpIHt9XG4gIEJsb2NrLnByb3RvdHlwZSA9IGQuYmxvY2s7XG4gIGZ1bmN0aW9uIElubGluZSgpIHt9XG4gIElubGluZS5wcm90b3R5cGUgPSBkLmlubGluZTtcblxuICByZXR1cm4geyBibG9jazogbmV3IEJsb2NrKCksIGlubGluZTogbmV3IElubGluZSgpIH07XG59O1xuXG5NYXJrZG93bi5idWlsZEJsb2NrT3JkZXIgKCBNYXJrZG93bi5kaWFsZWN0cy5HcnViZXIuYmxvY2sgKTtcbk1hcmtkb3duLmJ1aWxkSW5saW5lUGF0dGVybnMoIE1hcmtkb3duLmRpYWxlY3RzLkdydWJlci5pbmxpbmUgKTtcblxuTWFya2Rvd24uZGlhbGVjdHMuTWFydWt1ID0gTWFya2Rvd24uc3ViY2xhc3NEaWFsZWN0KCBNYXJrZG93bi5kaWFsZWN0cy5HcnViZXIgKTtcblxuTWFya2Rvd24uZGlhbGVjdHMuTWFydWt1LnByb2Nlc3NNZXRhSGFzaCA9IGZ1bmN0aW9uIHByb2Nlc3NNZXRhSGFzaCggbWV0YV9zdHJpbmcgKSB7XG4gIHZhciBtZXRhID0gc3BsaXRfbWV0YV9oYXNoKCBtZXRhX3N0cmluZyApLFxuICAgICAgYXR0ciA9IHt9O1xuXG4gIGZvciAoIHZhciBpID0gMDsgaSA8IG1ldGEubGVuZ3RoOyArK2kgKSB7XG4gICAgLy8gaWQ6ICNmb29cbiAgICBpZiAoIC9eIy8udGVzdCggbWV0YVsgaSBdICkgKSB7XG4gICAgICBhdHRyLmlkID0gbWV0YVsgaSBdLnN1YnN0cmluZyggMSApO1xuICAgIH1cbiAgICAvLyBjbGFzczogLmZvb1xuICAgIGVsc2UgaWYgKCAvXlxcLi8udGVzdCggbWV0YVsgaSBdICkgKSB7XG4gICAgICAvLyBpZiBjbGFzcyBhbHJlYWR5IGV4aXN0cywgYXBwZW5kIHRoZSBuZXcgb25lXG4gICAgICBpZiAoIGF0dHJbXCJjbGFzc1wiXSApIHtcbiAgICAgICAgYXR0cltcImNsYXNzXCJdID0gYXR0cltcImNsYXNzXCJdICsgbWV0YVsgaSBdLnJlcGxhY2UoIC8uLywgXCIgXCIgKTtcbiAgICAgIH1cbiAgICAgIGVsc2Uge1xuICAgICAgICBhdHRyW1wiY2xhc3NcIl0gPSBtZXRhWyBpIF0uc3Vic3RyaW5nKCAxICk7XG4gICAgICB9XG4gICAgfVxuICAgIC8vIGF0dHJpYnV0ZTogZm9vPWJhclxuICAgIGVsc2UgaWYgKCAvXFw9Ly50ZXN0KCBtZXRhWyBpIF0gKSApIHtcbiAgICAgIHZhciBzID0gbWV0YVsgaSBdLnNwbGl0KCAvXFw9LyApO1xuICAgICAgYXR0clsgc1sgMCBdIF0gPSBzWyAxIF07XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGF0dHI7XG59XG5cbmZ1bmN0aW9uIHNwbGl0X21ldGFfaGFzaCggbWV0YV9zdHJpbmcgKSB7XG4gIHZhciBtZXRhID0gbWV0YV9zdHJpbmcuc3BsaXQoIFwiXCIgKSxcbiAgICAgIHBhcnRzID0gWyBcIlwiIF0sXG4gICAgICBpbl9xdW90ZXMgPSBmYWxzZTtcblxuICB3aGlsZSAoIG1ldGEubGVuZ3RoICkge1xuICAgIHZhciBsZXR0ZXIgPSBtZXRhLnNoaWZ0KCk7XG4gICAgc3dpdGNoICggbGV0dGVyICkge1xuICAgICAgY2FzZSBcIiBcIiA6XG4gICAgICAgIC8vIGlmIHdlJ3JlIGluIGEgcXVvdGVkIHNlY3Rpb24sIGtlZXAgaXRcbiAgICAgICAgaWYgKCBpbl9xdW90ZXMgKSB7XG4gICAgICAgICAgcGFydHNbIHBhcnRzLmxlbmd0aCAtIDEgXSArPSBsZXR0ZXI7XG4gICAgICAgIH1cbiAgICAgICAgLy8gb3RoZXJ3aXNlIG1ha2UgYSBuZXcgcGFydFxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICBwYXJ0cy5wdXNoKCBcIlwiICk7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIFwiJ1wiIDpcbiAgICAgIGNhc2UgJ1wiJyA6XG4gICAgICAgIC8vIHJldmVyc2UgdGhlIHF1b3RlcyBhbmQgbW92ZSBzdHJhaWdodCBvblxuICAgICAgICBpbl9xdW90ZXMgPSAhaW5fcXVvdGVzO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJcXFxcXCIgOlxuICAgICAgICAvLyBzaGlmdCBvZmYgdGhlIG5leHQgbGV0dGVyIHRvIGJlIHVzZWQgc3RyYWlnaHQgYXdheS5cbiAgICAgICAgLy8gaXQgd2FzIGVzY2FwZWQgc28gd2UnbGwga2VlcCBpdCB3aGF0ZXZlciBpdCBpc1xuICAgICAgICBsZXR0ZXIgPSBtZXRhLnNoaWZ0KCk7XG4gICAgICBkZWZhdWx0IDpcbiAgICAgICAgcGFydHNbIHBhcnRzLmxlbmd0aCAtIDEgXSArPSBsZXR0ZXI7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBwYXJ0cztcbn1cblxuTWFya2Rvd24uZGlhbGVjdHMuTWFydWt1LmJsb2NrLmRvY3VtZW50X21ldGEgPSBmdW5jdGlvbiBkb2N1bWVudF9tZXRhKCBibG9jaywgbmV4dCApIHtcbiAgLy8gd2UncmUgb25seSBpbnRlcmVzdGVkIGluIHRoZSBmaXJzdCBibG9ja1xuICBpZiAoIGJsb2NrLmxpbmVOdW1iZXIgPiAxICkgcmV0dXJuIHVuZGVmaW5lZDtcblxuICAvLyBkb2N1bWVudF9tZXRhIGJsb2NrcyBjb25zaXN0IG9mIG9uZSBvciBtb3JlIGxpbmVzIG9mIGBLZXk6IFZhbHVlXFxuYFxuICBpZiAoICEgYmxvY2subWF0Y2goIC9eKD86XFx3KzouKlxcbikqXFx3KzouKiQvICkgKSByZXR1cm4gdW5kZWZpbmVkO1xuXG4gIC8vIG1ha2UgYW4gYXR0cmlidXRlIG5vZGUgaWYgaXQgZG9lc24ndCBleGlzdFxuICBpZiAoICFleHRyYWN0X2F0dHIoIHRoaXMudHJlZSApICkge1xuICAgIHRoaXMudHJlZS5zcGxpY2UoIDEsIDAsIHt9ICk7XG4gIH1cblxuICB2YXIgcGFpcnMgPSBibG9jay5zcGxpdCggL1xcbi8gKTtcbiAgZm9yICggcCBpbiBwYWlycyApIHtcbiAgICB2YXIgbSA9IHBhaXJzWyBwIF0ubWF0Y2goIC8oXFx3Kyk6XFxzKiguKikkLyApLFxuICAgICAgICBrZXkgPSBtWyAxIF0udG9Mb3dlckNhc2UoKSxcbiAgICAgICAgdmFsdWUgPSBtWyAyIF07XG5cbiAgICB0aGlzLnRyZWVbIDEgXVsga2V5IF0gPSB2YWx1ZTtcbiAgfVxuXG4gIC8vIGRvY3VtZW50X21ldGEgcHJvZHVjZXMgbm8gY29udGVudCFcbiAgcmV0dXJuIFtdO1xufTtcblxuTWFya2Rvd24uZGlhbGVjdHMuTWFydWt1LmJsb2NrLmJsb2NrX21ldGEgPSBmdW5jdGlvbiBibG9ja19tZXRhKCBibG9jaywgbmV4dCApIHtcbiAgLy8gY2hlY2sgaWYgdGhlIGxhc3QgbGluZSBvZiB0aGUgYmxvY2sgaXMgYW4gbWV0YSBoYXNoXG4gIHZhciBtID0gYmxvY2subWF0Y2goIC8oXnxcXG4pIHswLDN9XFx7OlxccyooKD86XFxcXFxcfXxbXlxcfV0pKilcXHMqXFx9JC8gKTtcbiAgaWYgKCAhbSApIHJldHVybiB1bmRlZmluZWQ7XG5cbiAgLy8gcHJvY2VzcyB0aGUgbWV0YSBoYXNoXG4gIHZhciBhdHRyID0gdGhpcy5kaWFsZWN0LnByb2Nlc3NNZXRhSGFzaCggbVsgMiBdICk7XG5cbiAgdmFyIGhhc2g7XG5cbiAgLy8gaWYgd2UgbWF0Y2hlZCBeIHRoZW4gd2UgbmVlZCB0byBhcHBseSBtZXRhIHRvIHRoZSBwcmV2aW91cyBibG9ja1xuICBpZiAoIG1bIDEgXSA9PT0gXCJcIiApIHtcbiAgICB2YXIgbm9kZSA9IHRoaXMudHJlZVsgdGhpcy50cmVlLmxlbmd0aCAtIDEgXTtcbiAgICBoYXNoID0gZXh0cmFjdF9hdHRyKCBub2RlICk7XG5cbiAgICAvLyBpZiB0aGUgbm9kZSBpcyBhIHN0cmluZyAocmF0aGVyIHRoYW4gSnNvbk1MKSwgYmFpbFxuICAgIGlmICggdHlwZW9mIG5vZGUgPT09IFwic3RyaW5nXCIgKSByZXR1cm4gdW5kZWZpbmVkO1xuXG4gICAgLy8gY3JlYXRlIHRoZSBhdHRyaWJ1dGUgaGFzaCBpZiBpdCBkb2Vzbid0IGV4aXN0XG4gICAgaWYgKCAhaGFzaCApIHtcbiAgICAgIGhhc2ggPSB7fTtcbiAgICAgIG5vZGUuc3BsaWNlKCAxLCAwLCBoYXNoICk7XG4gICAgfVxuXG4gICAgLy8gYWRkIHRoZSBhdHRyaWJ1dGVzIGluXG4gICAgZm9yICggYSBpbiBhdHRyICkge1xuICAgICAgaGFzaFsgYSBdID0gYXR0clsgYSBdO1xuICAgIH1cblxuICAgIC8vIHJldHVybiBub3RoaW5nIHNvIHRoZSBtZXRhIGhhc2ggaXMgcmVtb3ZlZFxuICAgIHJldHVybiBbXTtcbiAgfVxuXG4gIC8vIHB1bGwgdGhlIG1ldGEgaGFzaCBvZmYgdGhlIGJsb2NrIGFuZCBwcm9jZXNzIHdoYXQncyBsZWZ0XG4gIHZhciBiID0gYmxvY2sucmVwbGFjZSggL1xcbi4qJC8sIFwiXCIgKSxcbiAgICAgIHJlc3VsdCA9IHRoaXMucHJvY2Vzc0Jsb2NrKCBiLCBbXSApO1xuXG4gIC8vIGdldCBvciBtYWtlIHRoZSBhdHRyaWJ1dGVzIGhhc2hcbiAgaGFzaCA9IGV4dHJhY3RfYXR0ciggcmVzdWx0WyAwIF0gKTtcbiAgaWYgKCAhaGFzaCApIHtcbiAgICBoYXNoID0ge307XG4gICAgcmVzdWx0WyAwIF0uc3BsaWNlKCAxLCAwLCBoYXNoICk7XG4gIH1cblxuICAvLyBhdHRhY2ggdGhlIGF0dHJpYnV0ZXMgdG8gdGhlIGJsb2NrXG4gIGZvciAoIGEgaW4gYXR0ciApIHtcbiAgICBoYXNoWyBhIF0gPSBhdHRyWyBhIF07XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufTtcblxuTWFya2Rvd24uZGlhbGVjdHMuTWFydWt1LmJsb2NrLmRlZmluaXRpb25fbGlzdCA9IGZ1bmN0aW9uIGRlZmluaXRpb25fbGlzdCggYmxvY2ssIG5leHQgKSB7XG4gIC8vIG9uZSBvciBtb3JlIHRlcm1zIGZvbGxvd2VkIGJ5IG9uZSBvciBtb3JlIGRlZmluaXRpb25zLCBpbiBhIHNpbmdsZSBibG9ja1xuICB2YXIgdGlnaHQgPSAvXigoPzpbXlxcczpdLipcXG4pKyk6XFxzKyhbXFxzXFxTXSspJC8sXG4gICAgICBsaXN0ID0gWyBcImRsXCIgXSxcbiAgICAgIGksIG07XG5cbiAgLy8gc2VlIGlmIHdlJ3JlIGRlYWxpbmcgd2l0aCBhIHRpZ2h0IG9yIGxvb3NlIGJsb2NrXG4gIGlmICggKCBtID0gYmxvY2subWF0Y2goIHRpZ2h0ICkgKSApIHtcbiAgICAvLyBwdWxsIHN1YnNlcXVlbnQgdGlnaHQgREwgYmxvY2tzIG91dCBvZiBgbmV4dGBcbiAgICB2YXIgYmxvY2tzID0gWyBibG9jayBdO1xuICAgIHdoaWxlICggbmV4dC5sZW5ndGggJiYgdGlnaHQuZXhlYyggbmV4dFsgMCBdICkgKSB7XG4gICAgICBibG9ja3MucHVzaCggbmV4dC5zaGlmdCgpICk7XG4gICAgfVxuXG4gICAgZm9yICggdmFyIGIgPSAwOyBiIDwgYmxvY2tzLmxlbmd0aDsgKytiICkge1xuICAgICAgdmFyIG0gPSBibG9ja3NbIGIgXS5tYXRjaCggdGlnaHQgKSxcbiAgICAgICAgICB0ZXJtcyA9IG1bIDEgXS5yZXBsYWNlKCAvXFxuJC8sIFwiXCIgKS5zcGxpdCggL1xcbi8gKSxcbiAgICAgICAgICBkZWZucyA9IG1bIDIgXS5zcGxpdCggL1xcbjpcXHMrLyApO1xuXG4gICAgICAvLyBwcmludCggdW5ldmFsKCBtICkgKTtcblxuICAgICAgZm9yICggaSA9IDA7IGkgPCB0ZXJtcy5sZW5ndGg7ICsraSApIHtcbiAgICAgICAgbGlzdC5wdXNoKCBbIFwiZHRcIiwgdGVybXNbIGkgXSBdICk7XG4gICAgICB9XG5cbiAgICAgIGZvciAoIGkgPSAwOyBpIDwgZGVmbnMubGVuZ3RoOyArK2kgKSB7XG4gICAgICAgIC8vIHJ1biBpbmxpbmUgcHJvY2Vzc2luZyBvdmVyIHRoZSBkZWZpbml0aW9uXG4gICAgICAgIGxpc3QucHVzaCggWyBcImRkXCIgXS5jb25jYXQoIHRoaXMucHJvY2Vzc0lubGluZSggZGVmbnNbIGkgXS5yZXBsYWNlKCAvKFxcbilcXHMrLywgXCIkMVwiICkgKSApICk7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIGVsc2Uge1xuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cblxuICByZXR1cm4gWyBsaXN0IF07XG59O1xuXG4vLyBzcGxpdHMgb24gdW5lc2NhcGVkIGluc3RhbmNlcyBvZiBAY2guIElmIEBjaCBpcyBub3QgYSBjaGFyYWN0ZXIgdGhlIHJlc3VsdFxuLy8gY2FuIGJlIHVucHJlZGljdGFibGVcblxuTWFya2Rvd24uZGlhbGVjdHMuTWFydWt1LmJsb2NrLnRhYmxlID0gZnVuY3Rpb24gdGFibGUgKGJsb2NrLCBuZXh0KSB7XG5cbiAgICB2YXIgX3NwbGl0X29uX3VuZXNjYXBlZCA9IGZ1bmN0aW9uKHMsIGNoKSB7XG4gICAgICAgIGNoID0gY2ggfHwgJ1xcXFxzJztcbiAgICAgICAgaWYgKGNoLm1hdGNoKC9eW1xcXFx8XFxbXFxde30/Ki4rXiRdJC8pKSB7IGNoID0gJ1xcXFwnICsgY2g7IH1cbiAgICAgICAgdmFyIHJlcyA9IFsgXSxcbiAgICAgICAgICAgIHIgPSBuZXcgUmVnRXhwKCdeKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcJyArIGNoICsgJ10pKiknICsgY2ggKyAnKC4qKScpLFxuICAgICAgICAgICAgbTtcbiAgICAgICAgd2hpbGUobSA9IHMubWF0Y2gocikpIHtcbiAgICAgICAgICAgIHJlcy5wdXNoKG1bMV0pO1xuICAgICAgICAgICAgcyA9IG1bMl07XG4gICAgICAgIH1cbiAgICAgICAgcmVzLnB1c2gocyk7XG4gICAgICAgIHJldHVybiByZXM7XG4gICAgfVxuXG4gICAgdmFyIGxlYWRpbmdfcGlwZSA9IC9eIHswLDN9XFx8KC4rKVxcbiB7MCwzfVxcfFxccyooW1xcLTpdK1tcXC18IDpdKilcXG4oKD86XFxzKlxcfC4qKD86XFxufCQpKSopKD89XFxufCQpLyxcbiAgICAgICAgLy8gZmluZCBhdCBsZWFzdCBhbiB1bmVzY2FwZWQgcGlwZSBpbiBlYWNoIGxpbmVcbiAgICAgICAgbm9fbGVhZGluZ19waXBlID0gL14gezAsM30oXFxTKD86XFxcXC58W15cXFxcfF0pKlxcfC4qKVxcbiB7MCwzfShbXFwtOl0rXFxzKlxcfFtcXC18IDpdKilcXG4oKD86KD86XFxcXC58W15cXFxcfF0pKlxcfC4qKD86XFxufCQpKSopKD89XFxufCQpLyxcbiAgICAgICAgaSwgbTtcbiAgICBpZiAobSA9IGJsb2NrLm1hdGNoKGxlYWRpbmdfcGlwZSkpIHtcbiAgICAgICAgLy8gcmVtb3ZlIGxlYWRpbmcgcGlwZXMgaW4gY29udGVudHNcbiAgICAgICAgLy8gKGhlYWRlciBhbmQgaG9yaXpvbnRhbCBydWxlIGFscmVhZHkgaGF2ZSB0aGUgbGVhZGluZyBwaXBlIGxlZnQgb3V0KVxuICAgICAgICBtWzNdID0gbVszXS5yZXBsYWNlKC9eXFxzKlxcfC9nbSwgJycpO1xuICAgIH0gZWxzZSBpZiAoISAoIG0gPSBibG9jay5tYXRjaChub19sZWFkaW5nX3BpcGUpKSkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cblxuICAgIHZhciB0YWJsZSA9IFsgXCJ0YWJsZVwiLCBbIFwidGhlYWRcIiwgWyBcInRyXCIgXSBdLCBbIFwidGJvZHlcIiBdIF07XG5cbiAgICAvLyByZW1vdmUgdHJhaWxpbmcgcGlwZXMsIHRoZW4gc3BsaXQgb24gcGlwZXNcbiAgICAvLyAobm8gZXNjYXBlZCBwaXBlcyBhcmUgYWxsb3dlZCBpbiBob3Jpem9udGFsIHJ1bGUpXG4gICAgbVsyXSA9IG1bMl0ucmVwbGFjZSgvXFx8XFxzKiQvLCAnJykuc3BsaXQoJ3wnKTtcblxuICAgIC8vIHByb2Nlc3MgYWxpZ25tZW50XG4gICAgdmFyIGh0bWxfYXR0cnMgPSBbIF07XG4gICAgZm9yRWFjaCAobVsyXSwgZnVuY3Rpb24gKHMpIHtcbiAgICAgICAgaWYgKHMubWF0Y2goL15cXHMqLSs6XFxzKiQvKSkgICAgICAgaHRtbF9hdHRycy5wdXNoKHthbGlnbjogXCJyaWdodFwifSk7XG4gICAgICAgIGVsc2UgaWYgKHMubWF0Y2goL15cXHMqOi0rXFxzKiQvKSkgIGh0bWxfYXR0cnMucHVzaCh7YWxpZ246IFwibGVmdFwifSk7XG4gICAgICAgIGVsc2UgaWYgKHMubWF0Y2goL15cXHMqOi0rOlxccyokLykpIGh0bWxfYXR0cnMucHVzaCh7YWxpZ246IFwiY2VudGVyXCJ9KTtcbiAgICAgICAgZWxzZSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGh0bWxfYXR0cnMucHVzaCh7fSk7XG4gICAgfSk7XG5cbiAgICAvLyBub3cgZm9yIHRoZSBoZWFkZXIsIGF2b2lkIGVzY2FwZWQgcGlwZXNcbiAgICBtWzFdID0gX3NwbGl0X29uX3VuZXNjYXBlZChtWzFdLnJlcGxhY2UoL1xcfFxccyokLywgJycpLCAnfCcpO1xuICAgIGZvciAoaSA9IDA7IGkgPCBtWzFdLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHRhYmxlWzFdWzFdLnB1c2goWyd0aCcsIGh0bWxfYXR0cnNbaV0gfHwge31dLmNvbmNhdChcbiAgICAgICAgICAgIHRoaXMucHJvY2Vzc0lubGluZShtWzFdW2ldLnRyaW0oKSkpKTtcbiAgICB9XG5cbiAgICAvLyBub3cgZm9yIGJvZHkgY29udGVudHNcbiAgICBmb3JFYWNoIChtWzNdLnJlcGxhY2UoL1xcfFxccyokL21nLCAnJykuc3BsaXQoJ1xcbicpLCBmdW5jdGlvbiAocm93KSB7XG4gICAgICAgIHZhciBodG1sX3JvdyA9IFsndHInXTtcbiAgICAgICAgcm93ID0gX3NwbGl0X29uX3VuZXNjYXBlZChyb3csICd8Jyk7XG4gICAgICAgIGZvciAoaSA9IDA7IGkgPCByb3cubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGh0bWxfcm93LnB1c2goWyd0ZCcsIGh0bWxfYXR0cnNbaV0gfHwge31dLmNvbmNhdCh0aGlzLnByb2Nlc3NJbmxpbmUocm93W2ldLnRyaW0oKSkpKTtcbiAgICAgICAgfVxuICAgICAgICB0YWJsZVsyXS5wdXNoKGh0bWxfcm93KTtcbiAgICB9LCB0aGlzKTtcblxuICAgIHJldHVybiBbdGFibGVdO1xufVxuXG5NYXJrZG93bi5kaWFsZWN0cy5NYXJ1a3UuaW5saW5lWyBcIns6XCIgXSA9IGZ1bmN0aW9uIGlubGluZV9tZXRhKCB0ZXh0LCBtYXRjaGVzLCBvdXQgKSB7XG4gIGlmICggIW91dC5sZW5ndGggKSB7XG4gICAgcmV0dXJuIFsgMiwgXCJ7OlwiIF07XG4gIH1cblxuICAvLyBnZXQgdGhlIHByZWNlZWRpbmcgZWxlbWVudFxuICB2YXIgYmVmb3JlID0gb3V0WyBvdXQubGVuZ3RoIC0gMSBdO1xuXG4gIGlmICggdHlwZW9mIGJlZm9yZSA9PT0gXCJzdHJpbmdcIiApIHtcbiAgICByZXR1cm4gWyAyLCBcIns6XCIgXTtcbiAgfVxuXG4gIC8vIG1hdGNoIGEgbWV0YSBoYXNoXG4gIHZhciBtID0gdGV4dC5tYXRjaCggL15cXHs6XFxzKigoPzpcXFxcXFx9fFteXFx9XSkqKVxccypcXH0vICk7XG5cbiAgLy8gbm8gbWF0Y2gsIGZhbHNlIGFsYXJtXG4gIGlmICggIW0gKSB7XG4gICAgcmV0dXJuIFsgMiwgXCJ7OlwiIF07XG4gIH1cblxuICAvLyBhdHRhY2ggdGhlIGF0dHJpYnV0ZXMgdG8gdGhlIHByZWNlZWRpbmcgZWxlbWVudFxuICB2YXIgbWV0YSA9IHRoaXMuZGlhbGVjdC5wcm9jZXNzTWV0YUhhc2goIG1bIDEgXSApLFxuICAgICAgYXR0ciA9IGV4dHJhY3RfYXR0ciggYmVmb3JlICk7XG5cbiAgaWYgKCAhYXR0ciApIHtcbiAgICBhdHRyID0ge307XG4gICAgYmVmb3JlLnNwbGljZSggMSwgMCwgYXR0ciApO1xuICB9XG5cbiAgZm9yICggdmFyIGsgaW4gbWV0YSApIHtcbiAgICBhdHRyWyBrIF0gPSBtZXRhWyBrIF07XG4gIH1cblxuICAvLyBjdXQgb3V0IHRoZSBzdHJpbmcgYW5kIHJlcGxhY2UgaXQgd2l0aCBub3RoaW5nXG4gIHJldHVybiBbIG1bIDAgXS5sZW5ndGgsIFwiXCIgXTtcbn07XG5cbk1hcmtkb3duLmRpYWxlY3RzLk1hcnVrdS5pbmxpbmUuX19lc2NhcGVfXyA9IC9eXFxcXFtcXFxcYFxcKl97fVxcW1xcXSgpI1xcKy4hXFwtfDpdLztcblxuTWFya2Rvd24uYnVpbGRCbG9ja09yZGVyICggTWFya2Rvd24uZGlhbGVjdHMuTWFydWt1LmJsb2NrICk7XG5NYXJrZG93bi5idWlsZElubGluZVBhdHRlcm5zKCBNYXJrZG93bi5kaWFsZWN0cy5NYXJ1a3UuaW5saW5lICk7XG5cbnZhciBpc0FycmF5ID0gQXJyYXkuaXNBcnJheSB8fCBmdW5jdGlvbihvYmopIHtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvYmopID09IFwiW29iamVjdCBBcnJheV1cIjtcbn07XG5cbnZhciBmb3JFYWNoO1xuLy8gRG9uJ3QgbWVzcyB3aXRoIEFycmF5LnByb3RvdHlwZS4gSXRzIG5vdCBmcmllbmRseVxuaWYgKCBBcnJheS5wcm90b3R5cGUuZm9yRWFjaCApIHtcbiAgZm9yRWFjaCA9IGZ1bmN0aW9uKCBhcnIsIGNiLCB0aGlzcCApIHtcbiAgICByZXR1cm4gYXJyLmZvckVhY2goIGNiLCB0aGlzcCApO1xuICB9O1xufVxuZWxzZSB7XG4gIGZvckVhY2ggPSBmdW5jdGlvbihhcnIsIGNiLCB0aGlzcCkge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7XG4gICAgICBjYi5jYWxsKHRoaXNwIHx8IGFyciwgYXJyW2ldLCBpLCBhcnIpO1xuICAgIH1cbiAgfVxufVxuXG52YXIgaXNFbXB0eSA9IGZ1bmN0aW9uKCBvYmogKSB7XG4gIGZvciAoIHZhciBrZXkgaW4gb2JqICkge1xuICAgIGlmICggaGFzT3duUHJvcGVydHkuY2FsbCggb2JqLCBrZXkgKSApIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdHJ1ZTtcbn1cblxuZnVuY3Rpb24gZXh0cmFjdF9hdHRyKCBqc29ubWwgKSB7XG4gIHJldHVybiBpc0FycmF5KGpzb25tbClcbiAgICAgICYmIGpzb25tbC5sZW5ndGggPiAxXG4gICAgICAmJiB0eXBlb2YganNvbm1sWyAxIF0gPT09IFwib2JqZWN0XCJcbiAgICAgICYmICEoIGlzQXJyYXkoanNvbm1sWyAxIF0pIClcbiAgICAgID8ganNvbm1sWyAxIF1cbiAgICAgIDogdW5kZWZpbmVkO1xufVxuXG5cblxuLyoqXG4gKiAgcmVuZGVySnNvbk1MKCBqc29ubWxbLCBvcHRpb25zXSApIC0+IFN0cmluZ1xuICogIC0ganNvbm1sIChBcnJheSk6IEpzb25NTCBhcnJheSB0byByZW5kZXIgdG8gWE1MXG4gKiAgLSBvcHRpb25zIChPYmplY3QpOiBvcHRpb25zXG4gKlxuICogIENvbnZlcnRzIHRoZSBnaXZlbiBKc29uTUwgaW50byB3ZWxsLWZvcm1lZCBYTUwuXG4gKlxuICogIFRoZSBvcHRpb25zIGN1cnJlbnRseSB1bmRlcnN0b29kIGFyZTpcbiAqXG4gKiAgLSByb290IChCb29sZWFuKTogd2V0aGVyIG9yIG5vdCB0aGUgcm9vdCBub2RlIHNob3VsZCBiZSBpbmNsdWRlZCBpbiB0aGVcbiAqICAgIG91dHB1dCwgb3IganVzdCBpdHMgY2hpbGRyZW4uIFRoZSBkZWZhdWx0IGBmYWxzZWAgaXMgdG8gbm90IGluY2x1ZGUgdGhlXG4gKiAgICByb290IGl0c2VsZi5cbiAqL1xuZXhwb3NlLnJlbmRlckpzb25NTCA9IGZ1bmN0aW9uKCBqc29ubWwsIG9wdGlvbnMgKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICAvLyBpbmNsdWRlIHRoZSByb290IGVsZW1lbnQgaW4gdGhlIHJlbmRlcmVkIG91dHB1dD9cbiAgb3B0aW9ucy5yb290ID0gb3B0aW9ucy5yb290IHx8IGZhbHNlO1xuXG4gIHZhciBjb250ZW50ID0gW107XG5cbiAgaWYgKCBvcHRpb25zLnJvb3QgKSB7XG4gICAgY29udGVudC5wdXNoKCByZW5kZXJfdHJlZSgganNvbm1sICkgKTtcbiAgfVxuICBlbHNlIHtcbiAgICBqc29ubWwuc2hpZnQoKTsgLy8gZ2V0IHJpZCBvZiB0aGUgdGFnXG4gICAgaWYgKCBqc29ubWwubGVuZ3RoICYmIHR5cGVvZiBqc29ubWxbIDAgXSA9PT0gXCJvYmplY3RcIiAmJiAhKCBqc29ubWxbIDAgXSBpbnN0YW5jZW9mIEFycmF5ICkgKSB7XG4gICAgICBqc29ubWwuc2hpZnQoKTsgLy8gZ2V0IHJpZCBvZiB0aGUgYXR0cmlidXRlc1xuICAgIH1cblxuICAgIHdoaWxlICgganNvbm1sLmxlbmd0aCApIHtcbiAgICAgIGNvbnRlbnQucHVzaCggcmVuZGVyX3RyZWUoIGpzb25tbC5zaGlmdCgpICkgKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gY29udGVudC5qb2luKCBcIlxcblxcblwiICk7XG59O1xuXG5mdW5jdGlvbiBlc2NhcGVIVE1MKCB0ZXh0ICkge1xuICByZXR1cm4gdGV4dC5yZXBsYWNlKCAvJi9nLCBcIiZhbXA7XCIgKVxuICAgICAgICAgICAgIC5yZXBsYWNlKCAvPC9nLCBcIiZsdDtcIiApXG4gICAgICAgICAgICAgLnJlcGxhY2UoIC8+L2csIFwiJmd0O1wiIClcbiAgICAgICAgICAgICAucmVwbGFjZSggL1wiL2csIFwiJnF1b3Q7XCIgKVxuICAgICAgICAgICAgIC5yZXBsYWNlKCAvJy9nLCBcIiYjMzk7XCIgKTtcbn1cblxuZnVuY3Rpb24gcmVuZGVyX3RyZWUoIGpzb25tbCApIHtcbiAgLy8gYmFzaWMgY2FzZVxuICBpZiAoIHR5cGVvZiBqc29ubWwgPT09IFwic3RyaW5nXCIgKSB7XG4gICAgcmV0dXJuIGVzY2FwZUhUTUwoIGpzb25tbCApO1xuICB9XG5cbiAgdmFyIHRhZyA9IGpzb25tbC5zaGlmdCgpLFxuICAgICAgYXR0cmlidXRlcyA9IHt9LFxuICAgICAgY29udGVudCA9IFtdO1xuXG4gIGlmICgganNvbm1sLmxlbmd0aCAmJiB0eXBlb2YganNvbm1sWyAwIF0gPT09IFwib2JqZWN0XCIgJiYgISgganNvbm1sWyAwIF0gaW5zdGFuY2VvZiBBcnJheSApICkge1xuICAgIGF0dHJpYnV0ZXMgPSBqc29ubWwuc2hpZnQoKTtcbiAgfVxuXG4gIHdoaWxlICgganNvbm1sLmxlbmd0aCApIHtcbiAgICBjb250ZW50LnB1c2goIHJlbmRlcl90cmVlKCBqc29ubWwuc2hpZnQoKSApICk7XG4gIH1cblxuICB2YXIgdGFnX2F0dHJzID0gXCJcIjtcbiAgZm9yICggdmFyIGEgaW4gYXR0cmlidXRlcyApIHtcbiAgICB0YWdfYXR0cnMgKz0gXCIgXCIgKyBhICsgJz1cIicgKyBlc2NhcGVIVE1MKCBhdHRyaWJ1dGVzWyBhIF0gKSArICdcIic7XG4gIH1cblxuICAvLyBiZSBjYXJlZnVsIGFib3V0IGFkZGluZyB3aGl0ZXNwYWNlIGhlcmUgZm9yIGlubGluZSBlbGVtZW50c1xuICBpZiAoIHRhZyA9PSBcImltZ1wiIHx8IHRhZyA9PSBcImJyXCIgfHwgdGFnID09IFwiaHJcIiApIHtcbiAgICByZXR1cm4gXCI8XCIrIHRhZyArIHRhZ19hdHRycyArIFwiLz5cIjtcbiAgfVxuICBlbHNlIHtcbiAgICByZXR1cm4gXCI8XCIrIHRhZyArIHRhZ19hdHRycyArIFwiPlwiICsgY29udGVudC5qb2luKCBcIlwiICkgKyBcIjwvXCIgKyB0YWcgKyBcIj5cIjtcbiAgfVxufVxuXG5mdW5jdGlvbiBjb252ZXJ0X3RyZWVfdG9faHRtbCggdHJlZSwgcmVmZXJlbmNlcywgb3B0aW9ucyApIHtcbiAgdmFyIGk7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuXG4gIC8vIHNoYWxsb3cgY2xvbmVcbiAgdmFyIGpzb25tbCA9IHRyZWUuc2xpY2UoIDAgKTtcblxuICBpZiAoIHR5cGVvZiBvcHRpb25zLnByZXByb2Nlc3NUcmVlTm9kZSA9PT0gXCJmdW5jdGlvblwiICkge1xuICAgICAganNvbm1sID0gb3B0aW9ucy5wcmVwcm9jZXNzVHJlZU5vZGUoanNvbm1sLCByZWZlcmVuY2VzKTtcbiAgfVxuXG4gIC8vIENsb25lIGF0dHJpYnV0ZXMgaWYgdGhleSBleGlzdFxuICB2YXIgYXR0cnMgPSBleHRyYWN0X2F0dHIoIGpzb25tbCApO1xuICBpZiAoIGF0dHJzICkge1xuICAgIGpzb25tbFsgMSBdID0ge307XG4gICAgZm9yICggaSBpbiBhdHRycyApIHtcbiAgICAgIGpzb25tbFsgMSBdWyBpIF0gPSBhdHRyc1sgaSBdO1xuICAgIH1cbiAgICBhdHRycyA9IGpzb25tbFsgMSBdO1xuICB9XG5cbiAgLy8gYmFzaWMgY2FzZVxuICBpZiAoIHR5cGVvZiBqc29ubWwgPT09IFwic3RyaW5nXCIgKSB7XG4gICAgcmV0dXJuIGpzb25tbDtcbiAgfVxuXG4gIC8vIGNvbnZlcnQgdGhpcyBub2RlXG4gIHN3aXRjaCAoIGpzb25tbFsgMCBdICkge1xuICAgIGNhc2UgXCJoZWFkZXJcIjpcbiAgICAgIGpzb25tbFsgMCBdID0gXCJoXCIgKyBqc29ubWxbIDEgXS5sZXZlbDtcbiAgICAgIGRlbGV0ZSBqc29ubWxbIDEgXS5sZXZlbDtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgXCJidWxsZXRsaXN0XCI6XG4gICAgICBqc29ubWxbIDAgXSA9IFwidWxcIjtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgXCJudW1iZXJsaXN0XCI6XG4gICAgICBqc29ubWxbIDAgXSA9IFwib2xcIjtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgXCJsaXN0aXRlbVwiOlxuICAgICAganNvbm1sWyAwIF0gPSBcImxpXCI7XG4gICAgICBicmVhaztcbiAgICBjYXNlIFwicGFyYVwiOlxuICAgICAganNvbm1sWyAwIF0gPSBcInBcIjtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgXCJtYXJrZG93blwiOlxuICAgICAganNvbm1sWyAwIF0gPSBcImh0bWxcIjtcbiAgICAgIGlmICggYXR0cnMgKSBkZWxldGUgYXR0cnMucmVmZXJlbmNlcztcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgXCJjb2RlX2Jsb2NrXCI6XG4gICAgICBqc29ubWxbIDAgXSA9IFwicHJlXCI7XG4gICAgICBpID0gYXR0cnMgPyAyIDogMTtcbiAgICAgIHZhciBjb2RlID0gWyBcImNvZGVcIiBdO1xuICAgICAgY29kZS5wdXNoLmFwcGx5KCBjb2RlLCBqc29ubWwuc3BsaWNlKCBpLCBqc29ubWwubGVuZ3RoIC0gaSApICk7XG4gICAgICBqc29ubWxbIGkgXSA9IGNvZGU7XG4gICAgICBicmVhaztcbiAgICBjYXNlIFwiaW5saW5lY29kZVwiOlxuICAgICAganNvbm1sWyAwIF0gPSBcImNvZGVcIjtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgXCJpbWdcIjpcbiAgICAgIGpzb25tbFsgMSBdLnNyYyA9IGpzb25tbFsgMSBdLmhyZWY7XG4gICAgICBkZWxldGUganNvbm1sWyAxIF0uaHJlZjtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgXCJsaW5lYnJlYWtcIjpcbiAgICAgIGpzb25tbFsgMCBdID0gXCJiclwiO1xuICAgIGJyZWFrO1xuICAgIGNhc2UgXCJsaW5rXCI6XG4gICAgICBqc29ubWxbIDAgXSA9IFwiYVwiO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSBcImxpbmtfcmVmXCI6XG4gICAgICBqc29ubWxbIDAgXSA9IFwiYVwiO1xuXG4gICAgICAvLyBncmFiIHRoaXMgcmVmIGFuZCBjbGVhbiB1cCB0aGUgYXR0cmlidXRlIG5vZGVcbiAgICAgIHZhciByZWYgPSByZWZlcmVuY2VzWyBhdHRycy5yZWYgXTtcblxuICAgICAgLy8gaWYgdGhlIHJlZmVyZW5jZSBleGlzdHMsIG1ha2UgdGhlIGxpbmtcbiAgICAgIGlmICggcmVmICkge1xuICAgICAgICBkZWxldGUgYXR0cnMucmVmO1xuXG4gICAgICAgIC8vIGFkZCBpbiB0aGUgaHJlZiBhbmQgdGl0bGUsIGlmIHByZXNlbnRcbiAgICAgICAgYXR0cnMuaHJlZiA9IHJlZi5ocmVmO1xuICAgICAgICBpZiAoIHJlZi50aXRsZSApIHtcbiAgICAgICAgICBhdHRycy50aXRsZSA9IHJlZi50aXRsZTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGdldCByaWQgb2YgdGhlIHVubmVlZGVkIG9yaWdpbmFsIHRleHRcbiAgICAgICAgZGVsZXRlIGF0dHJzLm9yaWdpbmFsO1xuICAgICAgfVxuICAgICAgLy8gdGhlIHJlZmVyZW5jZSBkb2Vzbid0IGV4aXN0LCBzbyByZXZlcnQgdG8gcGxhaW4gdGV4dFxuICAgICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBhdHRycy5vcmlnaW5hbDtcbiAgICAgIH1cbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgXCJpbWdfcmVmXCI6XG4gICAgICBqc29ubWxbIDAgXSA9IFwiaW1nXCI7XG5cbiAgICAgIC8vIGdyYWIgdGhpcyByZWYgYW5kIGNsZWFuIHVwIHRoZSBhdHRyaWJ1dGUgbm9kZVxuICAgICAgdmFyIHJlZiA9IHJlZmVyZW5jZXNbIGF0dHJzLnJlZiBdO1xuXG4gICAgICAvLyBpZiB0aGUgcmVmZXJlbmNlIGV4aXN0cywgbWFrZSB0aGUgbGlua1xuICAgICAgaWYgKCByZWYgKSB7XG4gICAgICAgIGRlbGV0ZSBhdHRycy5yZWY7XG5cbiAgICAgICAgLy8gYWRkIGluIHRoZSBocmVmIGFuZCB0aXRsZSwgaWYgcHJlc2VudFxuICAgICAgICBhdHRycy5zcmMgPSByZWYuaHJlZjtcbiAgICAgICAgaWYgKCByZWYudGl0bGUgKSB7XG4gICAgICAgICAgYXR0cnMudGl0bGUgPSByZWYudGl0bGU7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBnZXQgcmlkIG9mIHRoZSB1bm5lZWRlZCBvcmlnaW5hbCB0ZXh0XG4gICAgICAgIGRlbGV0ZSBhdHRycy5vcmlnaW5hbDtcbiAgICAgIH1cbiAgICAgIC8vIHRoZSByZWZlcmVuY2UgZG9lc24ndCBleGlzdCwgc28gcmV2ZXJ0IHRvIHBsYWluIHRleHRcbiAgICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gYXR0cnMub3JpZ2luYWw7XG4gICAgICB9XG4gICAgICBicmVhaztcbiAgfVxuXG4gIC8vIGNvbnZlcnQgYWxsIHRoZSBjaGlsZHJlblxuICBpID0gMTtcblxuICAvLyBkZWFsIHdpdGggdGhlIGF0dHJpYnV0ZSBub2RlLCBpZiBpdCBleGlzdHNcbiAgaWYgKCBhdHRycyApIHtcbiAgICAvLyBpZiB0aGVyZSBhcmUga2V5cywgc2tpcCBvdmVyIGl0XG4gICAgZm9yICggdmFyIGtleSBpbiBqc29ubWxbIDEgXSApIHtcbiAgICAgICAgaSA9IDI7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgICAvLyBpZiB0aGVyZSBhcmVuJ3QsIHJlbW92ZSBpdFxuICAgIGlmICggaSA9PT0gMSApIHtcbiAgICAgIGpzb25tbC5zcGxpY2UoIGksIDEgKTtcbiAgICB9XG4gIH1cblxuICBmb3IgKCA7IGkgPCBqc29ubWwubGVuZ3RoOyArK2kgKSB7XG4gICAganNvbm1sWyBpIF0gPSBjb252ZXJ0X3RyZWVfdG9faHRtbCgganNvbm1sWyBpIF0sIHJlZmVyZW5jZXMsIG9wdGlvbnMgKTtcbiAgfVxuXG4gIHJldHVybiBqc29ubWw7XG59XG5cblxuLy8gbWVyZ2VzIGFkamFjZW50IHRleHQgbm9kZXMgaW50byBhIHNpbmdsZSBub2RlXG5mdW5jdGlvbiBtZXJnZV90ZXh0X25vZGVzKCBqc29ubWwgKSB7XG4gIC8vIHNraXAgdGhlIHRhZyBuYW1lIGFuZCBhdHRyaWJ1dGUgaGFzaFxuICB2YXIgaSA9IGV4dHJhY3RfYXR0cigganNvbm1sICkgPyAyIDogMTtcblxuICB3aGlsZSAoIGkgPCBqc29ubWwubGVuZ3RoICkge1xuICAgIC8vIGlmIGl0J3MgYSBzdHJpbmcgY2hlY2sgdGhlIG5leHQgaXRlbSB0b29cbiAgICBpZiAoIHR5cGVvZiBqc29ubWxbIGkgXSA9PT0gXCJzdHJpbmdcIiApIHtcbiAgICAgIGlmICggaSArIDEgPCBqc29ubWwubGVuZ3RoICYmIHR5cGVvZiBqc29ubWxbIGkgKyAxIF0gPT09IFwic3RyaW5nXCIgKSB7XG4gICAgICAgIC8vIG1lcmdlIHRoZSBzZWNvbmQgc3RyaW5nIGludG8gdGhlIGZpcnN0IGFuZCByZW1vdmUgaXRcbiAgICAgICAganNvbm1sWyBpIF0gKz0ganNvbm1sLnNwbGljZSggaSArIDEsIDEgKVsgMCBdO1xuICAgICAgfVxuICAgICAgZWxzZSB7XG4gICAgICAgICsraTtcbiAgICAgIH1cbiAgICB9XG4gICAgLy8gaWYgaXQncyBub3QgYSBzdHJpbmcgcmVjdXJzZVxuICAgIGVsc2Uge1xuICAgICAgbWVyZ2VfdGV4dF9ub2RlcygganNvbm1sWyBpIF0gKTtcbiAgICAgICsraTtcbiAgICB9XG4gIH1cbn1cblxufSApKCAoZnVuY3Rpb24oKSB7XG4gIGlmICggdHlwZW9mIGV4cG9ydHMgPT09IFwidW5kZWZpbmVkXCIgKSB7XG4gICAgd2luZG93Lm1hcmtkb3duID0ge307XG4gICAgcmV0dXJuIHdpbmRvdy5tYXJrZG93bjtcbiAgfVxuICBlbHNlIHtcbiAgICByZXR1cm4gZXhwb3J0cztcbiAgfVxufSApKCkgKTtcbiIsIi8qXG5vYmplY3QtYXNzaWduXG4oYykgU2luZHJlIFNvcmh1c1xuQGxpY2Vuc2UgTUlUXG4qL1xuXG4ndXNlIHN0cmljdCc7XG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIHByb3BJc0VudW1lcmFibGUgPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuXG5mdW5jdGlvbiB0b09iamVjdCh2YWwpIHtcblx0aWYgKHZhbCA9PT0gbnVsbCB8fCB2YWwgPT09IHVuZGVmaW5lZCkge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ09iamVjdC5hc3NpZ24gY2Fubm90IGJlIGNhbGxlZCB3aXRoIG51bGwgb3IgdW5kZWZpbmVkJyk7XG5cdH1cblxuXHRyZXR1cm4gT2JqZWN0KHZhbCk7XG59XG5cbmZ1bmN0aW9uIHNob3VsZFVzZU5hdGl2ZSgpIHtcblx0dHJ5IHtcblx0XHRpZiAoIU9iamVjdC5hc3NpZ24pIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBEZXRlY3QgYnVnZ3kgcHJvcGVydHkgZW51bWVyYXRpb24gb3JkZXIgaW4gb2xkZXIgVjggdmVyc2lvbnMuXG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD00MTE4XG5cdFx0dmFyIHRlc3QxID0gbmV3IFN0cmluZygnYWJjJyk7ICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ldy13cmFwcGVyc1xuXHRcdHRlc3QxWzVdID0gJ2RlJztcblx0XHRpZiAoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDEpWzBdID09PSAnNScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QyID0ge307XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCAxMDsgaSsrKSB7XG5cdFx0XHR0ZXN0MlsnXycgKyBTdHJpbmcuZnJvbUNoYXJDb2RlKGkpXSA9IGk7XG5cdFx0fVxuXHRcdHZhciBvcmRlcjIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MikubWFwKGZ1bmN0aW9uIChuKSB7XG5cdFx0XHRyZXR1cm4gdGVzdDJbbl07XG5cdFx0fSk7XG5cdFx0aWYgKG9yZGVyMi5qb2luKCcnKSAhPT0gJzAxMjM0NTY3ODknKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MyA9IHt9O1xuXHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcuc3BsaXQoJycpLmZvckVhY2goZnVuY3Rpb24gKGxldHRlcikge1xuXHRcdFx0dGVzdDNbbGV0dGVyXSA9IGxldHRlcjtcblx0XHR9KTtcblx0XHRpZiAoT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSwgdGVzdDMpKS5qb2luKCcnKSAhPT1cblx0XHRcdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdHJldHVybiB0cnVlO1xuXHR9IGNhdGNoIChlcnIpIHtcblx0XHQvLyBXZSBkb24ndCBleHBlY3QgYW55IG9mIHRoZSBhYm92ZSB0byB0aHJvdywgYnV0IGJldHRlciB0byBiZSBzYWZlLlxuXHRcdHJldHVybiBmYWxzZTtcblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNob3VsZFVzZU5hdGl2ZSgpID8gT2JqZWN0LmFzc2lnbiA6IGZ1bmN0aW9uICh0YXJnZXQsIHNvdXJjZSkge1xuXHR2YXIgZnJvbTtcblx0dmFyIHRvID0gdG9PYmplY3QodGFyZ2V0KTtcblx0dmFyIHN5bWJvbHM7XG5cblx0Zm9yICh2YXIgcyA9IDE7IHMgPCBhcmd1bWVudHMubGVuZ3RoOyBzKyspIHtcblx0XHRmcm9tID0gT2JqZWN0KGFyZ3VtZW50c1tzXSk7XG5cblx0XHRmb3IgKHZhciBrZXkgaW4gZnJvbSkge1xuXHRcdFx0aWYgKGhhc093blByb3BlcnR5LmNhbGwoZnJvbSwga2V5KSkge1xuXHRcdFx0XHR0b1trZXldID0gZnJvbVtrZXldO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcblx0XHRcdHN5bWJvbHMgPSBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZnJvbSk7XG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN5bWJvbHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0aWYgKHByb3BJc0VudW1lcmFibGUuY2FsbChmcm9tLCBzeW1ib2xzW2ldKSkge1xuXHRcdFx0XHRcdHRvW3N5bWJvbHNbaV1dID0gZnJvbVtzeW1ib2xzW2ldXTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiB0bztcbn07XG4iLCIvLyBzaGltIGZvciB1c2luZyBwcm9jZXNzIGluIGJyb3dzZXJcbnZhciBwcm9jZXNzID0gbW9kdWxlLmV4cG9ydHMgPSB7fTtcblxuLy8gY2FjaGVkIGZyb20gd2hhdGV2ZXIgZ2xvYmFsIGlzIHByZXNlbnQgc28gdGhhdCB0ZXN0IHJ1bm5lcnMgdGhhdCBzdHViIGl0XG4vLyBkb24ndCBicmVhayB0aGluZ3MuICBCdXQgd2UgbmVlZCB0byB3cmFwIGl0IGluIGEgdHJ5IGNhdGNoIGluIGNhc2UgaXQgaXNcbi8vIHdyYXBwZWQgaW4gc3RyaWN0IG1vZGUgY29kZSB3aGljaCBkb2Vzbid0IGRlZmluZSBhbnkgZ2xvYmFscy4gIEl0J3MgaW5zaWRlIGFcbi8vIGZ1bmN0aW9uIGJlY2F1c2UgdHJ5L2NhdGNoZXMgZGVvcHRpbWl6ZSBpbiBjZXJ0YWluIGVuZ2luZXMuXG5cbnZhciBjYWNoZWRTZXRUaW1lb3V0O1xudmFyIGNhY2hlZENsZWFyVGltZW91dDtcblxuZnVuY3Rpb24gZGVmYXVsdFNldFRpbW91dCgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3NldFRpbWVvdXQgaGFzIG5vdCBiZWVuIGRlZmluZWQnKTtcbn1cbmZ1bmN0aW9uIGRlZmF1bHRDbGVhclRpbWVvdXQgKCkge1xuICAgIHRocm93IG5ldyBFcnJvcignY2xlYXJUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkJyk7XG59XG4oZnVuY3Rpb24gKCkge1xuICAgIHRyeSB7XG4gICAgICAgIGlmICh0eXBlb2Ygc2V0VGltZW91dCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IHNldFRpbWVvdXQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gZGVmYXVsdFNldFRpbW91dDtcbiAgICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IGRlZmF1bHRTZXRUaW1vdXQ7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIGlmICh0eXBlb2YgY2xlYXJUaW1lb3V0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBjbGVhclRpbWVvdXQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBkZWZhdWx0Q2xlYXJUaW1lb3V0O1xuICAgICAgICB9XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBkZWZhdWx0Q2xlYXJUaW1lb3V0O1xuICAgIH1cbn0gKCkpXG5mdW5jdGlvbiBydW5UaW1lb3V0KGZ1bikge1xuICAgIGlmIChjYWNoZWRTZXRUaW1lb3V0ID09PSBzZXRUaW1lb3V0KSB7XG4gICAgICAgIC8vbm9ybWFsIGVudmlyb21lbnRzIGluIHNhbmUgc2l0dWF0aW9uc1xuICAgICAgICByZXR1cm4gc2V0VGltZW91dChmdW4sIDApO1xuICAgIH1cbiAgICAvLyBpZiBzZXRUaW1lb3V0IHdhc24ndCBhdmFpbGFibGUgYnV0IHdhcyBsYXR0ZXIgZGVmaW5lZFxuICAgIGlmICgoY2FjaGVkU2V0VGltZW91dCA9PT0gZGVmYXVsdFNldFRpbW91dCB8fCAhY2FjaGVkU2V0VGltZW91dCkgJiYgc2V0VGltZW91dCkge1xuICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gc2V0VGltZW91dDtcbiAgICAgICAgcmV0dXJuIHNldFRpbWVvdXQoZnVuLCAwKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgLy8gd2hlbiB3aGVuIHNvbWVib2R5IGhhcyBzY3Jld2VkIHdpdGggc2V0VGltZW91dCBidXQgbm8gSS5FLiBtYWRkbmVzc1xuICAgICAgICByZXR1cm4gY2FjaGVkU2V0VGltZW91dChmdW4sIDApO1xuICAgIH0gY2F0Y2goZSl7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBXaGVuIHdlIGFyZSBpbiBJLkUuIGJ1dCB0aGUgc2NyaXB0IGhhcyBiZWVuIGV2YWxlZCBzbyBJLkUuIGRvZXNuJ3QgdHJ1c3QgdGhlIGdsb2JhbCBvYmplY3Qgd2hlbiBjYWxsZWQgbm9ybWFsbHlcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRTZXRUaW1lb3V0LmNhbGwobnVsbCwgZnVuLCAwKTtcbiAgICAgICAgfSBjYXRjaChlKXtcbiAgICAgICAgICAgIC8vIHNhbWUgYXMgYWJvdmUgYnV0IHdoZW4gaXQncyBhIHZlcnNpb24gb2YgSS5FLiB0aGF0IG11c3QgaGF2ZSB0aGUgZ2xvYmFsIG9iamVjdCBmb3IgJ3RoaXMnLCBob3BmdWxseSBvdXIgY29udGV4dCBjb3JyZWN0IG90aGVyd2lzZSBpdCB3aWxsIHRocm93IGEgZ2xvYmFsIGVycm9yXG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkU2V0VGltZW91dC5jYWxsKHRoaXMsIGZ1biwgMCk7XG4gICAgICAgIH1cbiAgICB9XG5cblxufVxuZnVuY3Rpb24gcnVuQ2xlYXJUaW1lb3V0KG1hcmtlcikge1xuICAgIGlmIChjYWNoZWRDbGVhclRpbWVvdXQgPT09IGNsZWFyVGltZW91dCkge1xuICAgICAgICAvL25vcm1hbCBlbnZpcm9tZW50cyBpbiBzYW5lIHNpdHVhdGlvbnNcbiAgICAgICAgcmV0dXJuIGNsZWFyVGltZW91dChtYXJrZXIpO1xuICAgIH1cbiAgICAvLyBpZiBjbGVhclRpbWVvdXQgd2Fzbid0IGF2YWlsYWJsZSBidXQgd2FzIGxhdHRlciBkZWZpbmVkXG4gICAgaWYgKChjYWNoZWRDbGVhclRpbWVvdXQgPT09IGRlZmF1bHRDbGVhclRpbWVvdXQgfHwgIWNhY2hlZENsZWFyVGltZW91dCkgJiYgY2xlYXJUaW1lb3V0KSB7XG4gICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGNsZWFyVGltZW91dDtcbiAgICAgICAgcmV0dXJuIGNsZWFyVGltZW91dChtYXJrZXIpO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICAvLyB3aGVuIHdoZW4gc29tZWJvZHkgaGFzIHNjcmV3ZWQgd2l0aCBzZXRUaW1lb3V0IGJ1dCBubyBJLkUuIG1hZGRuZXNzXG4gICAgICAgIHJldHVybiBjYWNoZWRDbGVhclRpbWVvdXQobWFya2VyKTtcbiAgICB9IGNhdGNoIChlKXtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIFdoZW4gd2UgYXJlIGluIEkuRS4gYnV0IHRoZSBzY3JpcHQgaGFzIGJlZW4gZXZhbGVkIHNvIEkuRS4gZG9lc24ndCAgdHJ1c3QgdGhlIGdsb2JhbCBvYmplY3Qgd2hlbiBjYWxsZWQgbm9ybWFsbHlcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRDbGVhclRpbWVvdXQuY2FsbChudWxsLCBtYXJrZXIpO1xuICAgICAgICB9IGNhdGNoIChlKXtcbiAgICAgICAgICAgIC8vIHNhbWUgYXMgYWJvdmUgYnV0IHdoZW4gaXQncyBhIHZlcnNpb24gb2YgSS5FLiB0aGF0IG11c3QgaGF2ZSB0aGUgZ2xvYmFsIG9iamVjdCBmb3IgJ3RoaXMnLCBob3BmdWxseSBvdXIgY29udGV4dCBjb3JyZWN0IG90aGVyd2lzZSBpdCB3aWxsIHRocm93IGEgZ2xvYmFsIGVycm9yLlxuICAgICAgICAgICAgLy8gU29tZSB2ZXJzaW9ucyBvZiBJLkUuIGhhdmUgZGlmZmVyZW50IHJ1bGVzIGZvciBjbGVhclRpbWVvdXQgdnMgc2V0VGltZW91dFxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZENsZWFyVGltZW91dC5jYWxsKHRoaXMsIG1hcmtlcik7XG4gICAgICAgIH1cbiAgICB9XG5cblxuXG59XG52YXIgcXVldWUgPSBbXTtcbnZhciBkcmFpbmluZyA9IGZhbHNlO1xudmFyIGN1cnJlbnRRdWV1ZTtcbnZhciBxdWV1ZUluZGV4ID0gLTE7XG5cbmZ1bmN0aW9uIGNsZWFuVXBOZXh0VGljaygpIHtcbiAgICBpZiAoIWRyYWluaW5nIHx8ICFjdXJyZW50UXVldWUpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBkcmFpbmluZyA9IGZhbHNlO1xuICAgIGlmIChjdXJyZW50UXVldWUubGVuZ3RoKSB7XG4gICAgICAgIHF1ZXVlID0gY3VycmVudFF1ZXVlLmNvbmNhdChxdWV1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcXVldWVJbmRleCA9IC0xO1xuICAgIH1cbiAgICBpZiAocXVldWUubGVuZ3RoKSB7XG4gICAgICAgIGRyYWluUXVldWUoKTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGRyYWluUXVldWUoKSB7XG4gICAgaWYgKGRyYWluaW5nKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIHRpbWVvdXQgPSBydW5UaW1lb3V0KGNsZWFuVXBOZXh0VGljayk7XG4gICAgZHJhaW5pbmcgPSB0cnVlO1xuXG4gICAgdmFyIGxlbiA9IHF1ZXVlLmxlbmd0aDtcbiAgICB3aGlsZShsZW4pIHtcbiAgICAgICAgY3VycmVudFF1ZXVlID0gcXVldWU7XG4gICAgICAgIHF1ZXVlID0gW107XG4gICAgICAgIHdoaWxlICgrK3F1ZXVlSW5kZXggPCBsZW4pIHtcbiAgICAgICAgICAgIGlmIChjdXJyZW50UXVldWUpIHtcbiAgICAgICAgICAgICAgICBjdXJyZW50UXVldWVbcXVldWVJbmRleF0ucnVuKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcXVldWVJbmRleCA9IC0xO1xuICAgICAgICBsZW4gPSBxdWV1ZS5sZW5ndGg7XG4gICAgfVxuICAgIGN1cnJlbnRRdWV1ZSA9IG51bGw7XG4gICAgZHJhaW5pbmcgPSBmYWxzZTtcbiAgICBydW5DbGVhclRpbWVvdXQodGltZW91dCk7XG59XG5cbnByb2Nlc3MubmV4dFRpY2sgPSBmdW5jdGlvbiAoZnVuKSB7XG4gICAgdmFyIGFyZ3MgPSBuZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aCAtIDEpO1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID4gMSkge1xuICAgICAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgYXJnc1tpIC0gMV0gPSBhcmd1bWVudHNbaV07XG4gICAgICAgIH1cbiAgICB9XG4gICAgcXVldWUucHVzaChuZXcgSXRlbShmdW4sIGFyZ3MpKTtcbiAgICBpZiAocXVldWUubGVuZ3RoID09PSAxICYmICFkcmFpbmluZykge1xuICAgICAgICBydW5UaW1lb3V0KGRyYWluUXVldWUpO1xuICAgIH1cbn07XG5cbi8vIHY4IGxpa2VzIHByZWRpY3RpYmxlIG9iamVjdHNcbmZ1bmN0aW9uIEl0ZW0oZnVuLCBhcnJheSkge1xuICAgIHRoaXMuZnVuID0gZnVuO1xuICAgIHRoaXMuYXJyYXkgPSBhcnJheTtcbn1cbkl0ZW0ucHJvdG90eXBlLnJ1biA9IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLmZ1bi5hcHBseShudWxsLCB0aGlzLmFycmF5KTtcbn07XG5wcm9jZXNzLnRpdGxlID0gJ2Jyb3dzZXInO1xucHJvY2Vzcy5icm93c2VyID0gdHJ1ZTtcbnByb2Nlc3MuZW52ID0ge307XG5wcm9jZXNzLmFyZ3YgPSBbXTtcbnByb2Nlc3MudmVyc2lvbiA9ICcnOyAvLyBlbXB0eSBzdHJpbmcgdG8gYXZvaWQgcmVnZXhwIGlzc3Vlc1xucHJvY2Vzcy52ZXJzaW9ucyA9IHt9O1xuXG5mdW5jdGlvbiBub29wKCkge31cblxucHJvY2Vzcy5vbiA9IG5vb3A7XG5wcm9jZXNzLmFkZExpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3Mub25jZSA9IG5vb3A7XG5wcm9jZXNzLm9mZiA9IG5vb3A7XG5wcm9jZXNzLnJlbW92ZUxpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3MucmVtb3ZlQWxsTGlzdGVuZXJzID0gbm9vcDtcbnByb2Nlc3MuZW1pdCA9IG5vb3A7XG5wcm9jZXNzLnByZXBlbmRMaXN0ZW5lciA9IG5vb3A7XG5wcm9jZXNzLnByZXBlbmRPbmNlTGlzdGVuZXIgPSBub29wO1xuXG5wcm9jZXNzLmxpc3RlbmVycyA9IGZ1bmN0aW9uIChuYW1lKSB7IHJldHVybiBbXSB9XG5cbnByb2Nlc3MuYmluZGluZyA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdwcm9jZXNzLmJpbmRpbmcgaXMgbm90IHN1cHBvcnRlZCcpO1xufTtcblxucHJvY2Vzcy5jd2QgPSBmdW5jdGlvbiAoKSB7IHJldHVybiAnLycgfTtcbnByb2Nlc3MuY2hkaXIgPSBmdW5jdGlvbiAoZGlyKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdwcm9jZXNzLmNoZGlyIGlzIG5vdCBzdXBwb3J0ZWQnKTtcbn07XG5wcm9jZXNzLnVtYXNrID0gZnVuY3Rpb24oKSB7IHJldHVybiAwOyB9O1xuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi4yLjBcbiAqIHJlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbi8qXG4gTW9kZXJuaXpyIDMuMC4wcHJlIChDdXN0b20gQnVpbGQpIHwgTUlUXG4qL1xuJ3VzZSBzdHJpY3QnO3ZhciBhYT1yZXF1aXJlKFwicmVhY3RcIiksbD1yZXF1aXJlKFwiZmJqcy9saWIvRXhlY3V0aW9uRW52aXJvbm1lbnRcIiksQj1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxDPXJlcXVpcmUoXCJmYmpzL2xpYi9lbXB0eUZ1bmN0aW9uXCIpLGJhPXJlcXVpcmUoXCJmYmpzL2xpYi9FdmVudExpc3RlbmVyXCIpLGRhPXJlcXVpcmUoXCJmYmpzL2xpYi9nZXRBY3RpdmVFbGVtZW50XCIpLGVhPXJlcXVpcmUoXCJmYmpzL2xpYi9zaGFsbG93RXF1YWxcIiksZmE9cmVxdWlyZShcImZianMvbGliL2NvbnRhaW5zTm9kZVwiKSxpYT1yZXF1aXJlKFwiZmJqcy9saWIvZm9jdXNOb2RlXCIpLEQ9cmVxdWlyZShcImZianMvbGliL2VtcHR5T2JqZWN0XCIpO1xuZnVuY3Rpb24gRShhKXtmb3IodmFyIGI9YXJndW1lbnRzLmxlbmd0aC0xLGM9XCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgaHR0cDovL2ZhY2Vib29rLmdpdGh1Yi5pby9yZWFjdC9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnRcXHgzZFwiK2EsZD0wO2Q8YjtkKyspYys9XCJcXHgyNmFyZ3NbXVxceDNkXCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tkKzFdKTtiPUVycm9yKGMrXCIgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwiKTtiLm5hbWU9XCJJbnZhcmlhbnQgVmlvbGF0aW9uXCI7Yi5mcmFtZXNUb1BvcD0xO3Rocm93IGI7fWFhP3ZvaWQgMDpFKFwiMjI3XCIpO1xudmFyIG9hPXtjaGlsZHJlbjohMCxkYW5nZXJvdXNseVNldElubmVySFRNTDohMCxkZWZhdWx0VmFsdWU6ITAsZGVmYXVsdENoZWNrZWQ6ITAsaW5uZXJIVE1MOiEwLHN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZzohMCxzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmc6ITAsc3R5bGU6ITB9O2Z1bmN0aW9uIHBhKGEsYil7cmV0dXJuKGEmYik9PT1ifVxudmFyIHRhPXtNVVNUX1VTRV9QUk9QRVJUWToxLEhBU19CT09MRUFOX1ZBTFVFOjQsSEFTX05VTUVSSUNfVkFMVUU6OCxIQVNfUE9TSVRJVkVfTlVNRVJJQ19WQUxVRToyNCxIQVNfT1ZFUkxPQURFRF9CT09MRUFOX1ZBTFVFOjMyLEhBU19TVFJJTkdfQk9PTEVBTl9WQUxVRTo2NCxpbmplY3RET01Qcm9wZXJ0eUNvbmZpZzpmdW5jdGlvbihhKXt2YXIgYj10YSxjPWEuUHJvcGVydGllc3x8e30sZD1hLkRPTUF0dHJpYnV0ZU5hbWVzcGFjZXN8fHt9LGU9YS5ET01BdHRyaWJ1dGVOYW1lc3x8e307YT1hLkRPTU11dGF0aW9uTWV0aG9kc3x8e307Zm9yKHZhciBmIGluIGMpe3VhLmhhc093blByb3BlcnR5KGYpP0UoXCI0OFwiLGYpOnZvaWQgMDt2YXIgZz1mLnRvTG93ZXJDYXNlKCksaD1jW2ZdO2c9e2F0dHJpYnV0ZU5hbWU6ZyxhdHRyaWJ1dGVOYW1lc3BhY2U6bnVsbCxwcm9wZXJ0eU5hbWU6ZixtdXRhdGlvbk1ldGhvZDpudWxsLG11c3RVc2VQcm9wZXJ0eTpwYShoLGIuTVVTVF9VU0VfUFJPUEVSVFkpLFxuaGFzQm9vbGVhblZhbHVlOnBhKGgsYi5IQVNfQk9PTEVBTl9WQUxVRSksaGFzTnVtZXJpY1ZhbHVlOnBhKGgsYi5IQVNfTlVNRVJJQ19WQUxVRSksaGFzUG9zaXRpdmVOdW1lcmljVmFsdWU6cGEoaCxiLkhBU19QT1NJVElWRV9OVU1FUklDX1ZBTFVFKSxoYXNPdmVybG9hZGVkQm9vbGVhblZhbHVlOnBhKGgsYi5IQVNfT1ZFUkxPQURFRF9CT09MRUFOX1ZBTFVFKSxoYXNTdHJpbmdCb29sZWFuVmFsdWU6cGEoaCxiLkhBU19TVFJJTkdfQk9PTEVBTl9WQUxVRSl9OzE+PWcuaGFzQm9vbGVhblZhbHVlK2cuaGFzTnVtZXJpY1ZhbHVlK2cuaGFzT3ZlcmxvYWRlZEJvb2xlYW5WYWx1ZT92b2lkIDA6RShcIjUwXCIsZik7ZS5oYXNPd25Qcm9wZXJ0eShmKSYmKGcuYXR0cmlidXRlTmFtZT1lW2ZdKTtkLmhhc093blByb3BlcnR5KGYpJiYoZy5hdHRyaWJ1dGVOYW1lc3BhY2U9ZFtmXSk7YS5oYXNPd25Qcm9wZXJ0eShmKSYmKGcubXV0YXRpb25NZXRob2Q9YVtmXSk7dWFbZl09Z319fSx1YT17fTtcbmZ1bmN0aW9uIHZhKGEsYil7aWYob2EuaGFzT3duUHJvcGVydHkoYSl8fDI8YS5sZW5ndGgmJihcIm9cIj09PWFbMF18fFwiT1wiPT09YVswXSkmJihcIm5cIj09PWFbMV18fFwiTlwiPT09YVsxXSkpcmV0dXJuITE7aWYobnVsbD09PWIpcmV0dXJuITA7c3dpdGNoKHR5cGVvZiBiKXtjYXNlIFwiYm9vbGVhblwiOnJldHVybiBvYS5oYXNPd25Qcm9wZXJ0eShhKT9hPSEwOihiPXdhKGEpKT9hPWIuaGFzQm9vbGVhblZhbHVlfHxiLmhhc1N0cmluZ0Jvb2xlYW5WYWx1ZXx8Yi5oYXNPdmVybG9hZGVkQm9vbGVhblZhbHVlOihhPWEudG9Mb3dlckNhc2UoKS5zbGljZSgwLDUpLGE9XCJkYXRhLVwiPT09YXx8XCJhcmlhLVwiPT09YSksYTtjYXNlIFwidW5kZWZpbmVkXCI6Y2FzZSBcIm51bWJlclwiOmNhc2UgXCJzdHJpbmdcIjpjYXNlIFwib2JqZWN0XCI6cmV0dXJuITA7ZGVmYXVsdDpyZXR1cm4hMX19ZnVuY3Rpb24gd2EoYSl7cmV0dXJuIHVhLmhhc093blByb3BlcnR5KGEpP3VhW2FdOm51bGx9XG52YXIgeGE9dGEseWE9eGEuTVVTVF9VU0VfUFJPUEVSVFksSz14YS5IQVNfQk9PTEVBTl9WQUxVRSx6YT14YS5IQVNfTlVNRVJJQ19WQUxVRSxBYT14YS5IQVNfUE9TSVRJVkVfTlVNRVJJQ19WQUxVRSxCYT14YS5IQVNfT1ZFUkxPQURFRF9CT09MRUFOX1ZBTFVFLENhPXhhLkhBU19TVFJJTkdfQk9PTEVBTl9WQUxVRSxEYT17UHJvcGVydGllczp7YWxsb3dGdWxsU2NyZWVuOkssYXN5bmM6SyxhdXRvRm9jdXM6SyxhdXRvUGxheTpLLGNhcHR1cmU6QmEsY2hlY2tlZDp5YXxLLGNvbHM6QWEsY29udGVudEVkaXRhYmxlOkNhLGNvbnRyb2xzOkssXCJkZWZhdWx0XCI6SyxkZWZlcjpLLGRpc2FibGVkOkssZG93bmxvYWQ6QmEsZHJhZ2dhYmxlOkNhLGZvcm1Ob1ZhbGlkYXRlOkssaGlkZGVuOkssbG9vcDpLLG11bHRpcGxlOnlhfEssbXV0ZWQ6eWF8Syxub1ZhbGlkYXRlOkssb3BlbjpLLHBsYXlzSW5saW5lOksscmVhZE9ubHk6SyxyZXF1aXJlZDpLLHJldmVyc2VkOksscm93czpBYSxyb3dTcGFuOnphLFxuc2NvcGVkOkssc2VhbWxlc3M6SyxzZWxlY3RlZDp5YXxLLHNpemU6QWEsc3RhcnQ6emEsc3BhbjpBYSxzcGVsbENoZWNrOkNhLHN0eWxlOjAsdGFiSW5kZXg6MCxpdGVtU2NvcGU6SyxhY2NlcHRDaGFyc2V0OjAsY2xhc3NOYW1lOjAsaHRtbEZvcjowLGh0dHBFcXVpdjowLHZhbHVlOkNhfSxET01BdHRyaWJ1dGVOYW1lczp7YWNjZXB0Q2hhcnNldDpcImFjY2VwdC1jaGFyc2V0XCIsY2xhc3NOYW1lOlwiY2xhc3NcIixodG1sRm9yOlwiZm9yXCIsaHR0cEVxdWl2OlwiaHR0cC1lcXVpdlwifSxET01NdXRhdGlvbk1ldGhvZHM6e3ZhbHVlOmZ1bmN0aW9uKGEsYil7aWYobnVsbD09YilyZXR1cm4gYS5yZW1vdmVBdHRyaWJ1dGUoXCJ2YWx1ZVwiKTtcIm51bWJlclwiIT09YS50eXBlfHwhMT09PWEuaGFzQXR0cmlidXRlKFwidmFsdWVcIik/YS5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLFwiXCIrYik6YS52YWxpZGl0eSYmIWEudmFsaWRpdHkuYmFkSW5wdXQmJmEub3duZXJEb2N1bWVudC5hY3RpdmVFbGVtZW50IT09YSYmXG5hLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsXCJcIitiKX19fSxFYT14YS5IQVNfU1RSSU5HX0JPT0xFQU5fVkFMVUUsTT17eGxpbms6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIseG1sOlwiaHR0cDovL3d3dy53My5vcmcvWE1MLzE5OTgvbmFtZXNwYWNlXCJ9LEdhPXtQcm9wZXJ0aWVzOnthdXRvUmV2ZXJzZTpFYSxleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkOkVhLHByZXNlcnZlQWxwaGE6RWF9LERPTUF0dHJpYnV0ZU5hbWVzOnthdXRvUmV2ZXJzZTpcImF1dG9SZXZlcnNlXCIsZXh0ZXJuYWxSZXNvdXJjZXNSZXF1aXJlZDpcImV4dGVybmFsUmVzb3VyY2VzUmVxdWlyZWRcIixwcmVzZXJ2ZUFscGhhOlwicHJlc2VydmVBbHBoYVwifSxET01BdHRyaWJ1dGVOYW1lc3BhY2VzOnt4bGlua0FjdHVhdGU6TS54bGluayx4bGlua0FyY3JvbGU6TS54bGluayx4bGlua0hyZWY6TS54bGluayx4bGlua1JvbGU6TS54bGluayx4bGlua1Nob3c6TS54bGluayx4bGlua1RpdGxlOk0ueGxpbmsseGxpbmtUeXBlOk0ueGxpbmssXG54bWxCYXNlOk0ueG1sLHhtbExhbmc6TS54bWwseG1sU3BhY2U6TS54bWx9fSxIYT0vW1xcLVxcOl0oW2Etel0pL2c7ZnVuY3Rpb24gSWEoYSl7cmV0dXJuIGFbMV0udG9VcHBlckNhc2UoKX1cblwiYWNjZW50LWhlaWdodCBhbGlnbm1lbnQtYmFzZWxpbmUgYXJhYmljLWZvcm0gYmFzZWxpbmUtc2hpZnQgY2FwLWhlaWdodCBjbGlwLXBhdGggY2xpcC1ydWxlIGNvbG9yLWludGVycG9sYXRpb24gY29sb3ItaW50ZXJwb2xhdGlvbi1maWx0ZXJzIGNvbG9yLXByb2ZpbGUgY29sb3ItcmVuZGVyaW5nIGRvbWluYW50LWJhc2VsaW5lIGVuYWJsZS1iYWNrZ3JvdW5kIGZpbGwtb3BhY2l0eSBmaWxsLXJ1bGUgZmxvb2QtY29sb3IgZmxvb2Qtb3BhY2l0eSBmb250LWZhbWlseSBmb250LXNpemUgZm9udC1zaXplLWFkanVzdCBmb250LXN0cmV0Y2ggZm9udC1zdHlsZSBmb250LXZhcmlhbnQgZm9udC13ZWlnaHQgZ2x5cGgtbmFtZSBnbHlwaC1vcmllbnRhdGlvbi1ob3Jpem9udGFsIGdseXBoLW9yaWVudGF0aW9uLXZlcnRpY2FsIGhvcml6LWFkdi14IGhvcml6LW9yaWdpbi14IGltYWdlLXJlbmRlcmluZyBsZXR0ZXItc3BhY2luZyBsaWdodGluZy1jb2xvciBtYXJrZXItZW5kIG1hcmtlci1taWQgbWFya2VyLXN0YXJ0IG92ZXJsaW5lLXBvc2l0aW9uIG92ZXJsaW5lLXRoaWNrbmVzcyBwYWludC1vcmRlciBwYW5vc2UtMSBwb2ludGVyLWV2ZW50cyByZW5kZXJpbmctaW50ZW50IHNoYXBlLXJlbmRlcmluZyBzdG9wLWNvbG9yIHN0b3Atb3BhY2l0eSBzdHJpa2V0aHJvdWdoLXBvc2l0aW9uIHN0cmlrZXRocm91Z2gtdGhpY2tuZXNzIHN0cm9rZS1kYXNoYXJyYXkgc3Ryb2tlLWRhc2hvZmZzZXQgc3Ryb2tlLWxpbmVjYXAgc3Ryb2tlLWxpbmVqb2luIHN0cm9rZS1taXRlcmxpbWl0IHN0cm9rZS1vcGFjaXR5IHN0cm9rZS13aWR0aCB0ZXh0LWFuY2hvciB0ZXh0LWRlY29yYXRpb24gdGV4dC1yZW5kZXJpbmcgdW5kZXJsaW5lLXBvc2l0aW9uIHVuZGVybGluZS10aGlja25lc3MgdW5pY29kZS1iaWRpIHVuaWNvZGUtcmFuZ2UgdW5pdHMtcGVyLWVtIHYtYWxwaGFiZXRpYyB2LWhhbmdpbmcgdi1pZGVvZ3JhcGhpYyB2LW1hdGhlbWF0aWNhbCB2ZWN0b3ItZWZmZWN0IHZlcnQtYWR2LXkgdmVydC1vcmlnaW4teCB2ZXJ0LW9yaWdpbi15IHdvcmQtc3BhY2luZyB3cml0aW5nLW1vZGUgeC1oZWlnaHQgeGxpbms6YWN0dWF0ZSB4bGluazphcmNyb2xlIHhsaW5rOmhyZWYgeGxpbms6cm9sZSB4bGluazpzaG93IHhsaW5rOnRpdGxlIHhsaW5rOnR5cGUgeG1sOmJhc2UgeG1sbnM6eGxpbmsgeG1sOmxhbmcgeG1sOnNwYWNlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKEhhLFxuSWEpO0dhLlByb3BlcnRpZXNbYl09MDtHYS5ET01BdHRyaWJ1dGVOYW1lc1tiXT1hfSk7eGEuaW5qZWN0RE9NUHJvcGVydHlDb25maWcoRGEpO3hhLmluamVjdERPTVByb3BlcnR5Q29uZmlnKEdhKTtcbnZhciBQPXtfY2F1Z2h0RXJyb3I6bnVsbCxfaGFzQ2F1Z2h0RXJyb3I6ITEsX3JldGhyb3dFcnJvcjpudWxsLF9oYXNSZXRocm93RXJyb3I6ITEsaW5qZWN0aW9uOntpbmplY3RFcnJvclV0aWxzOmZ1bmN0aW9uKGEpe1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBhLmludm9rZUd1YXJkZWRDYWxsYmFjaz9FKFwiMTk3XCIpOnZvaWQgMDtKYT1hLmludm9rZUd1YXJkZWRDYWxsYmFja319LGludm9rZUd1YXJkZWRDYWxsYmFjazpmdW5jdGlvbihhLGIsYyxkLGUsZixnLGgsayl7SmEuYXBwbHkoUCxhcmd1bWVudHMpfSxpbnZva2VHdWFyZGVkQ2FsbGJhY2tBbmRDYXRjaEZpcnN0RXJyb3I6ZnVuY3Rpb24oYSxiLGMsZCxlLGYsZyxoLGspe1AuaW52b2tlR3VhcmRlZENhbGxiYWNrLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtpZihQLmhhc0NhdWdodEVycm9yKCkpe3ZhciBxPVAuY2xlYXJDYXVnaHRFcnJvcigpO1AuX2hhc1JldGhyb3dFcnJvcnx8KFAuX2hhc1JldGhyb3dFcnJvcj0hMCxQLl9yZXRocm93RXJyb3I9XG5xKX19LHJldGhyb3dDYXVnaHRFcnJvcjpmdW5jdGlvbigpe3JldHVybiBLYS5hcHBseShQLGFyZ3VtZW50cyl9LGhhc0NhdWdodEVycm9yOmZ1bmN0aW9uKCl7cmV0dXJuIFAuX2hhc0NhdWdodEVycm9yfSxjbGVhckNhdWdodEVycm9yOmZ1bmN0aW9uKCl7aWYoUC5faGFzQ2F1Z2h0RXJyb3Ipe3ZhciBhPVAuX2NhdWdodEVycm9yO1AuX2NhdWdodEVycm9yPW51bGw7UC5faGFzQ2F1Z2h0RXJyb3I9ITE7cmV0dXJuIGF9RShcIjE5OFwiKX19O2Z1bmN0aW9uIEphKGEsYixjLGQsZSxmLGcsaCxrKXtQLl9oYXNDYXVnaHRFcnJvcj0hMTtQLl9jYXVnaHRFcnJvcj1udWxsO3ZhciBxPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywzKTt0cnl7Yi5hcHBseShjLHEpfWNhdGNoKHYpe1AuX2NhdWdodEVycm9yPXYsUC5faGFzQ2F1Z2h0RXJyb3I9ITB9fVxuZnVuY3Rpb24gS2EoKXtpZihQLl9oYXNSZXRocm93RXJyb3Ipe3ZhciBhPVAuX3JldGhyb3dFcnJvcjtQLl9yZXRocm93RXJyb3I9bnVsbDtQLl9oYXNSZXRocm93RXJyb3I9ITE7dGhyb3cgYTt9fXZhciBMYT1udWxsLE1hPXt9O1xuZnVuY3Rpb24gTmEoKXtpZihMYSlmb3IodmFyIGEgaW4gTWEpe3ZhciBiPU1hW2FdLGM9TGEuaW5kZXhPZihhKTstMTxjP3ZvaWQgMDpFKFwiOTZcIixhKTtpZighT2FbY10pe2IuZXh0cmFjdEV2ZW50cz92b2lkIDA6RShcIjk3XCIsYSk7T2FbY109YjtjPWIuZXZlbnRUeXBlcztmb3IodmFyIGQgaW4gYyl7dmFyIGU9dm9pZCAwO3ZhciBmPWNbZF0sZz1iLGg9ZDtQYS5oYXNPd25Qcm9wZXJ0eShoKT9FKFwiOTlcIixoKTp2b2lkIDA7UGFbaF09Zjt2YXIgaz1mLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzO2lmKGspe2ZvcihlIGluIGspay5oYXNPd25Qcm9wZXJ0eShlKSYmUWEoa1tlXSxnLGgpO2U9ITB9ZWxzZSBmLnJlZ2lzdHJhdGlvbk5hbWU/KFFhKGYucmVnaXN0cmF0aW9uTmFtZSxnLGgpLGU9ITApOmU9ITE7ZT92b2lkIDA6RShcIjk4XCIsZCxhKX19fX1cbmZ1bmN0aW9uIFFhKGEsYixjKXtSYVthXT9FKFwiMTAwXCIsYSk6dm9pZCAwO1JhW2FdPWI7U2FbYV09Yi5ldmVudFR5cGVzW2NdLmRlcGVuZGVuY2llc312YXIgT2E9W10sUGE9e30sUmE9e30sU2E9e307ZnVuY3Rpb24gVGEoYSl7TGE/RShcIjEwMVwiKTp2b2lkIDA7TGE9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYSk7TmEoKX1mdW5jdGlvbiBVYShhKXt2YXIgYj0hMSxjO2ZvcihjIGluIGEpaWYoYS5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9YVtjXTtNYS5oYXNPd25Qcm9wZXJ0eShjKSYmTWFbY109PT1kfHwoTWFbY10/RShcIjEwMlwiLGMpOnZvaWQgMCxNYVtjXT1kLGI9ITApfWImJk5hKCl9XG52YXIgVmE9T2JqZWN0LmZyZWV6ZSh7cGx1Z2luczpPYSxldmVudE5hbWVEaXNwYXRjaENvbmZpZ3M6UGEscmVnaXN0cmF0aW9uTmFtZU1vZHVsZXM6UmEscmVnaXN0cmF0aW9uTmFtZURlcGVuZGVuY2llczpTYSxwb3NzaWJsZVJlZ2lzdHJhdGlvbk5hbWVzOm51bGwsaW5qZWN0RXZlbnRQbHVnaW5PcmRlcjpUYSxpbmplY3RFdmVudFBsdWdpbnNCeU5hbWU6VWF9KSxXYT1udWxsLFhhPW51bGwsWWE9bnVsbDtmdW5jdGlvbiBaYShhLGIsYyxkKXtiPWEudHlwZXx8XCJ1bmtub3duLWV2ZW50XCI7YS5jdXJyZW50VGFyZ2V0PVlhKGQpO1AuaW52b2tlR3VhcmRlZENhbGxiYWNrQW5kQ2F0Y2hGaXJzdEVycm9yKGIsYyx2b2lkIDAsYSk7YS5jdXJyZW50VGFyZ2V0PW51bGx9XG5mdW5jdGlvbiAkYShhLGIpe251bGw9PWI/RShcIjMwXCIpOnZvaWQgMDtpZihudWxsPT1hKXJldHVybiBiO2lmKEFycmF5LmlzQXJyYXkoYSkpe2lmKEFycmF5LmlzQXJyYXkoYikpcmV0dXJuIGEucHVzaC5hcHBseShhLGIpLGE7YS5wdXNoKGIpO3JldHVybiBhfXJldHVybiBBcnJheS5pc0FycmF5KGIpP1thXS5jb25jYXQoYik6W2EsYl19ZnVuY3Rpb24gYWIoYSxiLGMpe0FycmF5LmlzQXJyYXkoYSk/YS5mb3JFYWNoKGIsYyk6YSYmYi5jYWxsKGMsYSl9dmFyIGJiPW51bGw7XG5mdW5jdGlvbiBjYihhLGIpe2lmKGEpe3ZhciBjPWEuX2Rpc3BhdGNoTGlzdGVuZXJzLGQ9YS5fZGlzcGF0Y2hJbnN0YW5jZXM7aWYoQXJyYXkuaXNBcnJheShjKSlmb3IodmFyIGU9MDtlPGMubGVuZ3RoJiYhYS5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpO2UrKylaYShhLGIsY1tlXSxkW2VdKTtlbHNlIGMmJlphKGEsYixjLGQpO2EuX2Rpc3BhdGNoTGlzdGVuZXJzPW51bGw7YS5fZGlzcGF0Y2hJbnN0YW5jZXM9bnVsbDthLmlzUGVyc2lzdGVudCgpfHxhLmNvbnN0cnVjdG9yLnJlbGVhc2UoYSl9fWZ1bmN0aW9uIGRiKGEpe3JldHVybiBjYihhLCEwKX1mdW5jdGlvbiBnYihhKXtyZXR1cm4gY2IoYSwhMSl9dmFyIGhiPXtpbmplY3RFdmVudFBsdWdpbk9yZGVyOlRhLGluamVjdEV2ZW50UGx1Z2luc0J5TmFtZTpVYX07XG5mdW5jdGlvbiBpYihhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO2lmKCFjKXJldHVybiBudWxsO3ZhciBkPVdhKGMpO2lmKCFkKXJldHVybiBudWxsO2M9ZFtiXTthOnN3aXRjaChiKXtjYXNlIFwib25DbGlja1wiOmNhc2UgXCJvbkNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbkRvdWJsZUNsaWNrXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VEb3duXCI6Y2FzZSBcIm9uTW91c2VEb3duQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlTW92ZVwiOmNhc2UgXCJvbk1vdXNlTW92ZUNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZVVwXCI6Y2FzZSBcIm9uTW91c2VVcENhcHR1cmVcIjooZD0hZC5kaXNhYmxlZCl8fChhPWEudHlwZSxkPSEoXCJidXR0b25cIj09PWF8fFwiaW5wdXRcIj09PWF8fFwic2VsZWN0XCI9PT1hfHxcInRleHRhcmVhXCI9PT1hKSk7YT0hZDticmVhayBhO2RlZmF1bHQ6YT0hMX1pZihhKXJldHVybiBudWxsO2MmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjP0UoXCIyMzFcIixiLHR5cGVvZiBjKTp2b2lkIDA7XG5yZXR1cm4gY31mdW5jdGlvbiBqYihhLGIsYyxkKXtmb3IodmFyIGUsZj0wO2Y8T2EubGVuZ3RoO2YrKyl7dmFyIGc9T2FbZl07ZyYmKGc9Zy5leHRyYWN0RXZlbnRzKGEsYixjLGQpKSYmKGU9JGEoZSxnKSl9cmV0dXJuIGV9ZnVuY3Rpb24ga2IoYSl7YSYmKGJiPSRhKGJiLGEpKX1mdW5jdGlvbiBsYihhKXt2YXIgYj1iYjtiYj1udWxsO2ImJihhP2FiKGIsZGIpOmFiKGIsZ2IpLGJiP0UoXCI5NVwiKTp2b2lkIDAsUC5yZXRocm93Q2F1Z2h0RXJyb3IoKSl9dmFyIG1iPU9iamVjdC5mcmVlemUoe2luamVjdGlvbjpoYixnZXRMaXN0ZW5lcjppYixleHRyYWN0RXZlbnRzOmpiLGVucXVldWVFdmVudHM6a2IscHJvY2Vzc0V2ZW50UXVldWU6bGJ9KSxuYj1NYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyKSxRPVwiX19yZWFjdEludGVybmFsSW5zdGFuY2UkXCIrbmIsb2I9XCJfX3JlYWN0RXZlbnRIYW5kbGVycyRcIituYjtcbmZ1bmN0aW9uIHBiKGEpe2lmKGFbUV0pcmV0dXJuIGFbUV07Zm9yKHZhciBiPVtdOyFhW1FdOylpZihiLnB1c2goYSksYS5wYXJlbnROb2RlKWE9YS5wYXJlbnROb2RlO2Vsc2UgcmV0dXJuIG51bGw7dmFyIGM9dm9pZCAwLGQ9YVtRXTtpZig1PT09ZC50YWd8fDY9PT1kLnRhZylyZXR1cm4gZDtmb3IoO2EmJihkPWFbUV0pO2E9Yi5wb3AoKSljPWQ7cmV0dXJuIGN9ZnVuY3Rpb24gcWIoYSl7aWYoNT09PWEudGFnfHw2PT09YS50YWcpcmV0dXJuIGEuc3RhdGVOb2RlO0UoXCIzM1wiKX1mdW5jdGlvbiByYihhKXtyZXR1cm4gYVtvYl18fG51bGx9XG52YXIgc2I9T2JqZWN0LmZyZWV6ZSh7cHJlY2FjaGVGaWJlck5vZGU6ZnVuY3Rpb24oYSxiKXtiW1FdPWF9LGdldENsb3Nlc3RJbnN0YW5jZUZyb21Ob2RlOnBiLGdldEluc3RhbmNlRnJvbU5vZGU6ZnVuY3Rpb24oYSl7YT1hW1FdO3JldHVybiFhfHw1IT09YS50YWcmJjYhPT1hLnRhZz9udWxsOmF9LGdldE5vZGVGcm9tSW5zdGFuY2U6cWIsZ2V0RmliZXJDdXJyZW50UHJvcHNGcm9tTm9kZTpyYix1cGRhdGVGaWJlclByb3BzOmZ1bmN0aW9uKGEsYil7YVtvYl09Yn19KTtmdW5jdGlvbiB0YihhKXtkbyBhPWFbXCJyZXR1cm5cIl07d2hpbGUoYSYmNSE9PWEudGFnKTtyZXR1cm4gYT9hOm51bGx9ZnVuY3Rpb24gdWIoYSxiLGMpe2Zvcih2YXIgZD1bXTthOylkLnB1c2goYSksYT10YihhKTtmb3IoYT1kLmxlbmd0aDswPGEtLTspYihkW2FdLFwiY2FwdHVyZWRcIixjKTtmb3IoYT0wO2E8ZC5sZW5ndGg7YSsrKWIoZFthXSxcImJ1YmJsZWRcIixjKX1cbmZ1bmN0aW9uIHZiKGEsYixjKXtpZihiPWliKGEsYy5kaXNwYXRjaENvbmZpZy5waGFzZWRSZWdpc3RyYXRpb25OYW1lc1tiXSkpYy5fZGlzcGF0Y2hMaXN0ZW5lcnM9JGEoYy5fZGlzcGF0Y2hMaXN0ZW5lcnMsYiksYy5fZGlzcGF0Y2hJbnN0YW5jZXM9JGEoYy5fZGlzcGF0Y2hJbnN0YW5jZXMsYSl9ZnVuY3Rpb24gd2IoYSl7YSYmYS5kaXNwYXRjaENvbmZpZy5waGFzZWRSZWdpc3RyYXRpb25OYW1lcyYmdWIoYS5fdGFyZ2V0SW5zdCx2YixhKX1mdW5jdGlvbiB4YihhKXtpZihhJiZhLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzKXt2YXIgYj1hLl90YXJnZXRJbnN0O2I9Yj90YihiKTpudWxsO3ViKGIsdmIsYSl9fVxuZnVuY3Rpb24geWIoYSxiLGMpe2EmJmMmJmMuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSYmKGI9aWIoYSxjLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUpKSYmKGMuX2Rpc3BhdGNoTGlzdGVuZXJzPSRhKGMuX2Rpc3BhdGNoTGlzdGVuZXJzLGIpLGMuX2Rpc3BhdGNoSW5zdGFuY2VzPSRhKGMuX2Rpc3BhdGNoSW5zdGFuY2VzLGEpKX1mdW5jdGlvbiB6YihhKXthJiZhLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUmJnliKGEuX3RhcmdldEluc3QsbnVsbCxhKX1mdW5jdGlvbiBBYihhKXthYihhLHdiKX1cbmZ1bmN0aW9uIEJiKGEsYixjLGQpe2lmKGMmJmQpYTp7dmFyIGU9Yztmb3IodmFyIGY9ZCxnPTAsaD1lO2g7aD10YihoKSlnKys7aD0wO2Zvcih2YXIgaz1mO2s7az10YihrKSloKys7Zm9yKDswPGctaDspZT10YihlKSxnLS07Zm9yKDswPGgtZzspZj10YihmKSxoLS07Zm9yKDtnLS07KXtpZihlPT09Znx8ZT09PWYuYWx0ZXJuYXRlKWJyZWFrIGE7ZT10YihlKTtmPXRiKGYpfWU9bnVsbH1lbHNlIGU9bnVsbDtmPWU7Zm9yKGU9W107YyYmYyE9PWY7KXtnPWMuYWx0ZXJuYXRlO2lmKG51bGwhPT1nJiZnPT09ZilicmVhaztlLnB1c2goYyk7Yz10YihjKX1mb3IoYz1bXTtkJiZkIT09Zjspe2c9ZC5hbHRlcm5hdGU7aWYobnVsbCE9PWcmJmc9PT1mKWJyZWFrO2MucHVzaChkKTtkPXRiKGQpfWZvcihkPTA7ZDxlLmxlbmd0aDtkKyspeWIoZVtkXSxcImJ1YmJsZWRcIixhKTtmb3IoYT1jLmxlbmd0aDswPGEtLTspeWIoY1thXSxcImNhcHR1cmVkXCIsYil9XG52YXIgQ2I9T2JqZWN0LmZyZWV6ZSh7YWNjdW11bGF0ZVR3b1BoYXNlRGlzcGF0Y2hlczpBYixhY2N1bXVsYXRlVHdvUGhhc2VEaXNwYXRjaGVzU2tpcFRhcmdldDpmdW5jdGlvbihhKXthYihhLHhiKX0sYWNjdW11bGF0ZUVudGVyTGVhdmVEaXNwYXRjaGVzOkJiLGFjY3VtdWxhdGVEaXJlY3REaXNwYXRjaGVzOmZ1bmN0aW9uKGEpe2FiKGEsemIpfX0pLERiPW51bGw7ZnVuY3Rpb24gRWIoKXshRGImJmwuY2FuVXNlRE9NJiYoRGI9XCJ0ZXh0Q29udGVudFwiaW4gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50P1widGV4dENvbnRlbnRcIjpcImlubmVyVGV4dFwiKTtyZXR1cm4gRGJ9dmFyIFM9e19yb290Om51bGwsX3N0YXJ0VGV4dDpudWxsLF9mYWxsYmFja1RleHQ6bnVsbH07XG5mdW5jdGlvbiBGYigpe2lmKFMuX2ZhbGxiYWNrVGV4dClyZXR1cm4gUy5fZmFsbGJhY2tUZXh0O3ZhciBhLGI9Uy5fc3RhcnRUZXh0LGM9Yi5sZW5ndGgsZCxlPUdiKCksZj1lLmxlbmd0aDtmb3IoYT0wO2E8YyYmYlthXT09PWVbYV07YSsrKTt2YXIgZz1jLWE7Zm9yKGQ9MTtkPD1nJiZiW2MtZF09PT1lW2YtZF07ZCsrKTtTLl9mYWxsYmFja1RleHQ9ZS5zbGljZShhLDE8ZD8xLWQ6dm9pZCAwKTtyZXR1cm4gUy5fZmFsbGJhY2tUZXh0fWZ1bmN0aW9uIEdiKCl7cmV0dXJuXCJ2YWx1ZVwiaW4gUy5fcm9vdD9TLl9yb290LnZhbHVlOlMuX3Jvb3RbRWIoKV19XG52YXIgSGI9XCJkaXNwYXRjaENvbmZpZyBfdGFyZ2V0SW5zdCBuYXRpdmVFdmVudCBpc0RlZmF1bHRQcmV2ZW50ZWQgaXNQcm9wYWdhdGlvblN0b3BwZWQgX2Rpc3BhdGNoTGlzdGVuZXJzIF9kaXNwYXRjaEluc3RhbmNlc1wiLnNwbGl0KFwiIFwiKSxJYj17dHlwZTpudWxsLHRhcmdldDpudWxsLGN1cnJlbnRUYXJnZXQ6Qy50aGF0UmV0dXJuc051bGwsZXZlbnRQaGFzZTpudWxsLGJ1YmJsZXM6bnVsbCxjYW5jZWxhYmxlOm51bGwsdGltZVN0YW1wOmZ1bmN0aW9uKGEpe3JldHVybiBhLnRpbWVTdGFtcHx8RGF0ZS5ub3coKX0sZGVmYXVsdFByZXZlbnRlZDpudWxsLGlzVHJ1c3RlZDpudWxsfTtcbmZ1bmN0aW9uIFQoYSxiLGMsZCl7dGhpcy5kaXNwYXRjaENvbmZpZz1hO3RoaXMuX3RhcmdldEluc3Q9Yjt0aGlzLm5hdGl2ZUV2ZW50PWM7YT10aGlzLmNvbnN0cnVjdG9yLkludGVyZmFjZTtmb3IodmFyIGUgaW4gYSlhLmhhc093blByb3BlcnR5KGUpJiYoKGI9YVtlXSk/dGhpc1tlXT1iKGMpOlwidGFyZ2V0XCI9PT1lP3RoaXMudGFyZ2V0PWQ6dGhpc1tlXT1jW2VdKTt0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD0obnVsbCE9Yy5kZWZhdWx0UHJldmVudGVkP2MuZGVmYXVsdFByZXZlbnRlZDohMT09PWMucmV0dXJuVmFsdWUpP0MudGhhdFJldHVybnNUcnVlOkMudGhhdFJldHVybnNGYWxzZTt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPUMudGhhdFJldHVybnNGYWxzZTtyZXR1cm4gdGhpc31cbkIoVC5wcm90b3R5cGUse3ByZXZlbnREZWZhdWx0OmZ1bmN0aW9uKCl7dGhpcy5kZWZhdWx0UHJldmVudGVkPSEwO3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEucHJldmVudERlZmF1bHQ/YS5wcmV2ZW50RGVmYXVsdCgpOlwidW5rbm93blwiIT09dHlwZW9mIGEucmV0dXJuVmFsdWUmJihhLnJldHVyblZhbHVlPSExKSx0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1DLnRoYXRSZXR1cm5zVHJ1ZSl9LHN0b3BQcm9wYWdhdGlvbjpmdW5jdGlvbigpe3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEuc3RvcFByb3BhZ2F0aW9uP2Euc3RvcFByb3BhZ2F0aW9uKCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5jYW5jZWxCdWJibGUmJihhLmNhbmNlbEJ1YmJsZT0hMCksdGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1DLnRoYXRSZXR1cm5zVHJ1ZSl9LHBlcnNpc3Q6ZnVuY3Rpb24oKXt0aGlzLmlzUGVyc2lzdGVudD1DLnRoYXRSZXR1cm5zVHJ1ZX0saXNQZXJzaXN0ZW50OkMudGhhdFJldHVybnNGYWxzZSxcbmRlc3RydWN0b3I6ZnVuY3Rpb24oKXt2YXIgYT10aGlzLmNvbnN0cnVjdG9yLkludGVyZmFjZSxiO2ZvcihiIGluIGEpdGhpc1tiXT1udWxsO2ZvcihhPTA7YTxIYi5sZW5ndGg7YSsrKXRoaXNbSGJbYV1dPW51bGx9fSk7VC5JbnRlcmZhY2U9SWI7VC5hdWdtZW50Q2xhc3M9ZnVuY3Rpb24oYSxiKXtmdW5jdGlvbiBjKCl7fWMucHJvdG90eXBlPXRoaXMucHJvdG90eXBlO3ZhciBkPW5ldyBjO0IoZCxhLnByb3RvdHlwZSk7YS5wcm90b3R5cGU9ZDthLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1hO2EuSW50ZXJmYWNlPUIoe30sdGhpcy5JbnRlcmZhY2UsYik7YS5hdWdtZW50Q2xhc3M9dGhpcy5hdWdtZW50Q2xhc3M7SmIoYSl9O0piKFQpO2Z1bmN0aW9uIEtiKGEsYixjLGQpe2lmKHRoaXMuZXZlbnRQb29sLmxlbmd0aCl7dmFyIGU9dGhpcy5ldmVudFBvb2wucG9wKCk7dGhpcy5jYWxsKGUsYSxiLGMsZCk7cmV0dXJuIGV9cmV0dXJuIG5ldyB0aGlzKGEsYixjLGQpfVxuZnVuY3Rpb24gTGIoYSl7YSBpbnN0YW5jZW9mIHRoaXM/dm9pZCAwOkUoXCIyMjNcIik7YS5kZXN0cnVjdG9yKCk7MTA+dGhpcy5ldmVudFBvb2wubGVuZ3RoJiZ0aGlzLmV2ZW50UG9vbC5wdXNoKGEpfWZ1bmN0aW9uIEpiKGEpe2EuZXZlbnRQb29sPVtdO2EuZ2V0UG9vbGVkPUtiO2EucmVsZWFzZT1MYn1mdW5jdGlvbiBNYihhLGIsYyxkKXtyZXR1cm4gVC5jYWxsKHRoaXMsYSxiLGMsZCl9VC5hdWdtZW50Q2xhc3MoTWIse2RhdGE6bnVsbH0pO2Z1bmN0aW9uIE5iKGEsYixjLGQpe3JldHVybiBULmNhbGwodGhpcyxhLGIsYyxkKX1ULmF1Z21lbnRDbGFzcyhOYix7ZGF0YTpudWxsfSk7dmFyIFBiPVs5LDEzLDI3LDMyXSxWYj1sLmNhblVzZURPTSYmXCJDb21wb3NpdGlvbkV2ZW50XCJpbiB3aW5kb3csV2I9bnVsbDtsLmNhblVzZURPTSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYoV2I9ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKTt2YXIgWGI7XG5pZihYYj1sLmNhblVzZURPTSYmXCJUZXh0RXZlbnRcImluIHdpbmRvdyYmIVdiKXt2YXIgWWI9d2luZG93Lm9wZXJhO1hiPSEoXCJvYmplY3RcIj09PXR5cGVvZiBZYiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIFliLnZlcnNpb24mJjEyPj1wYXJzZUludChZYi52ZXJzaW9uKCksMTApKX1cbnZhciBaYj1YYiwkYj1sLmNhblVzZURPTSYmKCFWYnx8V2ImJjg8V2ImJjExPj1XYiksYWM9U3RyaW5nLmZyb21DaGFyQ29kZSgzMiksYmM9e2JlZm9yZUlucHV0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQmVmb3JlSW5wdXRcIixjYXB0dXJlZDpcIm9uQmVmb3JlSW5wdXRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpbXCJ0b3BDb21wb3NpdGlvbkVuZFwiLFwidG9wS2V5UHJlc3NcIixcInRvcFRleHRJbnB1dFwiLFwidG9wUGFzdGVcIl19LGNvbXBvc2l0aW9uRW5kOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25FbmRcIixjYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25FbmRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcInRvcEJsdXIgdG9wQ29tcG9zaXRpb25FbmQgdG9wS2V5RG93biB0b3BLZXlQcmVzcyB0b3BLZXlVcCB0b3BNb3VzZURvd25cIi5zcGxpdChcIiBcIil9LGNvbXBvc2l0aW9uU3RhcnQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvblN0YXJ0XCIsXG5jYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25TdGFydENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwidG9wQmx1ciB0b3BDb21wb3NpdGlvblN0YXJ0IHRvcEtleURvd24gdG9wS2V5UHJlc3MgdG9wS2V5VXAgdG9wTW91c2VEb3duXCIuc3BsaXQoXCIgXCIpfSxjb21wb3NpdGlvblVwZGF0ZTp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uVXBkYXRlXCIsY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uVXBkYXRlQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJ0b3BCbHVyIHRvcENvbXBvc2l0aW9uVXBkYXRlIHRvcEtleURvd24gdG9wS2V5UHJlc3MgdG9wS2V5VXAgdG9wTW91c2VEb3duXCIuc3BsaXQoXCIgXCIpfX0sY2M9ITE7XG5mdW5jdGlvbiBkYyhhLGIpe3N3aXRjaChhKXtjYXNlIFwidG9wS2V5VXBcIjpyZXR1cm4tMSE9PVBiLmluZGV4T2YoYi5rZXlDb2RlKTtjYXNlIFwidG9wS2V5RG93blwiOnJldHVybiAyMjkhPT1iLmtleUNvZGU7Y2FzZSBcInRvcEtleVByZXNzXCI6Y2FzZSBcInRvcE1vdXNlRG93blwiOmNhc2UgXCJ0b3BCbHVyXCI6cmV0dXJuITA7ZGVmYXVsdDpyZXR1cm4hMX19ZnVuY3Rpb24gZWMoYSl7YT1hLmRldGFpbDtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJlwiZGF0YVwiaW4gYT9hLmRhdGE6bnVsbH12YXIgZmM9ITE7ZnVuY3Rpb24gZ2MoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcInRvcENvbXBvc2l0aW9uRW5kXCI6cmV0dXJuIGVjKGIpO2Nhc2UgXCJ0b3BLZXlQcmVzc1wiOmlmKDMyIT09Yi53aGljaClyZXR1cm4gbnVsbDtjYz0hMDtyZXR1cm4gYWM7Y2FzZSBcInRvcFRleHRJbnB1dFwiOnJldHVybiBhPWIuZGF0YSxhPT09YWMmJmNjP251bGw6YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbmZ1bmN0aW9uIGhjKGEsYil7aWYoZmMpcmV0dXJuXCJ0b3BDb21wb3NpdGlvbkVuZFwiPT09YXx8IVZiJiZkYyhhLGIpPyhhPUZiKCksUy5fcm9vdD1udWxsLFMuX3N0YXJ0VGV4dD1udWxsLFMuX2ZhbGxiYWNrVGV4dD1udWxsLGZjPSExLGEpOm51bGw7c3dpdGNoKGEpe2Nhc2UgXCJ0b3BQYXN0ZVwiOnJldHVybiBudWxsO2Nhc2UgXCJ0b3BLZXlQcmVzc1wiOmlmKCEoYi5jdHJsS2V5fHxiLmFsdEtleXx8Yi5tZXRhS2V5KXx8Yi5jdHJsS2V5JiZiLmFsdEtleSl7aWYoYi5jaGFyJiYxPGIuY2hhci5sZW5ndGgpcmV0dXJuIGIuY2hhcjtpZihiLndoaWNoKXJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKGIud2hpY2gpfXJldHVybiBudWxsO2Nhc2UgXCJ0b3BDb21wb3NpdGlvbkVuZFwiOnJldHVybiAkYj9udWxsOmIuZGF0YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbnZhciBpYz17ZXZlbnRUeXBlczpiYyxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlO2lmKFZiKWI6e3N3aXRjaChhKXtjYXNlIFwidG9wQ29tcG9zaXRpb25TdGFydFwiOnZhciBmPWJjLmNvbXBvc2l0aW9uU3RhcnQ7YnJlYWsgYjtjYXNlIFwidG9wQ29tcG9zaXRpb25FbmRcIjpmPWJjLmNvbXBvc2l0aW9uRW5kO2JyZWFrIGI7Y2FzZSBcInRvcENvbXBvc2l0aW9uVXBkYXRlXCI6Zj1iYy5jb21wb3NpdGlvblVwZGF0ZTticmVhayBifWY9dm9pZCAwfWVsc2UgZmM/ZGMoYSxjKSYmKGY9YmMuY29tcG9zaXRpb25FbmQpOlwidG9wS2V5RG93blwiPT09YSYmMjI5PT09Yy5rZXlDb2RlJiYoZj1iYy5jb21wb3NpdGlvblN0YXJ0KTtmPygkYiYmKGZjfHxmIT09YmMuY29tcG9zaXRpb25TdGFydD9mPT09YmMuY29tcG9zaXRpb25FbmQmJmZjJiYoZT1GYigpKTooUy5fcm9vdD1kLFMuX3N0YXJ0VGV4dD1HYigpLGZjPSEwKSksZj1NYi5nZXRQb29sZWQoZixiLGMsZCksZT9mLmRhdGE9XG5lOihlPWVjKGMpLG51bGwhPT1lJiYoZi5kYXRhPWUpKSxBYihmKSxlPWYpOmU9bnVsbDsoYT1aYj9nYyhhLGMpOmhjKGEsYykpPyhiPU5iLmdldFBvb2xlZChiYy5iZWZvcmVJbnB1dCxiLGMsZCksYi5kYXRhPWEsQWIoYikpOmI9bnVsbDtyZXR1cm5bZSxiXX19LGpjPW51bGwsa2M9bnVsbCxsYz1udWxsO2Z1bmN0aW9uIG1jKGEpe2lmKGE9WGEoYSkpe2pjJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgamMucmVzdG9yZUNvbnRyb2xsZWRTdGF0ZT92b2lkIDA6RShcIjE5NFwiKTt2YXIgYj1XYShhLnN0YXRlTm9kZSk7amMucmVzdG9yZUNvbnRyb2xsZWRTdGF0ZShhLnN0YXRlTm9kZSxhLnR5cGUsYil9fXZhciBuYz17aW5qZWN0RmliZXJDb250cm9sbGVkSG9zdENvbXBvbmVudDpmdW5jdGlvbihhKXtqYz1hfX07ZnVuY3Rpb24gb2MoYSl7a2M/bGM/bGMucHVzaChhKTpsYz1bYV06a2M9YX1cbmZ1bmN0aW9uIHBjKCl7aWYoa2Mpe3ZhciBhPWtjLGI9bGM7bGM9a2M9bnVsbDttYyhhKTtpZihiKWZvcihhPTA7YTxiLmxlbmd0aDthKyspbWMoYlthXSl9fXZhciBxYz1PYmplY3QuZnJlZXplKHtpbmplY3Rpb246bmMsZW5xdWV1ZVN0YXRlUmVzdG9yZTpvYyxyZXN0b3JlU3RhdGVJZk5lZWRlZDpwY30pO2Z1bmN0aW9uIHJjKGEsYil7cmV0dXJuIGEoYil9dmFyIHNjPSExO2Z1bmN0aW9uIHRjKGEsYil7aWYoc2MpcmV0dXJuIHJjKGEsYik7c2M9ITA7dHJ5e3JldHVybiByYyhhLGIpfWZpbmFsbHl7c2M9ITEscGMoKX19dmFyIHVjPXtjb2xvcjohMCxkYXRlOiEwLGRhdGV0aW1lOiEwLFwiZGF0ZXRpbWUtbG9jYWxcIjohMCxlbWFpbDohMCxtb250aDohMCxudW1iZXI6ITAscGFzc3dvcmQ6ITAscmFuZ2U6ITAsc2VhcmNoOiEwLHRlbDohMCx0ZXh0OiEwLHRpbWU6ITAsdXJsOiEwLHdlZWs6ITB9O1xuZnVuY3Rpb24gdmMoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVyblwiaW5wdXRcIj09PWI/ISF1Y1thLnR5cGVdOlwidGV4dGFyZWFcIj09PWI/ITA6ITF9ZnVuY3Rpb24gd2MoYSl7YT1hLnRhcmdldHx8YS5zcmNFbGVtZW50fHx3aW5kb3c7YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCYmKGE9YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCk7cmV0dXJuIDM9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZTphfXZhciB4YztsLmNhblVzZURPTSYmKHhjPWRvY3VtZW50LmltcGxlbWVudGF0aW9uJiZkb2N1bWVudC5pbXBsZW1lbnRhdGlvbi5oYXNGZWF0dXJlJiYhMCE9PWRvY3VtZW50LmltcGxlbWVudGF0aW9uLmhhc0ZlYXR1cmUoXCJcIixcIlwiKSk7XG5mdW5jdGlvbiB5YyhhLGIpe2lmKCFsLmNhblVzZURPTXx8YiYmIShcImFkZEV2ZW50TGlzdGVuZXJcImluIGRvY3VtZW50KSlyZXR1cm4hMTtiPVwib25cIithO3ZhciBjPWIgaW4gZG9jdW1lbnQ7Y3x8KGM9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSxjLnNldEF0dHJpYnV0ZShiLFwicmV0dXJuO1wiKSxjPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBjW2JdKTshYyYmeGMmJlwid2hlZWxcIj09PWEmJihjPWRvY3VtZW50LmltcGxlbWVudGF0aW9uLmhhc0ZlYXR1cmUoXCJFdmVudHMud2hlZWxcIixcIjMuMFwiKSk7cmV0dXJuIGN9ZnVuY3Rpb24gemMoYSl7dmFyIGI9YS50eXBlO3JldHVybihhPWEubm9kZU5hbWUpJiZcImlucHV0XCI9PT1hLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1ifHxcInJhZGlvXCI9PT1iKX1cbmZ1bmN0aW9uIEFjKGEpe3ZhciBiPXpjKGEpP1wiY2hlY2tlZFwiOlwidmFsdWVcIixjPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoYS5jb25zdHJ1Y3Rvci5wcm90b3R5cGUsYiksZD1cIlwiK2FbYl07aWYoIWEuaGFzT3duUHJvcGVydHkoYikmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLmdldCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuc2V0KXJldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtlbnVtZXJhYmxlOmMuZW51bWVyYWJsZSxjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGMuZ2V0LmNhbGwodGhpcyl9LHNldDpmdW5jdGlvbihhKXtkPVwiXCIrYTtjLnNldC5jYWxsKHRoaXMsYSl9fSkse2dldFZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIGR9LHNldFZhbHVlOmZ1bmN0aW9uKGEpe2Q9XCJcIithfSxzdG9wVHJhY2tpbmc6ZnVuY3Rpb24oKXthLl92YWx1ZVRyYWNrZXI9bnVsbDtkZWxldGUgYVtiXX19fVxuZnVuY3Rpb24gQmMoYSl7YS5fdmFsdWVUcmFja2VyfHwoYS5fdmFsdWVUcmFja2VyPUFjKGEpKX1mdW5jdGlvbiBDYyhhKXtpZighYSlyZXR1cm4hMTt2YXIgYj1hLl92YWx1ZVRyYWNrZXI7aWYoIWIpcmV0dXJuITA7dmFyIGM9Yi5nZXRWYWx1ZSgpO3ZhciBkPVwiXCI7YSYmKGQ9emMoYSk/YS5jaGVja2VkP1widHJ1ZVwiOlwiZmFsc2VcIjphLnZhbHVlKTthPWQ7cmV0dXJuIGEhPT1jPyhiLnNldFZhbHVlKGEpLCEwKTohMX12YXIgRGM9e2NoYW5nZTp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNoYW5nZVwiLGNhcHR1cmVkOlwib25DaGFuZ2VDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcInRvcEJsdXIgdG9wQ2hhbmdlIHRvcENsaWNrIHRvcEZvY3VzIHRvcElucHV0IHRvcEtleURvd24gdG9wS2V5VXAgdG9wU2VsZWN0aW9uQ2hhbmdlXCIuc3BsaXQoXCIgXCIpfX07XG5mdW5jdGlvbiBFYyhhLGIsYyl7YT1ULmdldFBvb2xlZChEYy5jaGFuZ2UsYSxiLGMpO2EudHlwZT1cImNoYW5nZVwiO29jKGMpO0FiKGEpO3JldHVybiBhfXZhciBGYz1udWxsLEdjPW51bGw7ZnVuY3Rpb24gSGMoYSl7a2IoYSk7bGIoITEpfWZ1bmN0aW9uIEljKGEpe3ZhciBiPXFiKGEpO2lmKENjKGIpKXJldHVybiBhfWZ1bmN0aW9uIEpjKGEsYil7aWYoXCJ0b3BDaGFuZ2VcIj09PWEpcmV0dXJuIGJ9dmFyIEtjPSExO2wuY2FuVXNlRE9NJiYoS2M9eWMoXCJpbnB1dFwiKSYmKCFkb2N1bWVudC5kb2N1bWVudE1vZGV8fDk8ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKSk7ZnVuY3Rpb24gTGMoKXtGYyYmKEZjLmRldGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLE1jKSxHYz1GYz1udWxsKX1mdW5jdGlvbiBNYyhhKXtcInZhbHVlXCI9PT1hLnByb3BlcnR5TmFtZSYmSWMoR2MpJiYoYT1FYyhHYyxhLHdjKGEpKSx0YyhIYyxhKSl9XG5mdW5jdGlvbiBOYyhhLGIsYyl7XCJ0b3BGb2N1c1wiPT09YT8oTGMoKSxGYz1iLEdjPWMsRmMuYXR0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsTWMpKTpcInRvcEJsdXJcIj09PWEmJkxjKCl9ZnVuY3Rpb24gT2MoYSl7aWYoXCJ0b3BTZWxlY3Rpb25DaGFuZ2VcIj09PWF8fFwidG9wS2V5VXBcIj09PWF8fFwidG9wS2V5RG93blwiPT09YSlyZXR1cm4gSWMoR2MpfWZ1bmN0aW9uIFBjKGEsYil7aWYoXCJ0b3BDbGlja1wiPT09YSlyZXR1cm4gSWMoYil9ZnVuY3Rpb24gJGMoYSxiKXtpZihcInRvcElucHV0XCI9PT1hfHxcInRvcENoYW5nZVwiPT09YSlyZXR1cm4gSWMoYil9XG52YXIgYWQ9e2V2ZW50VHlwZXM6RGMsX2lzSW5wdXRFdmVudFN1cHBvcnRlZDpLYyxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWI/cWIoYik6d2luZG93LGY9ZS5ub2RlTmFtZSYmZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO2lmKFwic2VsZWN0XCI9PT1mfHxcImlucHV0XCI9PT1mJiZcImZpbGVcIj09PWUudHlwZSl2YXIgZz1KYztlbHNlIGlmKHZjKGUpKWlmKEtjKWc9JGM7ZWxzZXtnPU9jO3ZhciBoPU5jfWVsc2UgZj1lLm5vZGVOYW1lLCFmfHxcImlucHV0XCIhPT1mLnRvTG93ZXJDYXNlKCl8fFwiY2hlY2tib3hcIiE9PWUudHlwZSYmXCJyYWRpb1wiIT09ZS50eXBlfHwoZz1QYyk7aWYoZyYmKGc9ZyhhLGIpKSlyZXR1cm4gRWMoZyxjLGQpO2gmJmgoYSxlLGIpO1widG9wQmx1clwiPT09YSYmbnVsbCE9YiYmKGE9Yi5fd3JhcHBlclN0YXRlfHxlLl93cmFwcGVyU3RhdGUpJiZhLmNvbnRyb2xsZWQmJlwibnVtYmVyXCI9PT1lLnR5cGUmJihhPVwiXCIrZS52YWx1ZSxlLmdldEF0dHJpYnV0ZShcInZhbHVlXCIpIT09XG5hJiZlLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsYSkpfX07ZnVuY3Rpb24gYmQoYSxiLGMsZCl7cmV0dXJuIFQuY2FsbCh0aGlzLGEsYixjLGQpfVQuYXVnbWVudENsYXNzKGJkLHt2aWV3Om51bGwsZGV0YWlsOm51bGx9KTt2YXIgY2Q9e0FsdDpcImFsdEtleVwiLENvbnRyb2w6XCJjdHJsS2V5XCIsTWV0YTpcIm1ldGFLZXlcIixTaGlmdDpcInNoaWZ0S2V5XCJ9O2Z1bmN0aW9uIGRkKGEpe3ZhciBiPXRoaXMubmF0aXZlRXZlbnQ7cmV0dXJuIGIuZ2V0TW9kaWZpZXJTdGF0ZT9iLmdldE1vZGlmaWVyU3RhdGUoYSk6KGE9Y2RbYV0pPyEhYlthXTohMX1mdW5jdGlvbiBlZCgpe3JldHVybiBkZH1mdW5jdGlvbiBmZChhLGIsYyxkKXtyZXR1cm4gVC5jYWxsKHRoaXMsYSxiLGMsZCl9XG5iZC5hdWdtZW50Q2xhc3MoZmQse3NjcmVlblg6bnVsbCxzY3JlZW5ZOm51bGwsY2xpZW50WDpudWxsLGNsaWVudFk6bnVsbCxwYWdlWDpudWxsLHBhZ2VZOm51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLGdldE1vZGlmaWVyU3RhdGU6ZWQsYnV0dG9uOm51bGwsYnV0dG9uczpudWxsLHJlbGF0ZWRUYXJnZXQ6ZnVuY3Rpb24oYSl7cmV0dXJuIGEucmVsYXRlZFRhcmdldHx8KGEuZnJvbUVsZW1lbnQ9PT1hLnNyY0VsZW1lbnQ/YS50b0VsZW1lbnQ6YS5mcm9tRWxlbWVudCl9fSk7XG52YXIgZ2Q9e21vdXNlRW50ZXI6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvbk1vdXNlRW50ZXJcIixkZXBlbmRlbmNpZXM6W1widG9wTW91c2VPdXRcIixcInRvcE1vdXNlT3ZlclwiXX0sbW91c2VMZWF2ZTp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uTW91c2VMZWF2ZVwiLGRlcGVuZGVuY2llczpbXCJ0b3BNb3VzZU91dFwiLFwidG9wTW91c2VPdmVyXCJdfX0saGQ9e2V2ZW50VHlwZXM6Z2QsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXtpZihcInRvcE1vdXNlT3ZlclwiPT09YSYmKGMucmVsYXRlZFRhcmdldHx8Yy5mcm9tRWxlbWVudCl8fFwidG9wTW91c2VPdXRcIiE9PWEmJlwidG9wTW91c2VPdmVyXCIhPT1hKXJldHVybiBudWxsO3ZhciBlPWQud2luZG93PT09ZD9kOihlPWQub3duZXJEb2N1bWVudCk/ZS5kZWZhdWx0Vmlld3x8ZS5wYXJlbnRXaW5kb3c6d2luZG93O1widG9wTW91c2VPdXRcIj09PWE/KGE9YixiPShiPWMucmVsYXRlZFRhcmdldHx8Yy50b0VsZW1lbnQpP3BiKGIpOm51bGwpOmE9bnVsbDtpZihhPT09XG5iKXJldHVybiBudWxsO3ZhciBmPW51bGw9PWE/ZTpxYihhKTtlPW51bGw9PWI/ZTpxYihiKTt2YXIgZz1mZC5nZXRQb29sZWQoZ2QubW91c2VMZWF2ZSxhLGMsZCk7Zy50eXBlPVwibW91c2VsZWF2ZVwiO2cudGFyZ2V0PWY7Zy5yZWxhdGVkVGFyZ2V0PWU7Yz1mZC5nZXRQb29sZWQoZ2QubW91c2VFbnRlcixiLGMsZCk7Yy50eXBlPVwibW91c2VlbnRlclwiO2MudGFyZ2V0PWU7Yy5yZWxhdGVkVGFyZ2V0PWY7QmIoZyxjLGEsYik7cmV0dXJuW2csY119fSxpZD1hYS5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRC5SZWFjdEN1cnJlbnRPd25lcjtmdW5jdGlvbiBqZChhKXthPWEudHlwZTtyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGE/YTpcImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hLmRpc3BsYXlOYW1lfHxhLm5hbWU6bnVsbH1cbmZ1bmN0aW9uIGtkKGEpe3ZhciBiPWE7aWYoYS5hbHRlcm5hdGUpZm9yKDtiW1wicmV0dXJuXCJdOyliPWJbXCJyZXR1cm5cIl07ZWxzZXtpZigwIT09KGIuZWZmZWN0VGFnJjIpKXJldHVybiAxO2Zvcig7YltcInJldHVyblwiXTspaWYoYj1iW1wicmV0dXJuXCJdLDAhPT0oYi5lZmZlY3RUYWcmMikpcmV0dXJuIDF9cmV0dXJuIDM9PT1iLnRhZz8yOjN9ZnVuY3Rpb24gbGQoYSl7cmV0dXJuKGE9YS5fcmVhY3RJbnRlcm5hbEZpYmVyKT8yPT09a2QoYSk6ITF9ZnVuY3Rpb24gbWQoYSl7MiE9PWtkKGEpP0UoXCIxODhcIik6dm9pZCAwfVxuZnVuY3Rpb24gbmQoYSl7dmFyIGI9YS5hbHRlcm5hdGU7aWYoIWIpcmV0dXJuIGI9a2QoYSksMz09PWI/RShcIjE4OFwiKTp2b2lkIDAsMT09PWI/bnVsbDphO2Zvcih2YXIgYz1hLGQ9Yjs7KXt2YXIgZT1jW1wicmV0dXJuXCJdLGY9ZT9lLmFsdGVybmF0ZTpudWxsO2lmKCFlfHwhZilicmVhaztpZihlLmNoaWxkPT09Zi5jaGlsZCl7Zm9yKHZhciBnPWUuY2hpbGQ7Zzspe2lmKGc9PT1jKXJldHVybiBtZChlKSxhO2lmKGc9PT1kKXJldHVybiBtZChlKSxiO2c9Zy5zaWJsaW5nfUUoXCIxODhcIil9aWYoY1tcInJldHVyblwiXSE9PWRbXCJyZXR1cm5cIl0pYz1lLGQ9ZjtlbHNle2c9ITE7Zm9yKHZhciBoPWUuY2hpbGQ7aDspe2lmKGg9PT1jKXtnPSEwO2M9ZTtkPWY7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1lO2M9ZjticmVha31oPWguc2libGluZ31pZighZyl7Zm9yKGg9Zi5jaGlsZDtoOyl7aWYoaD09PWMpe2c9ITA7Yz1mO2Q9ZTticmVha31pZihoPT09ZCl7Zz0hMDtkPWY7Yz1lO2JyZWFrfWg9aC5zaWJsaW5nfWc/XG52b2lkIDA6RShcIjE4OVwiKX19Yy5hbHRlcm5hdGUhPT1kP0UoXCIxOTBcIik6dm9pZCAwfTMhPT1jLnRhZz9FKFwiMTg4XCIpOnZvaWQgMDtyZXR1cm4gYy5zdGF0ZU5vZGUuY3VycmVudD09PWM/YTpifWZ1bmN0aW9uIG9kKGEpe2E9bmQoYSk7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKHZhciBiPWE7Oyl7aWYoNT09PWIudGFnfHw2PT09Yi50YWcpcmV0dXJuIGI7aWYoYi5jaGlsZCliLmNoaWxkW1wicmV0dXJuXCJdPWIsYj1iLmNoaWxkO2Vsc2V7aWYoYj09PWEpYnJlYWs7Zm9yKDshYi5zaWJsaW5nOyl7aWYoIWJbXCJyZXR1cm5cIl18fGJbXCJyZXR1cm5cIl09PT1hKXJldHVybiBudWxsO2I9YltcInJldHVyblwiXX1iLnNpYmxpbmdbXCJyZXR1cm5cIl09YltcInJldHVyblwiXTtiPWIuc2libGluZ319cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBwZChhKXthPW5kKGEpO2lmKCFhKXJldHVybiBudWxsO2Zvcih2YXIgYj1hOzspe2lmKDU9PT1iLnRhZ3x8Nj09PWIudGFnKXJldHVybiBiO2lmKGIuY2hpbGQmJjQhPT1iLnRhZyliLmNoaWxkW1wicmV0dXJuXCJdPWIsYj1iLmNoaWxkO2Vsc2V7aWYoYj09PWEpYnJlYWs7Zm9yKDshYi5zaWJsaW5nOyl7aWYoIWJbXCJyZXR1cm5cIl18fGJbXCJyZXR1cm5cIl09PT1hKXJldHVybiBudWxsO2I9YltcInJldHVyblwiXX1iLnNpYmxpbmdbXCJyZXR1cm5cIl09YltcInJldHVyblwiXTtiPWIuc2libGluZ319cmV0dXJuIG51bGx9dmFyIHFkPVtdO1xuZnVuY3Rpb24gcmQoYSl7dmFyIGI9YS50YXJnZXRJbnN0O2Rve2lmKCFiKXthLmFuY2VzdG9ycy5wdXNoKGIpO2JyZWFrfXZhciBjO2ZvcihjPWI7Y1tcInJldHVyblwiXTspYz1jW1wicmV0dXJuXCJdO2M9MyE9PWMudGFnP251bGw6Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztpZighYylicmVhazthLmFuY2VzdG9ycy5wdXNoKGIpO2I9cGIoYyl9d2hpbGUoYik7Zm9yKGM9MDtjPGEuYW5jZXN0b3JzLmxlbmd0aDtjKyspYj1hLmFuY2VzdG9yc1tjXSxzZChhLnRvcExldmVsVHlwZSxiLGEubmF0aXZlRXZlbnQsd2MoYS5uYXRpdmVFdmVudCkpfXZhciB0ZD0hMCxzZD12b2lkIDA7ZnVuY3Rpb24gdWQoYSl7dGQ9ISFhfWZ1bmN0aW9uIFUoYSxiLGMpe3JldHVybiBjP2JhLmxpc3RlbihjLGIsdmQuYmluZChudWxsLGEpKTpudWxsfWZ1bmN0aW9uIHdkKGEsYixjKXtyZXR1cm4gYz9iYS5jYXB0dXJlKGMsYix2ZC5iaW5kKG51bGwsYSkpOm51bGx9XG5mdW5jdGlvbiB2ZChhLGIpe2lmKHRkKXt2YXIgYz13YyhiKTtjPXBiKGMpO251bGw9PT1jfHxcIm51bWJlclwiIT09dHlwZW9mIGMudGFnfHwyPT09a2QoYyl8fChjPW51bGwpO2lmKHFkLmxlbmd0aCl7dmFyIGQ9cWQucG9wKCk7ZC50b3BMZXZlbFR5cGU9YTtkLm5hdGl2ZUV2ZW50PWI7ZC50YXJnZXRJbnN0PWM7YT1kfWVsc2UgYT17dG9wTGV2ZWxUeXBlOmEsbmF0aXZlRXZlbnQ6Yix0YXJnZXRJbnN0OmMsYW5jZXN0b3JzOltdfTt0cnl7dGMocmQsYSl9ZmluYWxseXthLnRvcExldmVsVHlwZT1udWxsLGEubmF0aXZlRXZlbnQ9bnVsbCxhLnRhcmdldEluc3Q9bnVsbCxhLmFuY2VzdG9ycy5sZW5ndGg9MCwxMD5xZC5sZW5ndGgmJnFkLnB1c2goYSl9fX1cbnZhciB4ZD1PYmplY3QuZnJlZXplKHtnZXQgX2VuYWJsZWQoKXtyZXR1cm4gdGR9LGdldCBfaGFuZGxlVG9wTGV2ZWwoKXtyZXR1cm4gc2R9LHNldEhhbmRsZVRvcExldmVsOmZ1bmN0aW9uKGEpe3NkPWF9LHNldEVuYWJsZWQ6dWQsaXNFbmFibGVkOmZ1bmN0aW9uKCl7cmV0dXJuIHRkfSx0cmFwQnViYmxlZEV2ZW50OlUsdHJhcENhcHR1cmVkRXZlbnQ6d2QsZGlzcGF0Y2hFdmVudDp2ZH0pO2Z1bmN0aW9uIHlkKGEsYil7dmFyIGM9e307Y1thLnRvTG93ZXJDYXNlKCldPWIudG9Mb3dlckNhc2UoKTtjW1wiV2Via2l0XCIrYV09XCJ3ZWJraXRcIitiO2NbXCJNb3pcIithXT1cIm1velwiK2I7Y1tcIm1zXCIrYV09XCJNU1wiK2I7Y1tcIk9cIithXT1cIm9cIitiLnRvTG93ZXJDYXNlKCk7cmV0dXJuIGN9XG52YXIgemQ9e2FuaW1hdGlvbmVuZDp5ZChcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uRW5kXCIpLGFuaW1hdGlvbml0ZXJhdGlvbjp5ZChcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uSXRlcmF0aW9uXCIpLGFuaW1hdGlvbnN0YXJ0OnlkKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25TdGFydFwiKSx0cmFuc2l0aW9uZW5kOnlkKFwiVHJhbnNpdGlvblwiLFwiVHJhbnNpdGlvbkVuZFwiKX0sQWQ9e30sQmQ9e307bC5jYW5Vc2VET00mJihCZD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLnN0eWxlLFwiQW5pbWF0aW9uRXZlbnRcImluIHdpbmRvd3x8KGRlbGV0ZSB6ZC5hbmltYXRpb25lbmQuYW5pbWF0aW9uLGRlbGV0ZSB6ZC5hbmltYXRpb25pdGVyYXRpb24uYW5pbWF0aW9uLGRlbGV0ZSB6ZC5hbmltYXRpb25zdGFydC5hbmltYXRpb24pLFwiVHJhbnNpdGlvbkV2ZW50XCJpbiB3aW5kb3d8fGRlbGV0ZSB6ZC50cmFuc2l0aW9uZW5kLnRyYW5zaXRpb24pO1xuZnVuY3Rpb24gQ2QoYSl7aWYoQWRbYV0pcmV0dXJuIEFkW2FdO2lmKCF6ZFthXSlyZXR1cm4gYTt2YXIgYj16ZFthXSxjO2ZvcihjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSYmYyBpbiBCZClyZXR1cm4gQWRbYV09YltjXTtyZXR1cm5cIlwifVxudmFyIERkPXt0b3BBYm9ydDpcImFib3J0XCIsdG9wQW5pbWF0aW9uRW5kOkNkKFwiYW5pbWF0aW9uZW5kXCIpfHxcImFuaW1hdGlvbmVuZFwiLHRvcEFuaW1hdGlvbkl0ZXJhdGlvbjpDZChcImFuaW1hdGlvbml0ZXJhdGlvblwiKXx8XCJhbmltYXRpb25pdGVyYXRpb25cIix0b3BBbmltYXRpb25TdGFydDpDZChcImFuaW1hdGlvbnN0YXJ0XCIpfHxcImFuaW1hdGlvbnN0YXJ0XCIsdG9wQmx1cjpcImJsdXJcIix0b3BDYW5jZWw6XCJjYW5jZWxcIix0b3BDYW5QbGF5OlwiY2FucGxheVwiLHRvcENhblBsYXlUaHJvdWdoOlwiY2FucGxheXRocm91Z2hcIix0b3BDaGFuZ2U6XCJjaGFuZ2VcIix0b3BDbGljazpcImNsaWNrXCIsdG9wQ2xvc2U6XCJjbG9zZVwiLHRvcENvbXBvc2l0aW9uRW5kOlwiY29tcG9zaXRpb25lbmRcIix0b3BDb21wb3NpdGlvblN0YXJ0OlwiY29tcG9zaXRpb25zdGFydFwiLHRvcENvbXBvc2l0aW9uVXBkYXRlOlwiY29tcG9zaXRpb251cGRhdGVcIix0b3BDb250ZXh0TWVudTpcImNvbnRleHRtZW51XCIsdG9wQ29weTpcImNvcHlcIixcbnRvcEN1dDpcImN1dFwiLHRvcERvdWJsZUNsaWNrOlwiZGJsY2xpY2tcIix0b3BEcmFnOlwiZHJhZ1wiLHRvcERyYWdFbmQ6XCJkcmFnZW5kXCIsdG9wRHJhZ0VudGVyOlwiZHJhZ2VudGVyXCIsdG9wRHJhZ0V4aXQ6XCJkcmFnZXhpdFwiLHRvcERyYWdMZWF2ZTpcImRyYWdsZWF2ZVwiLHRvcERyYWdPdmVyOlwiZHJhZ292ZXJcIix0b3BEcmFnU3RhcnQ6XCJkcmFnc3RhcnRcIix0b3BEcm9wOlwiZHJvcFwiLHRvcER1cmF0aW9uQ2hhbmdlOlwiZHVyYXRpb25jaGFuZ2VcIix0b3BFbXB0aWVkOlwiZW1wdGllZFwiLHRvcEVuY3J5cHRlZDpcImVuY3J5cHRlZFwiLHRvcEVuZGVkOlwiZW5kZWRcIix0b3BFcnJvcjpcImVycm9yXCIsdG9wRm9jdXM6XCJmb2N1c1wiLHRvcElucHV0OlwiaW5wdXRcIix0b3BLZXlEb3duOlwia2V5ZG93blwiLHRvcEtleVByZXNzOlwia2V5cHJlc3NcIix0b3BLZXlVcDpcImtleXVwXCIsdG9wTG9hZGVkRGF0YTpcImxvYWRlZGRhdGFcIix0b3BMb2FkOlwibG9hZFwiLHRvcExvYWRlZE1ldGFkYXRhOlwibG9hZGVkbWV0YWRhdGFcIix0b3BMb2FkU3RhcnQ6XCJsb2Fkc3RhcnRcIixcbnRvcE1vdXNlRG93bjpcIm1vdXNlZG93blwiLHRvcE1vdXNlTW92ZTpcIm1vdXNlbW92ZVwiLHRvcE1vdXNlT3V0OlwibW91c2VvdXRcIix0b3BNb3VzZU92ZXI6XCJtb3VzZW92ZXJcIix0b3BNb3VzZVVwOlwibW91c2V1cFwiLHRvcFBhc3RlOlwicGFzdGVcIix0b3BQYXVzZTpcInBhdXNlXCIsdG9wUGxheTpcInBsYXlcIix0b3BQbGF5aW5nOlwicGxheWluZ1wiLHRvcFByb2dyZXNzOlwicHJvZ3Jlc3NcIix0b3BSYXRlQ2hhbmdlOlwicmF0ZWNoYW5nZVwiLHRvcFNjcm9sbDpcInNjcm9sbFwiLHRvcFNlZWtlZDpcInNlZWtlZFwiLHRvcFNlZWtpbmc6XCJzZWVraW5nXCIsdG9wU2VsZWN0aW9uQ2hhbmdlOlwic2VsZWN0aW9uY2hhbmdlXCIsdG9wU3RhbGxlZDpcInN0YWxsZWRcIix0b3BTdXNwZW5kOlwic3VzcGVuZFwiLHRvcFRleHRJbnB1dDpcInRleHRJbnB1dFwiLHRvcFRpbWVVcGRhdGU6XCJ0aW1ldXBkYXRlXCIsdG9wVG9nZ2xlOlwidG9nZ2xlXCIsdG9wVG91Y2hDYW5jZWw6XCJ0b3VjaGNhbmNlbFwiLHRvcFRvdWNoRW5kOlwidG91Y2hlbmRcIix0b3BUb3VjaE1vdmU6XCJ0b3VjaG1vdmVcIixcbnRvcFRvdWNoU3RhcnQ6XCJ0b3VjaHN0YXJ0XCIsdG9wVHJhbnNpdGlvbkVuZDpDZChcInRyYW5zaXRpb25lbmRcIil8fFwidHJhbnNpdGlvbmVuZFwiLHRvcFZvbHVtZUNoYW5nZTpcInZvbHVtZWNoYW5nZVwiLHRvcFdhaXRpbmc6XCJ3YWl0aW5nXCIsdG9wV2hlZWw6XCJ3aGVlbFwifSxFZD17fSxGZD0wLEdkPVwiX3JlYWN0TGlzdGVuZXJzSURcIisoXCJcIitNYXRoLnJhbmRvbSgpKS5zbGljZSgyKTtmdW5jdGlvbiBIZChhKXtPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYSxHZCl8fChhW0dkXT1GZCsrLEVkW2FbR2RdXT17fSk7cmV0dXJuIEVkW2FbR2RdXX1mdW5jdGlvbiBJZChhKXtmb3IoO2EmJmEuZmlyc3RDaGlsZDspYT1hLmZpcnN0Q2hpbGQ7cmV0dXJuIGF9XG5mdW5jdGlvbiBKZChhLGIpe3ZhciBjPUlkKGEpO2E9MDtmb3IodmFyIGQ7Yzspe2lmKDM9PT1jLm5vZGVUeXBlKXtkPWErYy50ZXh0Q29udGVudC5sZW5ndGg7aWYoYTw9YiYmZD49YilyZXR1cm57bm9kZTpjLG9mZnNldDpiLWF9O2E9ZH1hOntmb3IoO2M7KXtpZihjLm5leHRTaWJsaW5nKXtjPWMubmV4dFNpYmxpbmc7YnJlYWsgYX1jPWMucGFyZW50Tm9kZX1jPXZvaWQgMH1jPUlkKGMpfX1mdW5jdGlvbiBLZChhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuIGImJihcImlucHV0XCI9PT1iJiZcInRleHRcIj09PWEudHlwZXx8XCJ0ZXh0YXJlYVwiPT09Ynx8XCJ0cnVlXCI9PT1hLmNvbnRlbnRFZGl0YWJsZSl9XG52YXIgTGQ9bC5jYW5Vc2VET00mJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmMTE+PWRvY3VtZW50LmRvY3VtZW50TW9kZSxNZD17c2VsZWN0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uU2VsZWN0XCIsY2FwdHVyZWQ6XCJvblNlbGVjdENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwidG9wQmx1ciB0b3BDb250ZXh0TWVudSB0b3BGb2N1cyB0b3BLZXlEb3duIHRvcEtleVVwIHRvcE1vdXNlRG93biB0b3BNb3VzZVVwIHRvcFNlbGVjdGlvbkNoYW5nZVwiLnNwbGl0KFwiIFwiKX19LE5kPW51bGwsT2Q9bnVsbCxQZD1udWxsLFFkPSExO1xuZnVuY3Rpb24gUmQoYSxiKXtpZihRZHx8bnVsbD09TmR8fE5kIT09ZGEoKSlyZXR1cm4gbnVsbDt2YXIgYz1OZDtcInNlbGVjdGlvblN0YXJ0XCJpbiBjJiZLZChjKT9jPXtzdGFydDpjLnNlbGVjdGlvblN0YXJ0LGVuZDpjLnNlbGVjdGlvbkVuZH06d2luZG93LmdldFNlbGVjdGlvbj8oYz13aW5kb3cuZ2V0U2VsZWN0aW9uKCksYz17YW5jaG9yTm9kZTpjLmFuY2hvck5vZGUsYW5jaG9yT2Zmc2V0OmMuYW5jaG9yT2Zmc2V0LGZvY3VzTm9kZTpjLmZvY3VzTm9kZSxmb2N1c09mZnNldDpjLmZvY3VzT2Zmc2V0fSk6Yz12b2lkIDA7cmV0dXJuIFBkJiZlYShQZCxjKT9udWxsOihQZD1jLGE9VC5nZXRQb29sZWQoTWQuc2VsZWN0LE9kLGEsYiksYS50eXBlPVwic2VsZWN0XCIsYS50YXJnZXQ9TmQsQWIoYSksYSl9XG52YXIgU2Q9e2V2ZW50VHlwZXM6TWQsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1kLndpbmRvdz09PWQ/ZC5kb2N1bWVudDo5PT09ZC5ub2RlVHlwZT9kOmQub3duZXJEb2N1bWVudCxmO2lmKCEoZj0hZSkpe2E6e2U9SGQoZSk7Zj1TYS5vblNlbGVjdDtmb3IodmFyIGc9MDtnPGYubGVuZ3RoO2crKyl7dmFyIGg9ZltnXTtpZighZS5oYXNPd25Qcm9wZXJ0eShoKXx8IWVbaF0pe2U9ITE7YnJlYWsgYX19ZT0hMH1mPSFlfWlmKGYpcmV0dXJuIG51bGw7ZT1iP3FiKGIpOndpbmRvdztzd2l0Y2goYSl7Y2FzZSBcInRvcEZvY3VzXCI6aWYodmMoZSl8fFwidHJ1ZVwiPT09ZS5jb250ZW50RWRpdGFibGUpTmQ9ZSxPZD1iLFBkPW51bGw7YnJlYWs7Y2FzZSBcInRvcEJsdXJcIjpQZD1PZD1OZD1udWxsO2JyZWFrO2Nhc2UgXCJ0b3BNb3VzZURvd25cIjpRZD0hMDticmVhaztjYXNlIFwidG9wQ29udGV4dE1lbnVcIjpjYXNlIFwidG9wTW91c2VVcFwiOnJldHVybiBRZD0hMSxSZChjLGQpO2Nhc2UgXCJ0b3BTZWxlY3Rpb25DaGFuZ2VcIjppZihMZClicmVhaztcbmNhc2UgXCJ0b3BLZXlEb3duXCI6Y2FzZSBcInRvcEtleVVwXCI6cmV0dXJuIFJkKGMsZCl9cmV0dXJuIG51bGx9fTtmdW5jdGlvbiBUZChhLGIsYyxkKXtyZXR1cm4gVC5jYWxsKHRoaXMsYSxiLGMsZCl9VC5hdWdtZW50Q2xhc3MoVGQse2FuaW1hdGlvbk5hbWU6bnVsbCxlbGFwc2VkVGltZTpudWxsLHBzZXVkb0VsZW1lbnQ6bnVsbH0pO2Z1bmN0aW9uIFVkKGEsYixjLGQpe3JldHVybiBULmNhbGwodGhpcyxhLGIsYyxkKX1ULmF1Z21lbnRDbGFzcyhVZCx7Y2xpcGJvYXJkRGF0YTpmdW5jdGlvbihhKXtyZXR1cm5cImNsaXBib2FyZERhdGFcImluIGE/YS5jbGlwYm9hcmREYXRhOndpbmRvdy5jbGlwYm9hcmREYXRhfX0pO2Z1bmN0aW9uIFZkKGEsYixjLGQpe3JldHVybiBULmNhbGwodGhpcyxhLGIsYyxkKX1iZC5hdWdtZW50Q2xhc3MoVmQse3JlbGF0ZWRUYXJnZXQ6bnVsbH0pO1xuZnVuY3Rpb24gV2QoYSl7dmFyIGI9YS5rZXlDb2RlO1wiY2hhckNvZGVcImluIGE/KGE9YS5jaGFyQ29kZSwwPT09YSYmMTM9PT1iJiYoYT0xMykpOmE9YjtyZXR1cm4gMzI8PWF8fDEzPT09YT9hOjB9XG52YXIgWGQ9e0VzYzpcIkVzY2FwZVwiLFNwYWNlYmFyOlwiIFwiLExlZnQ6XCJBcnJvd0xlZnRcIixVcDpcIkFycm93VXBcIixSaWdodDpcIkFycm93UmlnaHRcIixEb3duOlwiQXJyb3dEb3duXCIsRGVsOlwiRGVsZXRlXCIsV2luOlwiT1NcIixNZW51OlwiQ29udGV4dE1lbnVcIixBcHBzOlwiQ29udGV4dE1lbnVcIixTY3JvbGw6XCJTY3JvbGxMb2NrXCIsTW96UHJpbnRhYmxlS2V5OlwiVW5pZGVudGlmaWVkXCJ9LFlkPXs4OlwiQmFja3NwYWNlXCIsOTpcIlRhYlwiLDEyOlwiQ2xlYXJcIiwxMzpcIkVudGVyXCIsMTY6XCJTaGlmdFwiLDE3OlwiQ29udHJvbFwiLDE4OlwiQWx0XCIsMTk6XCJQYXVzZVwiLDIwOlwiQ2Fwc0xvY2tcIiwyNzpcIkVzY2FwZVwiLDMyOlwiIFwiLDMzOlwiUGFnZVVwXCIsMzQ6XCJQYWdlRG93blwiLDM1OlwiRW5kXCIsMzY6XCJIb21lXCIsMzc6XCJBcnJvd0xlZnRcIiwzODpcIkFycm93VXBcIiwzOTpcIkFycm93UmlnaHRcIiw0MDpcIkFycm93RG93blwiLDQ1OlwiSW5zZXJ0XCIsNDY6XCJEZWxldGVcIiwxMTI6XCJGMVwiLDExMzpcIkYyXCIsMTE0OlwiRjNcIiwxMTU6XCJGNFwiLFxuMTE2OlwiRjVcIiwxMTc6XCJGNlwiLDExODpcIkY3XCIsMTE5OlwiRjhcIiwxMjA6XCJGOVwiLDEyMTpcIkYxMFwiLDEyMjpcIkYxMVwiLDEyMzpcIkYxMlwiLDE0NDpcIk51bUxvY2tcIiwxNDU6XCJTY3JvbGxMb2NrXCIsMjI0OlwiTWV0YVwifTtmdW5jdGlvbiBaZChhLGIsYyxkKXtyZXR1cm4gVC5jYWxsKHRoaXMsYSxiLGMsZCl9XG5iZC5hdWdtZW50Q2xhc3MoWmQse2tleTpmdW5jdGlvbihhKXtpZihhLmtleSl7dmFyIGI9WGRbYS5rZXldfHxhLmtleTtpZihcIlVuaWRlbnRpZmllZFwiIT09YilyZXR1cm4gYn1yZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/KGE9V2QoYSksMTM9PT1hP1wiRW50ZXJcIjpTdHJpbmcuZnJvbUNoYXJDb2RlKGEpKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP1lkW2Eua2V5Q29kZV18fFwiVW5pZGVudGlmaWVkXCI6XCJcIn0sbG9jYXRpb246bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwscmVwZWF0Om51bGwsbG9jYWxlOm51bGwsZ2V0TW9kaWZpZXJTdGF0ZTplZCxjaGFyQ29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/V2QoYSk6MH0sa2V5Q29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfSx3aGljaDpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1cbmEudHlwZT9XZChhKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfX0pO2Z1bmN0aW9uICRkKGEsYixjLGQpe3JldHVybiBULmNhbGwodGhpcyxhLGIsYyxkKX1mZC5hdWdtZW50Q2xhc3MoJGQse2RhdGFUcmFuc2ZlcjpudWxsfSk7ZnVuY3Rpb24gYWUoYSxiLGMsZCl7cmV0dXJuIFQuY2FsbCh0aGlzLGEsYixjLGQpfWJkLmF1Z21lbnRDbGFzcyhhZSx7dG91Y2hlczpudWxsLHRhcmdldFRvdWNoZXM6bnVsbCxjaGFuZ2VkVG91Y2hlczpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxnZXRNb2RpZmllclN0YXRlOmVkfSk7ZnVuY3Rpb24gYmUoYSxiLGMsZCl7cmV0dXJuIFQuY2FsbCh0aGlzLGEsYixjLGQpfVQuYXVnbWVudENsYXNzKGJlLHtwcm9wZXJ0eU5hbWU6bnVsbCxlbGFwc2VkVGltZTpudWxsLHBzZXVkb0VsZW1lbnQ6bnVsbH0pO1xuZnVuY3Rpb24gY2UoYSxiLGMsZCl7cmV0dXJuIFQuY2FsbCh0aGlzLGEsYixjLGQpfWZkLmF1Z21lbnRDbGFzcyhjZSx7ZGVsdGFYOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFYXCJpbiBhP2EuZGVsdGFYOlwid2hlZWxEZWx0YVhcImluIGE/LWEud2hlZWxEZWx0YVg6MH0sZGVsdGFZOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFZXCJpbiBhP2EuZGVsdGFZOlwid2hlZWxEZWx0YVlcImluIGE/LWEud2hlZWxEZWx0YVk6XCJ3aGVlbERlbHRhXCJpbiBhPy1hLndoZWVsRGVsdGE6MH0sZGVsdGFaOm51bGwsZGVsdGFNb2RlOm51bGx9KTt2YXIgZGU9e30sZWU9e307XG5cImFib3J0IGFuaW1hdGlvbkVuZCBhbmltYXRpb25JdGVyYXRpb24gYW5pbWF0aW9uU3RhcnQgYmx1ciBjYW5jZWwgY2FuUGxheSBjYW5QbGF5VGhyb3VnaCBjbGljayBjbG9zZSBjb250ZXh0TWVudSBjb3B5IGN1dCBkb3VibGVDbGljayBkcmFnIGRyYWdFbmQgZHJhZ0VudGVyIGRyYWdFeGl0IGRyYWdMZWF2ZSBkcmFnT3ZlciBkcmFnU3RhcnQgZHJvcCBkdXJhdGlvbkNoYW5nZSBlbXB0aWVkIGVuY3J5cHRlZCBlbmRlZCBlcnJvciBmb2N1cyBpbnB1dCBpbnZhbGlkIGtleURvd24ga2V5UHJlc3Mga2V5VXAgbG9hZCBsb2FkZWREYXRhIGxvYWRlZE1ldGFkYXRhIGxvYWRTdGFydCBtb3VzZURvd24gbW91c2VNb3ZlIG1vdXNlT3V0IG1vdXNlT3ZlciBtb3VzZVVwIHBhc3RlIHBhdXNlIHBsYXkgcGxheWluZyBwcm9ncmVzcyByYXRlQ2hhbmdlIHJlc2V0IHNjcm9sbCBzZWVrZWQgc2Vla2luZyBzdGFsbGVkIHN1Ym1pdCBzdXNwZW5kIHRpbWVVcGRhdGUgdG9nZ2xlIHRvdWNoQ2FuY2VsIHRvdWNoRW5kIHRvdWNoTW92ZSB0b3VjaFN0YXJ0IHRyYW5zaXRpb25FbmQgdm9sdW1lQ2hhbmdlIHdhaXRpbmcgd2hlZWxcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hWzBdLnRvVXBwZXJDYXNlKCkrXG5hLnNsaWNlKDEpLGM9XCJvblwiK2I7Yj1cInRvcFwiK2I7Yz17cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6YyxjYXB0dXJlZDpjK1wiQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6W2JdfTtkZVthXT1jO2VlW2JdPWN9KTtcbnZhciBmZT17ZXZlbnRUeXBlczpkZSxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWVlW2FdO2lmKCFlKXJldHVybiBudWxsO3N3aXRjaChhKXtjYXNlIFwidG9wS2V5UHJlc3NcIjppZigwPT09V2QoYykpcmV0dXJuIG51bGw7Y2FzZSBcInRvcEtleURvd25cIjpjYXNlIFwidG9wS2V5VXBcIjphPVpkO2JyZWFrO2Nhc2UgXCJ0b3BCbHVyXCI6Y2FzZSBcInRvcEZvY3VzXCI6YT1WZDticmVhaztjYXNlIFwidG9wQ2xpY2tcIjppZigyPT09Yy5idXR0b24pcmV0dXJuIG51bGw7Y2FzZSBcInRvcERvdWJsZUNsaWNrXCI6Y2FzZSBcInRvcE1vdXNlRG93blwiOmNhc2UgXCJ0b3BNb3VzZU1vdmVcIjpjYXNlIFwidG9wTW91c2VVcFwiOmNhc2UgXCJ0b3BNb3VzZU91dFwiOmNhc2UgXCJ0b3BNb3VzZU92ZXJcIjpjYXNlIFwidG9wQ29udGV4dE1lbnVcIjphPWZkO2JyZWFrO2Nhc2UgXCJ0b3BEcmFnXCI6Y2FzZSBcInRvcERyYWdFbmRcIjpjYXNlIFwidG9wRHJhZ0VudGVyXCI6Y2FzZSBcInRvcERyYWdFeGl0XCI6Y2FzZSBcInRvcERyYWdMZWF2ZVwiOmNhc2UgXCJ0b3BEcmFnT3ZlclwiOmNhc2UgXCJ0b3BEcmFnU3RhcnRcIjpjYXNlIFwidG9wRHJvcFwiOmE9XG4kZDticmVhaztjYXNlIFwidG9wVG91Y2hDYW5jZWxcIjpjYXNlIFwidG9wVG91Y2hFbmRcIjpjYXNlIFwidG9wVG91Y2hNb3ZlXCI6Y2FzZSBcInRvcFRvdWNoU3RhcnRcIjphPWFlO2JyZWFrO2Nhc2UgXCJ0b3BBbmltYXRpb25FbmRcIjpjYXNlIFwidG9wQW5pbWF0aW9uSXRlcmF0aW9uXCI6Y2FzZSBcInRvcEFuaW1hdGlvblN0YXJ0XCI6YT1UZDticmVhaztjYXNlIFwidG9wVHJhbnNpdGlvbkVuZFwiOmE9YmU7YnJlYWs7Y2FzZSBcInRvcFNjcm9sbFwiOmE9YmQ7YnJlYWs7Y2FzZSBcInRvcFdoZWVsXCI6YT1jZTticmVhaztjYXNlIFwidG9wQ29weVwiOmNhc2UgXCJ0b3BDdXRcIjpjYXNlIFwidG9wUGFzdGVcIjphPVVkO2JyZWFrO2RlZmF1bHQ6YT1UfWI9YS5nZXRQb29sZWQoZSxiLGMsZCk7QWIoYik7cmV0dXJuIGJ9fTtzZD1mdW5jdGlvbihhLGIsYyxkKXthPWpiKGEsYixjLGQpO2tiKGEpO2xiKCExKX07aGIuaW5qZWN0RXZlbnRQbHVnaW5PcmRlcihcIlJlc3BvbmRlckV2ZW50UGx1Z2luIFNpbXBsZUV2ZW50UGx1Z2luIFRhcEV2ZW50UGx1Z2luIEVudGVyTGVhdmVFdmVudFBsdWdpbiBDaGFuZ2VFdmVudFBsdWdpbiBTZWxlY3RFdmVudFBsdWdpbiBCZWZvcmVJbnB1dEV2ZW50UGx1Z2luXCIuc3BsaXQoXCIgXCIpKTtcbldhPXNiLmdldEZpYmVyQ3VycmVudFByb3BzRnJvbU5vZGU7WGE9c2IuZ2V0SW5zdGFuY2VGcm9tTm9kZTtZYT1zYi5nZXROb2RlRnJvbUluc3RhbmNlO2hiLmluamVjdEV2ZW50UGx1Z2luc0J5TmFtZSh7U2ltcGxlRXZlbnRQbHVnaW46ZmUsRW50ZXJMZWF2ZUV2ZW50UGx1Z2luOmhkLENoYW5nZUV2ZW50UGx1Z2luOmFkLFNlbGVjdEV2ZW50UGx1Z2luOlNkLEJlZm9yZUlucHV0RXZlbnRQbHVnaW46aWN9KTt2YXIgZ2U9W10saGU9LTE7ZnVuY3Rpb24gVihhKXswPmhlfHwoYS5jdXJyZW50PWdlW2hlXSxnZVtoZV09bnVsbCxoZS0tKX1mdW5jdGlvbiBXKGEsYil7aGUrKztnZVtoZV09YS5jdXJyZW50O2EuY3VycmVudD1ifW5ldyBTZXQ7dmFyIGllPXtjdXJyZW50OkR9LFg9e2N1cnJlbnQ6ITF9LGplPUQ7ZnVuY3Rpb24ga2UoYSl7cmV0dXJuIGxlKGEpP2plOmllLmN1cnJlbnR9XG5mdW5jdGlvbiBtZShhLGIpe3ZhciBjPWEudHlwZS5jb250ZXh0VHlwZXM7aWYoIWMpcmV0dXJuIEQ7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoZCYmZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PT09YilyZXR1cm4gZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dDt2YXIgZT17fSxmO2ZvcihmIGluIGMpZVtmXT1iW2ZdO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1iLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9ZSk7cmV0dXJuIGV9ZnVuY3Rpb24gbGUoYSl7cmV0dXJuIDI9PT1hLnRhZyYmbnVsbCE9YS50eXBlLmNoaWxkQ29udGV4dFR5cGVzfWZ1bmN0aW9uIG5lKGEpe2xlKGEpJiYoVihYLGEpLFYoaWUsYSkpfVxuZnVuY3Rpb24gb2UoYSxiLGMpe251bGwhPWllLmN1cnNvcj9FKFwiMTY4XCIpOnZvaWQgMDtXKGllLGIsYSk7VyhYLGMsYSl9ZnVuY3Rpb24gcGUoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZSxkPWEudHlwZS5jaGlsZENvbnRleHRUeXBlcztpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgYy5nZXRDaGlsZENvbnRleHQpcmV0dXJuIGI7Yz1jLmdldENoaWxkQ29udGV4dCgpO2Zvcih2YXIgZSBpbiBjKWUgaW4gZD92b2lkIDA6RShcIjEwOFwiLGpkKGEpfHxcIlVua25vd25cIixlKTtyZXR1cm4gQih7fSxiLGMpfWZ1bmN0aW9uIHFlKGEpe2lmKCFsZShhKSlyZXR1cm4hMTt2YXIgYj1hLnN0YXRlTm9kZTtiPWImJmIuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHR8fEQ7amU9aWUuY3VycmVudDtXKGllLGIsYSk7VyhYLFguY3VycmVudCxhKTtyZXR1cm4hMH1cbmZ1bmN0aW9uIHJlKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7Yz92b2lkIDA6RShcIjE2OVwiKTtpZihiKXt2YXIgZD1wZShhLGplKTtjLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0PWQ7VihYLGEpO1YoaWUsYSk7VyhpZSxkLGEpfWVsc2UgVihYLGEpO1coWCxiLGEpfVxuZnVuY3Rpb24gWShhLGIsYyl7dGhpcy50YWc9YTt0aGlzLmtleT1iO3RoaXMuc3RhdGVOb2RlPXRoaXMudHlwZT1udWxsO3RoaXMuc2libGluZz10aGlzLmNoaWxkPXRoaXNbXCJyZXR1cm5cIl09bnVsbDt0aGlzLmluZGV4PTA7dGhpcy5tZW1vaXplZFN0YXRlPXRoaXMudXBkYXRlUXVldWU9dGhpcy5tZW1vaXplZFByb3BzPXRoaXMucGVuZGluZ1Byb3BzPXRoaXMucmVmPW51bGw7dGhpcy5pbnRlcm5hbENvbnRleHRUYWc9Yzt0aGlzLmVmZmVjdFRhZz0wO3RoaXMubGFzdEVmZmVjdD10aGlzLmZpcnN0RWZmZWN0PXRoaXMubmV4dEVmZmVjdD1udWxsO3RoaXMuZXhwaXJhdGlvblRpbWU9MDt0aGlzLmFsdGVybmF0ZT1udWxsfVxuZnVuY3Rpb24gc2UoYSxiLGMpe3ZhciBkPWEuYWx0ZXJuYXRlO251bGw9PT1kPyhkPW5ldyBZKGEudGFnLGEua2V5LGEuaW50ZXJuYWxDb250ZXh0VGFnKSxkLnR5cGU9YS50eXBlLGQuc3RhdGVOb2RlPWEuc3RhdGVOb2RlLGQuYWx0ZXJuYXRlPWEsYS5hbHRlcm5hdGU9ZCk6KGQuZWZmZWN0VGFnPTAsZC5uZXh0RWZmZWN0PW51bGwsZC5maXJzdEVmZmVjdD1udWxsLGQubGFzdEVmZmVjdD1udWxsKTtkLmV4cGlyYXRpb25UaW1lPWM7ZC5wZW5kaW5nUHJvcHM9YjtkLmNoaWxkPWEuY2hpbGQ7ZC5tZW1vaXplZFByb3BzPWEubWVtb2l6ZWRQcm9wcztkLm1lbW9pemVkU3RhdGU9YS5tZW1vaXplZFN0YXRlO2QudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZTtkLnNpYmxpbmc9YS5zaWJsaW5nO2QuaW5kZXg9YS5pbmRleDtkLnJlZj1hLnJlZjtyZXR1cm4gZH1cbmZ1bmN0aW9uIHRlKGEsYixjKXt2YXIgZD12b2lkIDAsZT1hLnR5cGUsZj1hLmtleTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZT8oZD1lLnByb3RvdHlwZSYmZS5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudD9uZXcgWSgyLGYsYik6bmV3IFkoMCxmLGIpLGQudHlwZT1lLGQucGVuZGluZ1Byb3BzPWEucHJvcHMpOlwic3RyaW5nXCI9PT10eXBlb2YgZT8oZD1uZXcgWSg1LGYsYiksZC50eXBlPWUsZC5wZW5kaW5nUHJvcHM9YS5wcm9wcyk6XCJvYmplY3RcIj09PXR5cGVvZiBlJiZudWxsIT09ZSYmXCJudW1iZXJcIj09PXR5cGVvZiBlLnRhZz8oZD1lLGQucGVuZGluZ1Byb3BzPWEucHJvcHMpOkUoXCIxMzBcIixudWxsPT1lP2U6dHlwZW9mIGUsXCJcIik7ZC5leHBpcmF0aW9uVGltZT1jO3JldHVybiBkfWZ1bmN0aW9uIHVlKGEsYixjLGQpe2I9bmV3IFkoMTAsZCxiKTtiLnBlbmRpbmdQcm9wcz1hO2IuZXhwaXJhdGlvblRpbWU9YztyZXR1cm4gYn1cbmZ1bmN0aW9uIHZlKGEsYixjKXtiPW5ldyBZKDYsbnVsbCxiKTtiLnBlbmRpbmdQcm9wcz1hO2IuZXhwaXJhdGlvblRpbWU9YztyZXR1cm4gYn1mdW5jdGlvbiB3ZShhLGIsYyl7Yj1uZXcgWSg3LGEua2V5LGIpO2IudHlwZT1hLmhhbmRsZXI7Yi5wZW5kaW5nUHJvcHM9YTtiLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGJ9ZnVuY3Rpb24geGUoYSxiLGMpe2E9bmV3IFkoOSxudWxsLGIpO2EuZXhwaXJhdGlvblRpbWU9YztyZXR1cm4gYX1mdW5jdGlvbiB5ZShhLGIsYyl7Yj1uZXcgWSg0LGEua2V5LGIpO2IucGVuZGluZ1Byb3BzPWEuY2hpbGRyZW58fFtdO2IuZXhwaXJhdGlvblRpbWU9YztiLnN0YXRlTm9kZT17Y29udGFpbmVySW5mbzphLmNvbnRhaW5lckluZm8scGVuZGluZ0NoaWxkcmVuOm51bGwsaW1wbGVtZW50YXRpb246YS5pbXBsZW1lbnRhdGlvbn07cmV0dXJuIGJ9dmFyIHplPW51bGwsQWU9bnVsbDtcbmZ1bmN0aW9uIEJlKGEpe3JldHVybiBmdW5jdGlvbihiKXt0cnl7cmV0dXJuIGEoYil9Y2F0Y2goYyl7fX19ZnVuY3Rpb24gQ2UoYSl7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18pcmV0dXJuITE7dmFyIGI9X19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fO2lmKGIuaXNEaXNhYmxlZHx8IWIuc3VwcG9ydHNGaWJlcilyZXR1cm4hMDt0cnl7dmFyIGM9Yi5pbmplY3QoYSk7emU9QmUoZnVuY3Rpb24oYSl7cmV0dXJuIGIub25Db21taXRGaWJlclJvb3QoYyxhKX0pO0FlPUJlKGZ1bmN0aW9uKGEpe3JldHVybiBiLm9uQ29tbWl0RmliZXJVbm1vdW50KGMsYSl9KX1jYXRjaChkKXt9cmV0dXJuITB9ZnVuY3Rpb24gRGUoYSl7XCJmdW5jdGlvblwiPT09dHlwZW9mIHplJiZ6ZShhKX1mdW5jdGlvbiBFZShhKXtcImZ1bmN0aW9uXCI9PT10eXBlb2YgQWUmJkFlKGEpfVxuZnVuY3Rpb24gRmUoYSl7cmV0dXJue2Jhc2VTdGF0ZTphLGV4cGlyYXRpb25UaW1lOjAsZmlyc3Q6bnVsbCxsYXN0Om51bGwsY2FsbGJhY2tMaXN0Om51bGwsaGFzRm9yY2VVcGRhdGU6ITEsaXNJbml0aWFsaXplZDohMX19ZnVuY3Rpb24gR2UoYSxiKXtudWxsPT09YS5sYXN0P2EuZmlyc3Q9YS5sYXN0PWI6KGEubGFzdC5uZXh0PWIsYS5sYXN0PWIpO2lmKDA9PT1hLmV4cGlyYXRpb25UaW1lfHxhLmV4cGlyYXRpb25UaW1lPmIuZXhwaXJhdGlvblRpbWUpYS5leHBpcmF0aW9uVGltZT1iLmV4cGlyYXRpb25UaW1lfVxuZnVuY3Rpb24gSGUoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZSxkPWEudXBkYXRlUXVldWU7bnVsbD09PWQmJihkPWEudXBkYXRlUXVldWU9RmUobnVsbCkpO251bGwhPT1jPyhhPWMudXBkYXRlUXVldWUsbnVsbD09PWEmJihhPWMudXBkYXRlUXVldWU9RmUobnVsbCkpKTphPW51bGw7YT1hIT09ZD9hOm51bGw7bnVsbD09PWE/R2UoZCxiKTpudWxsPT09ZC5sYXN0fHxudWxsPT09YS5sYXN0PyhHZShkLGIpLEdlKGEsYikpOihHZShkLGIpLGEubGFzdD1iKX1mdW5jdGlvbiBJZShhLGIsYyxkKXthPWEucGFydGlhbFN0YXRlO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2EuY2FsbChiLGMsZCk6YX1cbmZ1bmN0aW9uIEplKGEsYixjLGQsZSxmKXtudWxsIT09YSYmYS51cGRhdGVRdWV1ZT09PWMmJihjPWIudXBkYXRlUXVldWU9e2Jhc2VTdGF0ZTpjLmJhc2VTdGF0ZSxleHBpcmF0aW9uVGltZTpjLmV4cGlyYXRpb25UaW1lLGZpcnN0OmMuZmlyc3QsbGFzdDpjLmxhc3QsaXNJbml0aWFsaXplZDpjLmlzSW5pdGlhbGl6ZWQsY2FsbGJhY2tMaXN0Om51bGwsaGFzRm9yY2VVcGRhdGU6ITF9KTtjLmV4cGlyYXRpb25UaW1lPTA7Yy5pc0luaXRpYWxpemVkP2E9Yy5iYXNlU3RhdGU6KGE9Yy5iYXNlU3RhdGU9Yi5tZW1vaXplZFN0YXRlLGMuaXNJbml0aWFsaXplZD0hMCk7Zm9yKHZhciBnPSEwLGg9Yy5maXJzdCxrPSExO251bGwhPT1oOyl7dmFyIHE9aC5leHBpcmF0aW9uVGltZTtpZihxPmYpe3ZhciB2PWMuZXhwaXJhdGlvblRpbWU7aWYoMD09PXZ8fHY+cSljLmV4cGlyYXRpb25UaW1lPXE7a3x8KGs9ITAsYy5iYXNlU3RhdGU9YSl9ZWxzZXtrfHwoYy5maXJzdD1oLm5leHQsbnVsbD09PVxuYy5maXJzdCYmKGMubGFzdD1udWxsKSk7aWYoaC5pc1JlcGxhY2UpYT1JZShoLGQsYSxlKSxnPSEwO2Vsc2UgaWYocT1JZShoLGQsYSxlKSlhPWc/Qih7fSxhLHEpOkIoYSxxKSxnPSExO2guaXNGb3JjZWQmJihjLmhhc0ZvcmNlVXBkYXRlPSEwKTtudWxsIT09aC5jYWxsYmFjayYmKHE9Yy5jYWxsYmFja0xpc3QsbnVsbD09PXEmJihxPWMuY2FsbGJhY2tMaXN0PVtdKSxxLnB1c2goaCkpfWg9aC5uZXh0fW51bGwhPT1jLmNhbGxiYWNrTGlzdD9iLmVmZmVjdFRhZ3w9MzI6bnVsbCE9PWMuZmlyc3R8fGMuaGFzRm9yY2VVcGRhdGV8fChiLnVwZGF0ZVF1ZXVlPW51bGwpO2t8fChjLmJhc2VTdGF0ZT1hKTtyZXR1cm4gYX1cbmZ1bmN0aW9uIEtlKGEsYil7dmFyIGM9YS5jYWxsYmFja0xpc3Q7aWYobnVsbCE9PWMpZm9yKGEuY2FsbGJhY2tMaXN0PW51bGwsYT0wO2E8Yy5sZW5ndGg7YSsrKXt2YXIgZD1jW2FdLGU9ZC5jYWxsYmFjaztkLmNhbGxiYWNrPW51bGw7XCJmdW5jdGlvblwiIT09dHlwZW9mIGU/RShcIjE5MVwiLGUpOnZvaWQgMDtlLmNhbGwoYil9fVxuZnVuY3Rpb24gTGUoYSxiLGMsZCl7ZnVuY3Rpb24gZShhLGIpe2IudXBkYXRlcj1mO2Euc3RhdGVOb2RlPWI7Yi5fcmVhY3RJbnRlcm5hbEZpYmVyPWF9dmFyIGY9e2lzTW91bnRlZDpsZCxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oYyxkLGUpe2M9Yy5fcmVhY3RJbnRlcm5hbEZpYmVyO2U9dm9pZCAwPT09ZT9udWxsOmU7dmFyIGc9YihjKTtIZShjLHtleHBpcmF0aW9uVGltZTpnLHBhcnRpYWxTdGF0ZTpkLGNhbGxiYWNrOmUsaXNSZXBsYWNlOiExLGlzRm9yY2VkOiExLG5leHRDYWxsYmFjazpudWxsLG5leHQ6bnVsbH0pO2EoYyxnKX0sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbihjLGQsZSl7Yz1jLl9yZWFjdEludGVybmFsRmliZXI7ZT12b2lkIDA9PT1lP251bGw6ZTt2YXIgZz1iKGMpO0hlKGMse2V4cGlyYXRpb25UaW1lOmcscGFydGlhbFN0YXRlOmQsY2FsbGJhY2s6ZSxpc1JlcGxhY2U6ITAsaXNGb3JjZWQ6ITEsbmV4dENhbGxiYWNrOm51bGwsbmV4dDpudWxsfSk7XG5hKGMsZyl9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbihjLGQpe2M9Yy5fcmVhY3RJbnRlcm5hbEZpYmVyO2Q9dm9pZCAwPT09ZD9udWxsOmQ7dmFyIGU9YihjKTtIZShjLHtleHBpcmF0aW9uVGltZTplLHBhcnRpYWxTdGF0ZTpudWxsLGNhbGxiYWNrOmQsaXNSZXBsYWNlOiExLGlzRm9yY2VkOiEwLG5leHRDYWxsYmFjazpudWxsLG5leHQ6bnVsbH0pO2EoYyxlKX19O3JldHVybnthZG9wdENsYXNzSW5zdGFuY2U6ZSxjb25zdHJ1Y3RDbGFzc0luc3RhbmNlOmZ1bmN0aW9uKGEsYil7dmFyIGM9YS50eXBlLGQ9a2UoYSksZj0yPT09YS50YWcmJm51bGwhPWEudHlwZS5jb250ZXh0VHlwZXMsZz1mP21lKGEsZCk6RDtiPW5ldyBjKGIsZyk7ZShhLGIpO2YmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1kLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9Zyk7cmV0dXJuIGJ9LG1vdW50Q2xhc3NJbnN0YW5jZTpmdW5jdGlvbihhLFxuYil7dmFyIGM9YS5hbHRlcm5hdGUsZD1hLnN0YXRlTm9kZSxlPWQuc3RhdGV8fG51bGwsZz1hLnBlbmRpbmdQcm9wcztnP3ZvaWQgMDpFKFwiMTU4XCIpO3ZhciBoPWtlKGEpO2QucHJvcHM9ZztkLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZT1lO2QucmVmcz1EO2QuY29udGV4dD1tZShhLGgpO251bGwhPWEudHlwZSYmbnVsbCE9YS50eXBlLnByb3RvdHlwZSYmITA9PT1hLnR5cGUucHJvdG90eXBlLnVuc3RhYmxlX2lzQXN5bmNSZWFjdENvbXBvbmVudCYmKGEuaW50ZXJuYWxDb250ZXh0VGFnfD0xKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnRXaWxsTW91bnQmJihlPWQuc3RhdGUsZC5jb21wb25lbnRXaWxsTW91bnQoKSxlIT09ZC5zdGF0ZSYmZi5lbnF1ZXVlUmVwbGFjZVN0YXRlKGQsZC5zdGF0ZSxudWxsKSxlPWEudXBkYXRlUXVldWUsbnVsbCE9PWUmJihkLnN0YXRlPUplKGMsYSxlLGQsZyxiKSkpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZE1vdW50JiYoYS5lZmZlY3RUYWd8PVxuNCl9LHVwZGF0ZUNsYXNzSW5zdGFuY2U6ZnVuY3Rpb24oYSxiLGUpe3ZhciBnPWIuc3RhdGVOb2RlO2cucHJvcHM9Yi5tZW1vaXplZFByb3BzO2cuc3RhdGU9Yi5tZW1vaXplZFN0YXRlO3ZhciBoPWIubWVtb2l6ZWRQcm9wcyxrPWIucGVuZGluZ1Byb3BzO2t8fChrPWgsbnVsbD09az9FKFwiMTU5XCIpOnZvaWQgMCk7dmFyIHU9Zy5jb250ZXh0LHo9a2UoYik7ej1tZShiLHopO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fGg9PT1rJiZ1PT09enx8KHU9Zy5zdGF0ZSxnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoayx6KSxnLnN0YXRlIT09dSYmZi5lbnF1ZXVlUmVwbGFjZVN0YXRlKGcsZy5zdGF0ZSxudWxsKSk7dT1iLm1lbW9pemVkU3RhdGU7ZT1udWxsIT09Yi51cGRhdGVRdWV1ZT9KZShhLGIsYi51cGRhdGVRdWV1ZSxnLGssZSk6dTtpZighKGghPT1rfHx1IT09ZXx8WC5jdXJyZW50fHxudWxsIT09Yi51cGRhdGVRdWV1ZSYmYi51cGRhdGVRdWV1ZS5oYXNGb3JjZVVwZGF0ZSkpcmV0dXJuXCJmdW5jdGlvblwiIT09XG50eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJnU9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9NCksITE7dmFyIEc9aztpZihudWxsPT09aHx8bnVsbCE9PWIudXBkYXRlUXVldWUmJmIudXBkYXRlUXVldWUuaGFzRm9yY2VVcGRhdGUpRz0hMDtlbHNle3ZhciBJPWIuc3RhdGVOb2RlLEw9Yi50eXBlO0c9XCJmdW5jdGlvblwiPT09dHlwZW9mIEkuc2hvdWxkQ29tcG9uZW50VXBkYXRlP0kuc2hvdWxkQ29tcG9uZW50VXBkYXRlKEcsZSx6KTpMLnByb3RvdHlwZSYmTC5wcm90b3R5cGUuaXNQdXJlUmVhY3RDb21wb25lbnQ/IWVhKGgsRyl8fCFlYSh1LGUpOiEwfUc/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGUmJmcuY29tcG9uZW50V2lsbFVwZGF0ZShrLGUseiksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlJiYoYi5lZmZlY3RUYWd8PTQpKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxcbmg9PT1hLm1lbW9pemVkUHJvcHMmJnU9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9NCksYyhiLGspLGQoYixlKSk7Zy5wcm9wcz1rO2cuc3RhdGU9ZTtnLmNvbnRleHQ9ejtyZXR1cm4gR319fXZhciBRZT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2xbXCJmb3JcIl0sUmU9UWU/U3ltYm9sW1wiZm9yXCJdKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxTZT1RZT9TeW1ib2xbXCJmb3JcIl0oXCJyZWFjdC5jYWxsXCIpOjYwMTA0LFRlPVFlP1N5bWJvbFtcImZvclwiXShcInJlYWN0LnJldHVyblwiKTo2MDEwNSxVZT1RZT9TeW1ib2xbXCJmb3JcIl0oXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYsVmU9UWU/U3ltYm9sW1wiZm9yXCJdKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcsV2U9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO1xuZnVuY3Rpb24gWGUoYSl7aWYobnVsbD09PWF8fFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYSlyZXR1cm4gbnVsbDthPVdlJiZhW1dlXXx8YVtcIkBAaXRlcmF0b3JcIl07cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YTpudWxsfXZhciBZZT1BcnJheS5pc0FycmF5O1xuZnVuY3Rpb24gWmUoYSxiKXt2YXIgYz1iLnJlZjtpZihudWxsIT09YyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGMpe2lmKGIuX293bmVyKXtiPWIuX293bmVyO3ZhciBkPXZvaWQgMDtiJiYoMiE9PWIudGFnP0UoXCIxMTBcIik6dm9pZCAwLGQ9Yi5zdGF0ZU5vZGUpO2Q/dm9pZCAwOkUoXCIxNDdcIixjKTt2YXIgZT1cIlwiK2M7aWYobnVsbCE9PWEmJm51bGwhPT1hLnJlZiYmYS5yZWYuX3N0cmluZ1JlZj09PWUpcmV0dXJuIGEucmVmO2E9ZnVuY3Rpb24oYSl7dmFyIGI9ZC5yZWZzPT09RD9kLnJlZnM9e306ZC5yZWZzO251bGw9PT1hP2RlbGV0ZSBiW2VdOmJbZV09YX07YS5fc3RyaW5nUmVmPWU7cmV0dXJuIGF9XCJzdHJpbmdcIiE9PXR5cGVvZiBjP0UoXCIxNDhcIik6dm9pZCAwO2IuX293bmVyP3ZvaWQgMDpFKFwiMTQ5XCIsYyl9cmV0dXJuIGN9XG5mdW5jdGlvbiAkZShhLGIpe1widGV4dGFyZWFcIiE9PWEudHlwZSYmRShcIjMxXCIsXCJbb2JqZWN0IE9iamVjdF1cIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChiKT9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGIpLmpvaW4oXCIsIFwiKStcIn1cIjpiLFwiXCIpfVxuZnVuY3Rpb24gYWYoYSl7ZnVuY3Rpb24gYihiLGMpe2lmKGEpe3ZhciBkPWIubGFzdEVmZmVjdDtudWxsIT09ZD8oZC5uZXh0RWZmZWN0PWMsYi5sYXN0RWZmZWN0PWMpOmIuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PWM7Yy5uZXh0RWZmZWN0PW51bGw7Yy5lZmZlY3RUYWc9OH19ZnVuY3Rpb24gYyhjLGQpe2lmKCFhKXJldHVybiBudWxsO2Zvcig7bnVsbCE9PWQ7KWIoYyxkKSxkPWQuc2libGluZztyZXR1cm4gbnVsbH1mdW5jdGlvbiBkKGEsYil7Zm9yKGE9bmV3IE1hcDtudWxsIT09YjspbnVsbCE9PWIua2V5P2Euc2V0KGIua2V5LGIpOmEuc2V0KGIuaW5kZXgsYiksYj1iLnNpYmxpbmc7cmV0dXJuIGF9ZnVuY3Rpb24gZShhLGIsYyl7YT1zZShhLGIsYyk7YS5pbmRleD0wO2Euc2libGluZz1udWxsO3JldHVybiBhfWZ1bmN0aW9uIGYoYixjLGQpe2IuaW5kZXg9ZDtpZighYSlyZXR1cm4gYztkPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1kKXJldHVybiBkPWQuaW5kZXgsZDxjPyhiLmVmZmVjdFRhZz1cbjIsYyk6ZDtiLmVmZmVjdFRhZz0yO3JldHVybiBjfWZ1bmN0aW9uIGcoYil7YSYmbnVsbD09PWIuYWx0ZXJuYXRlJiYoYi5lZmZlY3RUYWc9Mik7cmV0dXJuIGJ9ZnVuY3Rpb24gaChhLGIsYyxkKXtpZihudWxsPT09Ynx8NiE9PWIudGFnKXJldHVybiBiPXZlKGMsYS5pbnRlcm5hbENvbnRleHRUYWcsZCksYltcInJldHVyblwiXT1hLGI7Yj1lKGIsYyxkKTtiW1wicmV0dXJuXCJdPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gayhhLGIsYyxkKXtpZihudWxsIT09YiYmYi50eXBlPT09Yy50eXBlKXJldHVybiBkPWUoYixjLnByb3BzLGQpLGQucmVmPVplKGIsYyksZFtcInJldHVyblwiXT1hLGQ7ZD10ZShjLGEuaW50ZXJuYWxDb250ZXh0VGFnLGQpO2QucmVmPVplKGIsYyk7ZFtcInJldHVyblwiXT1hO3JldHVybiBkfWZ1bmN0aW9uIHEoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDchPT1iLnRhZylyZXR1cm4gYj13ZShjLGEuaW50ZXJuYWxDb250ZXh0VGFnLGQpLGJbXCJyZXR1cm5cIl09YSxiO2I9ZShiLGMsZCk7XG5iW1wicmV0dXJuXCJdPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gdihhLGIsYyxkKXtpZihudWxsPT09Ynx8OSE9PWIudGFnKXJldHVybiBiPXhlKGMsYS5pbnRlcm5hbENvbnRleHRUYWcsZCksYi50eXBlPWMudmFsdWUsYltcInJldHVyblwiXT1hLGI7Yj1lKGIsbnVsbCxkKTtiLnR5cGU9Yy52YWx1ZTtiW1wicmV0dXJuXCJdPWE7cmV0dXJuIGJ9ZnVuY3Rpb24geShhLGIsYyxkKXtpZihudWxsPT09Ynx8NCE9PWIudGFnfHxiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvIT09Yy5jb250YWluZXJJbmZvfHxiLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbiE9PWMuaW1wbGVtZW50YXRpb24pcmV0dXJuIGI9eWUoYyxhLmludGVybmFsQ29udGV4dFRhZyxkKSxiW1wicmV0dXJuXCJdPWEsYjtiPWUoYixjLmNoaWxkcmVufHxbXSxkKTtiW1wicmV0dXJuXCJdPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gdShhLGIsYyxkLGYpe2lmKG51bGw9PT1ifHwxMCE9PWIudGFnKXJldHVybiBiPXVlKGMsYS5pbnRlcm5hbENvbnRleHRUYWcsXG5kLGYpLGJbXCJyZXR1cm5cIl09YSxiO2I9ZShiLGMsZCk7YltcInJldHVyblwiXT1hO3JldHVybiBifWZ1bmN0aW9uIHooYSxiLGMpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYnx8XCJudW1iZXJcIj09PXR5cGVvZiBiKXJldHVybiBiPXZlKFwiXCIrYixhLmludGVybmFsQ29udGV4dFRhZyxjKSxiW1wicmV0dXJuXCJdPWEsYjtpZihcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iKXtzd2l0Y2goYi4kJHR5cGVvZil7Y2FzZSBSZTppZihiLnR5cGU9PT1WZSlyZXR1cm4gYj11ZShiLnByb3BzLmNoaWxkcmVuLGEuaW50ZXJuYWxDb250ZXh0VGFnLGMsYi5rZXkpLGJbXCJyZXR1cm5cIl09YSxiO2M9dGUoYixhLmludGVybmFsQ29udGV4dFRhZyxjKTtjLnJlZj1aZShudWxsLGIpO2NbXCJyZXR1cm5cIl09YTtyZXR1cm4gYztjYXNlIFNlOnJldHVybiBiPXdlKGIsYS5pbnRlcm5hbENvbnRleHRUYWcsYyksYltcInJldHVyblwiXT1hLGI7Y2FzZSBUZTpyZXR1cm4gYz14ZShiLGEuaW50ZXJuYWxDb250ZXh0VGFnLFxuYyksYy50eXBlPWIudmFsdWUsY1tcInJldHVyblwiXT1hLGM7Y2FzZSBVZTpyZXR1cm4gYj15ZShiLGEuaW50ZXJuYWxDb250ZXh0VGFnLGMpLGJbXCJyZXR1cm5cIl09YSxifWlmKFllKGIpfHxYZShiKSlyZXR1cm4gYj11ZShiLGEuaW50ZXJuYWxDb250ZXh0VGFnLGMsbnVsbCksYltcInJldHVyblwiXT1hLGI7JGUoYSxiKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBHKGEsYixjLGQpe3ZhciBlPW51bGwhPT1iP2Iua2V5Om51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBjfHxcIm51bWJlclwiPT09dHlwZW9mIGMpcmV0dXJuIG51bGwhPT1lP251bGw6aChhLGIsXCJcIitjLGQpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWMpe3N3aXRjaChjLiQkdHlwZW9mKXtjYXNlIFJlOnJldHVybiBjLmtleT09PWU/Yy50eXBlPT09VmU/dShhLGIsYy5wcm9wcy5jaGlsZHJlbixkLGUpOmsoYSxiLGMsZCk6bnVsbDtjYXNlIFNlOnJldHVybiBjLmtleT09PWU/cShhLGIsYyxkKTpudWxsO2Nhc2UgVGU6cmV0dXJuIG51bGw9PT1cbmU/dihhLGIsYyxkKTpudWxsO2Nhc2UgVWU6cmV0dXJuIGMua2V5PT09ZT95KGEsYixjLGQpOm51bGx9aWYoWWUoYyl8fFhlKGMpKXJldHVybiBudWxsIT09ZT9udWxsOnUoYSxiLGMsZCxudWxsKTskZShhLGMpfXJldHVybiBudWxsfWZ1bmN0aW9uIEkoYSxiLGMsZCxlKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGR8fFwibnVtYmVyXCI9PT10eXBlb2YgZClyZXR1cm4gYT1hLmdldChjKXx8bnVsbCxoKGIsYSxcIlwiK2QsZSk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBkJiZudWxsIT09ZCl7c3dpdGNoKGQuJCR0eXBlb2Ype2Nhc2UgUmU6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGQudHlwZT09PVZlP3UoYixhLGQucHJvcHMuY2hpbGRyZW4sZSxkLmtleSk6ayhiLGEsZCxlKTtjYXNlIFNlOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxxKGIsYSxkLGUpO2Nhc2UgVGU6cmV0dXJuIGE9YS5nZXQoYyl8fG51bGwsdihiLGEsZCxlKTtjYXNlIFVlOnJldHVybiBhPVxuYS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLHkoYixhLGQsZSl9aWYoWWUoZCl8fFhlKGQpKXJldHVybiBhPWEuZ2V0KGMpfHxudWxsLHUoYixhLGQsZSxudWxsKTskZShiLGQpfXJldHVybiBudWxsfWZ1bmN0aW9uIEwoZSxnLG0sQSl7Zm9yKHZhciBoPW51bGwscj1udWxsLG49Zyx3PWc9MCxrPW51bGw7bnVsbCE9PW4mJnc8bS5sZW5ndGg7dysrKXtuLmluZGV4Pnc/KGs9bixuPW51bGwpOms9bi5zaWJsaW5nO3ZhciB4PUcoZSxuLG1bd10sQSk7aWYobnVsbD09PXgpe251bGw9PT1uJiYobj1rKTticmVha31hJiZuJiZudWxsPT09eC5hbHRlcm5hdGUmJmIoZSxuKTtnPWYoeCxnLHcpO251bGw9PT1yP2g9eDpyLnNpYmxpbmc9eDtyPXg7bj1rfWlmKHc9PT1tLmxlbmd0aClyZXR1cm4gYyhlLG4pLGg7aWYobnVsbD09PW4pe2Zvcig7dzxtLmxlbmd0aDt3KyspaWYobj16KGUsbVt3XSxBKSlnPWYobixnLHcpLG51bGw9PT1yP2g9bjpyLnNpYmxpbmc9bixyPW47cmV0dXJuIGh9Zm9yKG49XG5kKGUsbik7dzxtLmxlbmd0aDt3KyspaWYoaz1JKG4sZSx3LG1bd10sQSkpe2lmKGEmJm51bGwhPT1rLmFsdGVybmF0ZSluW1wiZGVsZXRlXCJdKG51bGw9PT1rLmtleT93Omsua2V5KTtnPWYoayxnLHcpO251bGw9PT1yP2g9azpyLnNpYmxpbmc9aztyPWt9YSYmbi5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gaH1mdW5jdGlvbiBOKGUsZyxtLEEpe3ZhciBoPVhlKG0pO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBoP0UoXCIxNTBcIik6dm9pZCAwO209aC5jYWxsKG0pO251bGw9PW0/RShcIjE1MVwiKTp2b2lkIDA7Zm9yKHZhciByPWg9bnVsbCxuPWcsdz1nPTAsaz1udWxsLHg9bS5uZXh0KCk7bnVsbCE9PW4mJiF4LmRvbmU7dysrLHg9bS5uZXh0KCkpe24uaW5kZXg+dz8oaz1uLG49bnVsbCk6az1uLnNpYmxpbmc7dmFyIEo9RyhlLG4seC52YWx1ZSxBKTtpZihudWxsPT09Sil7bnx8KG49ayk7YnJlYWt9YSYmbiYmbnVsbD09PUouYWx0ZXJuYXRlJiZiKGUsbik7Zz1mKEosXG5nLHcpO251bGw9PT1yP2g9SjpyLnNpYmxpbmc9SjtyPUo7bj1rfWlmKHguZG9uZSlyZXR1cm4gYyhlLG4pLGg7aWYobnVsbD09PW4pe2Zvcig7IXguZG9uZTt3KysseD1tLm5leHQoKSl4PXooZSx4LnZhbHVlLEEpLG51bGwhPT14JiYoZz1mKHgsZyx3KSxudWxsPT09cj9oPXg6ci5zaWJsaW5nPXgscj14KTtyZXR1cm4gaH1mb3Iobj1kKGUsbik7IXguZG9uZTt3KysseD1tLm5leHQoKSlpZih4PUkobixlLHcseC52YWx1ZSxBKSxudWxsIT09eCl7aWYoYSYmbnVsbCE9PXguYWx0ZXJuYXRlKW5bXCJkZWxldGVcIl0obnVsbD09PXgua2V5P3c6eC5rZXkpO2c9Zih4LGcsdyk7bnVsbD09PXI/aD14OnIuc2libGluZz14O3I9eH1hJiZuLmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBofXJldHVybiBmdW5jdGlvbihhLGQsZixoKXtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mJiZmLnR5cGU9PT1WZSYmbnVsbD09PWYua2V5JiYoZj1mLnByb3BzLmNoaWxkcmVuKTtcbnZhciBtPVwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY7aWYobSlzd2l0Y2goZi4kJHR5cGVvZil7Y2FzZSBSZTphOnt2YXIgcj1mLmtleTtmb3IobT1kO251bGwhPT1tOyl7aWYobS5rZXk9PT1yKWlmKDEwPT09bS50YWc/Zi50eXBlPT09VmU6bS50eXBlPT09Zi50eXBlKXtjKGEsbS5zaWJsaW5nKTtkPWUobSxmLnR5cGU9PT1WZT9mLnByb3BzLmNoaWxkcmVuOmYucHJvcHMsaCk7ZC5yZWY9WmUobSxmKTtkW1wicmV0dXJuXCJdPWE7YT1kO2JyZWFrIGF9ZWxzZXtjKGEsbSk7YnJlYWt9ZWxzZSBiKGEsbSk7bT1tLnNpYmxpbmd9Zi50eXBlPT09VmU/KGQ9dWUoZi5wcm9wcy5jaGlsZHJlbixhLmludGVybmFsQ29udGV4dFRhZyxoLGYua2V5KSxkW1wicmV0dXJuXCJdPWEsYT1kKTooaD10ZShmLGEuaW50ZXJuYWxDb250ZXh0VGFnLGgpLGgucmVmPVplKGQsZiksaFtcInJldHVyblwiXT1hLGE9aCl9cmV0dXJuIGcoYSk7Y2FzZSBTZTphOntmb3IobT1mLmtleTtudWxsIT09ZDspe2lmKGQua2V5PT09XG5tKWlmKDc9PT1kLnRhZyl7YyhhLGQuc2libGluZyk7ZD1lKGQsZixoKTtkW1wicmV0dXJuXCJdPWE7YT1kO2JyZWFrIGF9ZWxzZXtjKGEsZCk7YnJlYWt9ZWxzZSBiKGEsZCk7ZD1kLnNpYmxpbmd9ZD13ZShmLGEuaW50ZXJuYWxDb250ZXh0VGFnLGgpO2RbXCJyZXR1cm5cIl09YTthPWR9cmV0dXJuIGcoYSk7Y2FzZSBUZTphOntpZihudWxsIT09ZClpZig5PT09ZC50YWcpe2MoYSxkLnNpYmxpbmcpO2Q9ZShkLG51bGwsaCk7ZC50eXBlPWYudmFsdWU7ZFtcInJldHVyblwiXT1hO2E9ZDticmVhayBhfWVsc2UgYyhhLGQpO2Q9eGUoZixhLmludGVybmFsQ29udGV4dFRhZyxoKTtkLnR5cGU9Zi52YWx1ZTtkW1wicmV0dXJuXCJdPWE7YT1kfXJldHVybiBnKGEpO2Nhc2UgVWU6YTp7Zm9yKG09Zi5rZXk7bnVsbCE9PWQ7KXtpZihkLmtleT09PW0paWYoND09PWQudGFnJiZkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvPT09Zi5jb250YWluZXJJbmZvJiZkLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbj09PVxuZi5pbXBsZW1lbnRhdGlvbil7YyhhLGQuc2libGluZyk7ZD1lKGQsZi5jaGlsZHJlbnx8W10saCk7ZFtcInJldHVyblwiXT1hO2E9ZDticmVhayBhfWVsc2V7YyhhLGQpO2JyZWFrfWVsc2UgYihhLGQpO2Q9ZC5zaWJsaW5nfWQ9eWUoZixhLmludGVybmFsQ29udGV4dFRhZyxoKTtkW1wicmV0dXJuXCJdPWE7YT1kfXJldHVybiBnKGEpfWlmKFwic3RyaW5nXCI9PT10eXBlb2YgZnx8XCJudW1iZXJcIj09PXR5cGVvZiBmKXJldHVybiBmPVwiXCIrZixudWxsIT09ZCYmNj09PWQudGFnPyhjKGEsZC5zaWJsaW5nKSxkPWUoZCxmLGgpKTooYyhhLGQpLGQ9dmUoZixhLmludGVybmFsQ29udGV4dFRhZyxoKSksZFtcInJldHVyblwiXT1hLGE9ZCxnKGEpO2lmKFllKGYpKXJldHVybiBMKGEsZCxmLGgpO2lmKFhlKGYpKXJldHVybiBOKGEsZCxmLGgpO20mJiRlKGEsZik7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBmKXN3aXRjaChhLnRhZyl7Y2FzZSAyOmNhc2UgMTpoPWEudHlwZSxFKFwiMTUyXCIsaC5kaXNwbGF5TmFtZXx8XG5oLm5hbWV8fFwiQ29tcG9uZW50XCIpfXJldHVybiBjKGEsZCl9fXZhciBiZj1hZighMCksY2Y9YWYoITEpO1xuZnVuY3Rpb24gZGYoYSxiLGMsZCxlKXtmdW5jdGlvbiBmKGEsYixjKXt2YXIgZD1iLmV4cGlyYXRpb25UaW1lO2IuY2hpbGQ9bnVsbD09PWE/Y2YoYixudWxsLGMsZCk6YmYoYixhLmNoaWxkLGMsZCl9ZnVuY3Rpb24gZyhhLGIpe3ZhciBjPWIucmVmO251bGw9PT1jfHxhJiZhLnJlZj09PWN8fChiLmVmZmVjdFRhZ3w9MTI4KX1mdW5jdGlvbiBoKGEsYixjLGQpe2coYSxiKTtpZighYylyZXR1cm4gZCYmcmUoYiwhMSkscShhLGIpO2M9Yi5zdGF0ZU5vZGU7aWQuY3VycmVudD1iO3ZhciBlPWMucmVuZGVyKCk7Yi5lZmZlY3RUYWd8PTE7ZihhLGIsZSk7Yi5tZW1vaXplZFN0YXRlPWMuc3RhdGU7Yi5tZW1vaXplZFByb3BzPWMucHJvcHM7ZCYmcmUoYiwhMCk7cmV0dXJuIGIuY2hpbGR9ZnVuY3Rpb24gayhhKXt2YXIgYj1hLnN0YXRlTm9kZTtiLnBlbmRpbmdDb250ZXh0P29lKGEsYi5wZW5kaW5nQ29udGV4dCxiLnBlbmRpbmdDb250ZXh0IT09Yi5jb250ZXh0KTpiLmNvbnRleHQmJm9lKGEsXG5iLmNvbnRleHQsITEpO0koYSxiLmNvbnRhaW5lckluZm8pfWZ1bmN0aW9uIHEoYSxiKXtudWxsIT09YSYmYi5jaGlsZCE9PWEuY2hpbGQ/RShcIjE1M1wiKTp2b2lkIDA7aWYobnVsbCE9PWIuY2hpbGQpe2E9Yi5jaGlsZDt2YXIgYz1zZShhLGEucGVuZGluZ1Byb3BzLGEuZXhwaXJhdGlvblRpbWUpO2IuY2hpbGQ9Yztmb3IoY1tcInJldHVyblwiXT1iO251bGwhPT1hLnNpYmxpbmc7KWE9YS5zaWJsaW5nLGM9Yy5zaWJsaW5nPXNlKGEsYS5wZW5kaW5nUHJvcHMsYS5leHBpcmF0aW9uVGltZSksY1tcInJldHVyblwiXT1iO2Muc2libGluZz1udWxsfXJldHVybiBiLmNoaWxkfWZ1bmN0aW9uIHYoYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMzprKGIpO2JyZWFrO2Nhc2UgMjpxZShiKTticmVhaztjYXNlIDQ6SShiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pfXJldHVybiBudWxsfXZhciB5PWEuc2hvdWxkU2V0VGV4dENvbnRlbnQsdT1hLnVzZVN5bmNTY2hlZHVsaW5nLHo9YS5zaG91bGREZXByaW9yaXRpemVTdWJ0cmVlLFxuRz1iLnB1c2hIb3N0Q29udGV4dCxJPWIucHVzaEhvc3RDb250YWluZXIsTD1jLmVudGVySHlkcmF0aW9uU3RhdGUsTj1jLnJlc2V0SHlkcmF0aW9uU3RhdGUsSj1jLnRyeVRvQ2xhaW1OZXh0SHlkcmF0YWJsZUluc3RhbmNlO2E9TGUoZCxlLGZ1bmN0aW9uKGEsYil7YS5tZW1vaXplZFByb3BzPWJ9LGZ1bmN0aW9uKGEsYil7YS5tZW1vaXplZFN0YXRlPWJ9KTt2YXIgdz1hLmFkb3B0Q2xhc3NJbnN0YW5jZSxtPWEuY29uc3RydWN0Q2xhc3NJbnN0YW5jZSxBPWEubW91bnRDbGFzc0luc3RhbmNlLE9iPWEudXBkYXRlQ2xhc3NJbnN0YW5jZTtyZXR1cm57YmVnaW5Xb3JrOmZ1bmN0aW9uKGEsYixjKXtpZigwPT09Yi5leHBpcmF0aW9uVGltZXx8Yi5leHBpcmF0aW9uVGltZT5jKXJldHVybiB2KGEsYik7c3dpdGNoKGIudGFnKXtjYXNlIDA6bnVsbCE9PWE/RShcIjE1NVwiKTp2b2lkIDA7dmFyIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMscj1rZShiKTtyPW1lKGIscik7ZD1kKGUscik7Yi5lZmZlY3RUYWd8PVxuMTtcIm9iamVjdFwiPT09dHlwZW9mIGQmJm51bGwhPT1kJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5yZW5kZXI/KGIudGFnPTIsZT1xZShiKSx3KGIsZCksQShiLGMpLGI9aChhLGIsITAsZSkpOihiLnRhZz0xLGYoYSxiLGQpLGIubWVtb2l6ZWRQcm9wcz1lLGI9Yi5jaGlsZCk7cmV0dXJuIGI7Y2FzZSAxOmE6e2U9Yi50eXBlO2M9Yi5wZW5kaW5nUHJvcHM7ZD1iLm1lbW9pemVkUHJvcHM7aWYoWC5jdXJyZW50KW51bGw9PT1jJiYoYz1kKTtlbHNlIGlmKG51bGw9PT1jfHxkPT09Yyl7Yj1xKGEsYik7YnJlYWsgYX1kPWtlKGIpO2Q9bWUoYixkKTtlPWUoYyxkKTtiLmVmZmVjdFRhZ3w9MTtmKGEsYixlKTtiLm1lbW9pemVkUHJvcHM9YztiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSAyOnJldHVybiBlPXFlKGIpLGQ9dm9pZCAwLG51bGw9PT1hP2Iuc3RhdGVOb2RlP0UoXCIxNTNcIik6KG0oYixiLnBlbmRpbmdQcm9wcyksQShiLGMpLGQ9ITApOmQ9T2IoYSxiLGMpLGgoYSxiLGQsZSk7Y2FzZSAzOnJldHVybiBrKGIpLFxuZT1iLnVwZGF0ZVF1ZXVlLG51bGwhPT1lPyhkPWIubWVtb2l6ZWRTdGF0ZSxlPUplKGEsYixlLG51bGwsbnVsbCxjKSxkPT09ZT8oTigpLGI9cShhLGIpKTooZD1lLmVsZW1lbnQscj1iLnN0YXRlTm9kZSwobnVsbD09PWF8fG51bGw9PT1hLmNoaWxkKSYmci5oeWRyYXRlJiZMKGIpPyhiLmVmZmVjdFRhZ3w9MixiLmNoaWxkPWNmKGIsbnVsbCxkLGMpKTooTigpLGYoYSxiLGQpKSxiLm1lbW9pemVkU3RhdGU9ZSxiPWIuY2hpbGQpKTooTigpLGI9cShhLGIpKSxiO2Nhc2UgNTpHKGIpO251bGw9PT1hJiZKKGIpO2U9Yi50eXBlO3ZhciBuPWIubWVtb2l6ZWRQcm9wcztkPWIucGVuZGluZ1Byb3BzO251bGw9PT1kJiYoZD1uLG51bGw9PT1kP0UoXCIxNTRcIik6dm9pZCAwKTtyPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpudWxsO1guY3VycmVudHx8bnVsbCE9PWQmJm4hPT1kPyhuPWQuY2hpbGRyZW4seShlLGQpP249bnVsbDpyJiZ5KGUscikmJihiLmVmZmVjdFRhZ3w9MTYpLGcoYSxiKSxcbjIxNDc0ODM2NDchPT1jJiYhdSYmeihlLGQpPyhiLmV4cGlyYXRpb25UaW1lPTIxNDc0ODM2NDcsYj1udWxsKTooZihhLGIsbiksYi5tZW1vaXplZFByb3BzPWQsYj1iLmNoaWxkKSk6Yj1xKGEsYik7cmV0dXJuIGI7Y2FzZSA2OnJldHVybiBudWxsPT09YSYmSihiKSxhPWIucGVuZGluZ1Byb3BzLG51bGw9PT1hJiYoYT1iLm1lbW9pemVkUHJvcHMpLGIubWVtb2l6ZWRQcm9wcz1hLG51bGw7Y2FzZSA4OmIudGFnPTc7Y2FzZSA3OmU9Yi5wZW5kaW5nUHJvcHM7aWYoWC5jdXJyZW50KW51bGw9PT1lJiYoZT1hJiZhLm1lbW9pemVkUHJvcHMsbnVsbD09PWU/RShcIjE1NFwiKTp2b2lkIDApO2Vsc2UgaWYobnVsbD09PWV8fGIubWVtb2l6ZWRQcm9wcz09PWUpZT1iLm1lbW9pemVkUHJvcHM7ZD1lLmNoaWxkcmVuO2Iuc3RhdGVOb2RlPW51bGw9PT1hP2NmKGIsYi5zdGF0ZU5vZGUsZCxjKTpiZihiLGIuc3RhdGVOb2RlLGQsYyk7Yi5tZW1vaXplZFByb3BzPWU7cmV0dXJuIGIuc3RhdGVOb2RlO1xuY2FzZSA5OnJldHVybiBudWxsO2Nhc2UgNDphOntJKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyk7ZT1iLnBlbmRpbmdQcm9wcztpZihYLmN1cnJlbnQpbnVsbD09PWUmJihlPWEmJmEubWVtb2l6ZWRQcm9wcyxudWxsPT1lP0UoXCIxNTRcIik6dm9pZCAwKTtlbHNlIGlmKG51bGw9PT1lfHxiLm1lbW9pemVkUHJvcHM9PT1lKXtiPXEoYSxiKTticmVhayBhfW51bGw9PT1hP2IuY2hpbGQ9YmYoYixudWxsLGUsYyk6ZihhLGIsZSk7Yi5tZW1vaXplZFByb3BzPWU7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgMTA6YTp7Yz1iLnBlbmRpbmdQcm9wcztpZihYLmN1cnJlbnQpbnVsbD09PWMmJihjPWIubWVtb2l6ZWRQcm9wcyk7ZWxzZSBpZihudWxsPT09Y3x8Yi5tZW1vaXplZFByb3BzPT09Yyl7Yj1xKGEsYik7YnJlYWsgYX1mKGEsYixjKTtiLm1lbW9pemVkUHJvcHM9YztiPWIuY2hpbGR9cmV0dXJuIGI7ZGVmYXVsdDpFKFwiMTU2XCIpfX0sYmVnaW5GYWlsZWRXb3JrOmZ1bmN0aW9uKGEsYixcbmMpe3N3aXRjaChiLnRhZyl7Y2FzZSAyOnFlKGIpO2JyZWFrO2Nhc2UgMzprKGIpO2JyZWFrO2RlZmF1bHQ6RShcIjE1N1wiKX1iLmVmZmVjdFRhZ3w9NjQ7bnVsbD09PWE/Yi5jaGlsZD1udWxsOmIuY2hpbGQhPT1hLmNoaWxkJiYoYi5jaGlsZD1hLmNoaWxkKTtpZigwPT09Yi5leHBpcmF0aW9uVGltZXx8Yi5leHBpcmF0aW9uVGltZT5jKXJldHVybiB2KGEsYik7Yi5maXJzdEVmZmVjdD1udWxsO2IubGFzdEVmZmVjdD1udWxsO2IuY2hpbGQ9bnVsbD09PWE/Y2YoYixudWxsLG51bGwsYyk6YmYoYixhLmNoaWxkLG51bGwsYyk7Mj09PWIudGFnJiYoYT1iLnN0YXRlTm9kZSxiLm1lbW9pemVkUHJvcHM9YS5wcm9wcyxiLm1lbW9pemVkU3RhdGU9YS5zdGF0ZSk7cmV0dXJuIGIuY2hpbGR9fX1cbmZ1bmN0aW9uIGVmKGEsYixjKXtmdW5jdGlvbiBkKGEpe2EuZWZmZWN0VGFnfD00fXZhciBlPWEuY3JlYXRlSW5zdGFuY2UsZj1hLmNyZWF0ZVRleHRJbnN0YW5jZSxnPWEuYXBwZW5kSW5pdGlhbENoaWxkLGg9YS5maW5hbGl6ZUluaXRpYWxDaGlsZHJlbixrPWEucHJlcGFyZVVwZGF0ZSxxPWEucGVyc2lzdGVuY2Usdj1iLmdldFJvb3RIb3N0Q29udGFpbmVyLHk9Yi5wb3BIb3N0Q29udGV4dCx1PWIuZ2V0SG9zdENvbnRleHQsej1iLnBvcEhvc3RDb250YWluZXIsRz1jLnByZXBhcmVUb0h5ZHJhdGVIb3N0SW5zdGFuY2UsST1jLnByZXBhcmVUb0h5ZHJhdGVIb3N0VGV4dEluc3RhbmNlLEw9Yy5wb3BIeWRyYXRpb25TdGF0ZSxOPXZvaWQgMCxKPXZvaWQgMCx3PXZvaWQgMDthLm11dGF0aW9uPyhOPWZ1bmN0aW9uKCl7fSxKPWZ1bmN0aW9uKGEsYixjKXsoYi51cGRhdGVRdWV1ZT1jKSYmZChiKX0sdz1mdW5jdGlvbihhLGIsYyxlKXtjIT09ZSYmZChiKX0pOnE/RShcIjIzNVwiKTpFKFwiMjM2XCIpO1xucmV0dXJue2NvbXBsZXRlV29yazpmdW5jdGlvbihhLGIsYyl7dmFyIG09Yi5wZW5kaW5nUHJvcHM7aWYobnVsbD09PW0pbT1iLm1lbW9pemVkUHJvcHM7ZWxzZSBpZigyMTQ3NDgzNjQ3IT09Yi5leHBpcmF0aW9uVGltZXx8MjE0NzQ4MzY0Nz09PWMpYi5wZW5kaW5nUHJvcHM9bnVsbDtzd2l0Y2goYi50YWcpe2Nhc2UgMTpyZXR1cm4gbnVsbDtjYXNlIDI6cmV0dXJuIG5lKGIpLG51bGw7Y2FzZSAzOnooYik7VihYLGIpO1YoaWUsYik7bT1iLnN0YXRlTm9kZTttLnBlbmRpbmdDb250ZXh0JiYobS5jb250ZXh0PW0ucGVuZGluZ0NvbnRleHQsbS5wZW5kaW5nQ29udGV4dD1udWxsKTtpZihudWxsPT09YXx8bnVsbD09PWEuY2hpbGQpTChiKSxiLmVmZmVjdFRhZyY9LTM7TihiKTtyZXR1cm4gbnVsbDtjYXNlIDU6eShiKTtjPXYoKTt2YXIgQT1iLnR5cGU7aWYobnVsbCE9PWEmJm51bGwhPWIuc3RhdGVOb2RlKXt2YXIgcD1hLm1lbW9pemVkUHJvcHMscT1iLnN0YXRlTm9kZSx4PXUoKTtxPVxuayhxLEEscCxtLGMseCk7SihhLGIscSxBLHAsbSxjKTthLnJlZiE9PWIucmVmJiYoYi5lZmZlY3RUYWd8PTEyOCl9ZWxzZXtpZighbSlyZXR1cm4gbnVsbD09PWIuc3RhdGVOb2RlP0UoXCIxNjZcIik6dm9pZCAwLG51bGw7YT11KCk7aWYoTChiKSlHKGIsYyxhKSYmZChiKTtlbHNle2E9ZShBLG0sYyxhLGIpO2E6Zm9yKHA9Yi5jaGlsZDtudWxsIT09cDspe2lmKDU9PT1wLnRhZ3x8Nj09PXAudGFnKWcoYSxwLnN0YXRlTm9kZSk7ZWxzZSBpZig0IT09cC50YWcmJm51bGwhPT1wLmNoaWxkKXtwLmNoaWxkW1wicmV0dXJuXCJdPXA7cD1wLmNoaWxkO2NvbnRpbnVlfWlmKHA9PT1iKWJyZWFrO2Zvcig7bnVsbD09PXAuc2libGluZzspe2lmKG51bGw9PT1wW1wicmV0dXJuXCJdfHxwW1wicmV0dXJuXCJdPT09YilicmVhayBhO3A9cFtcInJldHVyblwiXX1wLnNpYmxpbmdbXCJyZXR1cm5cIl09cFtcInJldHVyblwiXTtwPXAuc2libGluZ31oKGEsQSxtLGMpJiZkKGIpO2Iuc3RhdGVOb2RlPWF9bnVsbCE9PWIucmVmJiZcbihiLmVmZmVjdFRhZ3w9MTI4KX1yZXR1cm4gbnVsbDtjYXNlIDY6aWYoYSYmbnVsbCE9Yi5zdGF0ZU5vZGUpdyhhLGIsYS5tZW1vaXplZFByb3BzLG0pO2Vsc2V7aWYoXCJzdHJpbmdcIiE9PXR5cGVvZiBtKXJldHVybiBudWxsPT09Yi5zdGF0ZU5vZGU/RShcIjE2NlwiKTp2b2lkIDAsbnVsbDthPXYoKTtjPXUoKTtMKGIpP0koYikmJmQoYik6Yi5zdGF0ZU5vZGU9ZihtLGEsYyxiKX1yZXR1cm4gbnVsbDtjYXNlIDc6KG09Yi5tZW1vaXplZFByb3BzKT92b2lkIDA6RShcIjE2NVwiKTtiLnRhZz04O0E9W107YTpmb3IoKHA9Yi5zdGF0ZU5vZGUpJiYocFtcInJldHVyblwiXT1iKTtudWxsIT09cDspe2lmKDU9PT1wLnRhZ3x8Nj09PXAudGFnfHw0PT09cC50YWcpRShcIjI0N1wiKTtlbHNlIGlmKDk9PT1wLnRhZylBLnB1c2gocC50eXBlKTtlbHNlIGlmKG51bGwhPT1wLmNoaWxkKXtwLmNoaWxkW1wicmV0dXJuXCJdPXA7cD1wLmNoaWxkO2NvbnRpbnVlfWZvcig7bnVsbD09PXAuc2libGluZzspe2lmKG51bGw9PT1cbnBbXCJyZXR1cm5cIl18fHBbXCJyZXR1cm5cIl09PT1iKWJyZWFrIGE7cD1wW1wicmV0dXJuXCJdfXAuc2libGluZ1tcInJldHVyblwiXT1wW1wicmV0dXJuXCJdO3A9cC5zaWJsaW5nfXA9bS5oYW5kbGVyO209cChtLnByb3BzLEEpO2IuY2hpbGQ9YmYoYixudWxsIT09YT9hLmNoaWxkOm51bGwsbSxjKTtyZXR1cm4gYi5jaGlsZDtjYXNlIDg6cmV0dXJuIGIudGFnPTcsbnVsbDtjYXNlIDk6cmV0dXJuIG51bGw7Y2FzZSAxMDpyZXR1cm4gbnVsbDtjYXNlIDQ6cmV0dXJuIHooYiksTihiKSxudWxsO2Nhc2UgMDpFKFwiMTY3XCIpO2RlZmF1bHQ6RShcIjE1NlwiKX19fX1cbmZ1bmN0aW9uIGZmKGEsYil7ZnVuY3Rpb24gYyhhKXt2YXIgYz1hLnJlZjtpZihudWxsIT09Yyl0cnl7YyhudWxsKX1jYXRjaChBKXtiKGEsQSl9fWZ1bmN0aW9uIGQoYSl7XCJmdW5jdGlvblwiPT09dHlwZW9mIEVlJiZFZShhKTtzd2l0Y2goYS50YWcpe2Nhc2UgMjpjKGEpO3ZhciBkPWEuc3RhdGVOb2RlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudFdpbGxVbm1vdW50KXRyeXtkLnByb3BzPWEubWVtb2l6ZWRQcm9wcyxkLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSxkLmNvbXBvbmVudFdpbGxVbm1vdW50KCl9Y2F0Y2goQSl7YihhLEEpfWJyZWFrO2Nhc2UgNTpjKGEpO2JyZWFrO2Nhc2UgNzplKGEuc3RhdGVOb2RlKTticmVhaztjYXNlIDQ6ayYmZyhhKX19ZnVuY3Rpb24gZShhKXtmb3IodmFyIGI9YTs7KWlmKGQoYiksbnVsbD09PWIuY2hpbGR8fGsmJjQ9PT1iLnRhZyl7aWYoYj09PWEpYnJlYWs7Zm9yKDtudWxsPT09Yi5zaWJsaW5nOyl7aWYobnVsbD09PWJbXCJyZXR1cm5cIl18fFxuYltcInJldHVyblwiXT09PWEpcmV0dXJuO2I9YltcInJldHVyblwiXX1iLnNpYmxpbmdbXCJyZXR1cm5cIl09YltcInJldHVyblwiXTtiPWIuc2libGluZ31lbHNlIGIuY2hpbGRbXCJyZXR1cm5cIl09YixiPWIuY2hpbGR9ZnVuY3Rpb24gZihhKXtyZXR1cm4gNT09PWEudGFnfHwzPT09YS50YWd8fDQ9PT1hLnRhZ31mdW5jdGlvbiBnKGEpe2Zvcih2YXIgYj1hLGM9ITEsZj12b2lkIDAsZz12b2lkIDA7Oyl7aWYoIWMpe2M9YltcInJldHVyblwiXTthOmZvcig7Oyl7bnVsbD09PWM/RShcIjE2MFwiKTp2b2lkIDA7c3dpdGNoKGMudGFnKXtjYXNlIDU6Zj1jLnN0YXRlTm9kZTtnPSExO2JyZWFrIGE7Y2FzZSAzOmY9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztnPSEwO2JyZWFrIGE7Y2FzZSA0OmY9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztnPSEwO2JyZWFrIGF9Yz1jW1wicmV0dXJuXCJdfWM9ITB9aWYoNT09PWIudGFnfHw2PT09Yi50YWcpZShiKSxnP0ooZixiLnN0YXRlTm9kZSk6TihmLGIuc3RhdGVOb2RlKTtcbmVsc2UgaWYoND09PWIudGFnP2Y9Yi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbzpkKGIpLG51bGwhPT1iLmNoaWxkKXtiLmNoaWxkW1wicmV0dXJuXCJdPWI7Yj1iLmNoaWxkO2NvbnRpbnVlfWlmKGI9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWIuc2libGluZzspe2lmKG51bGw9PT1iW1wicmV0dXJuXCJdfHxiW1wicmV0dXJuXCJdPT09YSlyZXR1cm47Yj1iW1wicmV0dXJuXCJdOzQ9PT1iLnRhZyYmKGM9ITEpfWIuc2libGluZ1tcInJldHVyblwiXT1iW1wicmV0dXJuXCJdO2I9Yi5zaWJsaW5nfX12YXIgaD1hLmdldFB1YmxpY0luc3RhbmNlLGs9YS5tdXRhdGlvbjthPWEucGVyc2lzdGVuY2U7a3x8KGE/RShcIjIzNVwiKTpFKFwiMjM2XCIpKTt2YXIgcT1rLmNvbW1pdE1vdW50LHY9ay5jb21taXRVcGRhdGUseT1rLnJlc2V0VGV4dENvbnRlbnQsdT1rLmNvbW1pdFRleHRVcGRhdGUsej1rLmFwcGVuZENoaWxkLEc9ay5hcHBlbmRDaGlsZFRvQ29udGFpbmVyLEk9ay5pbnNlcnRCZWZvcmUsTD1rLmluc2VydEluQ29udGFpbmVyQmVmb3JlLFxuTj1rLnJlbW92ZUNoaWxkLEo9ay5yZW1vdmVDaGlsZEZyb21Db250YWluZXI7cmV0dXJue2NvbW1pdFJlc2V0VGV4dENvbnRlbnQ6ZnVuY3Rpb24oYSl7eShhLnN0YXRlTm9kZSl9LGNvbW1pdFBsYWNlbWVudDpmdW5jdGlvbihhKXthOntmb3IodmFyIGI9YVtcInJldHVyblwiXTtudWxsIT09Yjspe2lmKGYoYikpe3ZhciBjPWI7YnJlYWsgYX1iPWJbXCJyZXR1cm5cIl19RShcIjE2MFwiKTtjPXZvaWQgMH12YXIgZD1iPXZvaWQgMDtzd2l0Y2goYy50YWcpe2Nhc2UgNTpiPWMuc3RhdGVOb2RlO2Q9ITE7YnJlYWs7Y2FzZSAzOmI9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2Nhc2UgNDpiPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztkZWZhdWx0OkUoXCIxNjFcIil9Yy5lZmZlY3RUYWcmMTYmJih5KGIpLGMuZWZmZWN0VGFnJj0tMTcpO2E6Yjpmb3IoYz1hOzspe2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jW1wicmV0dXJuXCJdfHxmKGNbXCJyZXR1cm5cIl0pKXtjPVxubnVsbDticmVhayBhfWM9Y1tcInJldHVyblwiXX1jLnNpYmxpbmdbXCJyZXR1cm5cIl09Y1tcInJldHVyblwiXTtmb3IoYz1jLnNpYmxpbmc7NSE9PWMudGFnJiY2IT09Yy50YWc7KXtpZihjLmVmZmVjdFRhZyYyKWNvbnRpbnVlIGI7aWYobnVsbD09PWMuY2hpbGR8fDQ9PT1jLnRhZyljb250aW51ZSBiO2Vsc2UgYy5jaGlsZFtcInJldHVyblwiXT1jLGM9Yy5jaGlsZH1pZighKGMuZWZmZWN0VGFnJjIpKXtjPWMuc3RhdGVOb2RlO2JyZWFrIGF9fWZvcih2YXIgZT1hOzspe2lmKDU9PT1lLnRhZ3x8Nj09PWUudGFnKWM/ZD9MKGIsZS5zdGF0ZU5vZGUsYyk6SShiLGUuc3RhdGVOb2RlLGMpOmQ/RyhiLGUuc3RhdGVOb2RlKTp6KGIsZS5zdGF0ZU5vZGUpO2Vsc2UgaWYoNCE9PWUudGFnJiZudWxsIT09ZS5jaGlsZCl7ZS5jaGlsZFtcInJldHVyblwiXT1lO2U9ZS5jaGlsZDtjb250aW51ZX1pZihlPT09YSlicmVhaztmb3IoO251bGw9PT1lLnNpYmxpbmc7KXtpZihudWxsPT09ZVtcInJldHVyblwiXXx8ZVtcInJldHVyblwiXT09PVxuYSlyZXR1cm47ZT1lW1wicmV0dXJuXCJdfWUuc2libGluZ1tcInJldHVyblwiXT1lW1wicmV0dXJuXCJdO2U9ZS5zaWJsaW5nfX0sY29tbWl0RGVsZXRpb246ZnVuY3Rpb24oYSl7ZyhhKTthW1wicmV0dXJuXCJdPW51bGw7YS5jaGlsZD1udWxsO2EuYWx0ZXJuYXRlJiYoYS5hbHRlcm5hdGUuY2hpbGQ9bnVsbCxhLmFsdGVybmF0ZVtcInJldHVyblwiXT1udWxsKX0sY29tbWl0V29yazpmdW5jdGlvbihhLGIpe3N3aXRjaChiLnRhZyl7Y2FzZSAyOmJyZWFrO2Nhc2UgNTp2YXIgYz1iLnN0YXRlTm9kZTtpZihudWxsIT1jKXt2YXIgZD1iLm1lbW9pemVkUHJvcHM7YT1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6ZDt2YXIgZT1iLnR5cGUsZj1iLnVwZGF0ZVF1ZXVlO2IudXBkYXRlUXVldWU9bnVsbDtudWxsIT09ZiYmdihjLGYsZSxhLGQsYil9YnJlYWs7Y2FzZSA2Om51bGw9PT1iLnN0YXRlTm9kZT9FKFwiMTYyXCIpOnZvaWQgMDtjPWIubWVtb2l6ZWRQcm9wczt1KGIuc3RhdGVOb2RlLG51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpcbmMsYyk7YnJlYWs7Y2FzZSAzOmJyZWFrO2RlZmF1bHQ6RShcIjE2M1wiKX19LGNvbW1pdExpZmVDeWNsZXM6ZnVuY3Rpb24oYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMjp2YXIgYz1iLnN0YXRlTm9kZTtpZihiLmVmZmVjdFRhZyY0KWlmKG51bGw9PT1hKWMucHJvcHM9Yi5tZW1vaXplZFByb3BzLGMuc3RhdGU9Yi5tZW1vaXplZFN0YXRlLGMuY29tcG9uZW50RGlkTW91bnQoKTtlbHNle3ZhciBkPWEubWVtb2l6ZWRQcm9wczthPWEubWVtb2l6ZWRTdGF0ZTtjLnByb3BzPWIubWVtb2l6ZWRQcm9wcztjLnN0YXRlPWIubWVtb2l6ZWRTdGF0ZTtjLmNvbXBvbmVudERpZFVwZGF0ZShkLGEpfWI9Yi51cGRhdGVRdWV1ZTtudWxsIT09YiYmS2UoYixjKTticmVhaztjYXNlIDM6Yz1iLnVwZGF0ZVF1ZXVlO251bGwhPT1jJiZLZShjLG51bGwhPT1iLmNoaWxkP2IuY2hpbGQuc3RhdGVOb2RlOm51bGwpO2JyZWFrO2Nhc2UgNTpjPWIuc3RhdGVOb2RlO251bGw9PT1hJiZiLmVmZmVjdFRhZyY0JiZxKGMsXG5iLnR5cGUsYi5tZW1vaXplZFByb3BzLGIpO2JyZWFrO2Nhc2UgNjpicmVhaztjYXNlIDQ6YnJlYWs7ZGVmYXVsdDpFKFwiMTYzXCIpfX0sY29tbWl0QXR0YWNoUmVmOmZ1bmN0aW9uKGEpe3ZhciBiPWEucmVmO2lmKG51bGwhPT1iKXt2YXIgYz1hLnN0YXRlTm9kZTtzd2l0Y2goYS50YWcpe2Nhc2UgNTpiKGgoYykpO2JyZWFrO2RlZmF1bHQ6YihjKX19fSxjb21taXREZXRhY2hSZWY6ZnVuY3Rpb24oYSl7YT1hLnJlZjtudWxsIT09YSYmYShudWxsKX19fXZhciBnZj17fTtcbmZ1bmN0aW9uIGhmKGEpe2Z1bmN0aW9uIGIoYSl7YT09PWdmP0UoXCIxNzRcIik6dm9pZCAwO3JldHVybiBhfXZhciBjPWEuZ2V0Q2hpbGRIb3N0Q29udGV4dCxkPWEuZ2V0Um9vdEhvc3RDb250ZXh0LGU9e2N1cnJlbnQ6Z2Z9LGY9e2N1cnJlbnQ6Z2Z9LGc9e2N1cnJlbnQ6Z2Z9O3JldHVybntnZXRIb3N0Q29udGV4dDpmdW5jdGlvbigpe3JldHVybiBiKGUuY3VycmVudCl9LGdldFJvb3RIb3N0Q29udGFpbmVyOmZ1bmN0aW9uKCl7cmV0dXJuIGIoZy5jdXJyZW50KX0scG9wSG9zdENvbnRhaW5lcjpmdW5jdGlvbihhKXtWKGUsYSk7VihmLGEpO1YoZyxhKX0scG9wSG9zdENvbnRleHQ6ZnVuY3Rpb24oYSl7Zi5jdXJyZW50PT09YSYmKFYoZSxhKSxWKGYsYSkpfSxwdXNoSG9zdENvbnRhaW5lcjpmdW5jdGlvbihhLGIpe1coZyxiLGEpO2I9ZChiKTtXKGYsYSxhKTtXKGUsYixhKX0scHVzaEhvc3RDb250ZXh0OmZ1bmN0aW9uKGEpe3ZhciBkPWIoZy5jdXJyZW50KSxoPWIoZS5jdXJyZW50KTtcbmQ9YyhoLGEudHlwZSxkKTtoIT09ZCYmKFcoZixhLGEpLFcoZSxkLGEpKX0scmVzZXRIb3N0Q29udGFpbmVyOmZ1bmN0aW9uKCl7ZS5jdXJyZW50PWdmO2cuY3VycmVudD1nZn19fVxuZnVuY3Rpb24gamYoYSl7ZnVuY3Rpb24gYihhLGIpe3ZhciBjPW5ldyBZKDUsbnVsbCwwKTtjLnR5cGU9XCJERUxFVEVEXCI7Yy5zdGF0ZU5vZGU9YjtjW1wicmV0dXJuXCJdPWE7Yy5lZmZlY3RUYWc9ODtudWxsIT09YS5sYXN0RWZmZWN0PyhhLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1jLGEubGFzdEVmZmVjdD1jKTphLmZpcnN0RWZmZWN0PWEubGFzdEVmZmVjdD1jfWZ1bmN0aW9uIGMoYSxiKXtzd2l0Y2goYS50YWcpe2Nhc2UgNTpyZXR1cm4gYj1mKGIsYS50eXBlLGEucGVuZGluZ1Byb3BzKSxudWxsIT09Yj8oYS5zdGF0ZU5vZGU9YiwhMCk6ITE7Y2FzZSA2OnJldHVybiBiPWcoYixhLnBlbmRpbmdQcm9wcyksbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2RlZmF1bHQ6cmV0dXJuITF9fWZ1bmN0aW9uIGQoYSl7Zm9yKGE9YVtcInJldHVyblwiXTtudWxsIT09YSYmNSE9PWEudGFnJiYzIT09YS50YWc7KWE9YVtcInJldHVyblwiXTt5PWF9dmFyIGU9YS5zaG91bGRTZXRUZXh0Q29udGVudDtcbmE9YS5oeWRyYXRpb247aWYoIWEpcmV0dXJue2VudGVySHlkcmF0aW9uU3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4hMX0scmVzZXRIeWRyYXRpb25TdGF0ZTpmdW5jdGlvbigpe30sdHJ5VG9DbGFpbU5leHRIeWRyYXRhYmxlSW5zdGFuY2U6ZnVuY3Rpb24oKXt9LHByZXBhcmVUb0h5ZHJhdGVIb3N0SW5zdGFuY2U6ZnVuY3Rpb24oKXtFKFwiMTc1XCIpfSxwcmVwYXJlVG9IeWRyYXRlSG9zdFRleHRJbnN0YW5jZTpmdW5jdGlvbigpe0UoXCIxNzZcIil9LHBvcEh5ZHJhdGlvblN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuITF9fTt2YXIgZj1hLmNhbkh5ZHJhdGVJbnN0YW5jZSxnPWEuY2FuSHlkcmF0ZVRleHRJbnN0YW5jZSxoPWEuZ2V0TmV4dEh5ZHJhdGFibGVTaWJsaW5nLGs9YS5nZXRGaXJzdEh5ZHJhdGFibGVDaGlsZCxxPWEuaHlkcmF0ZUluc3RhbmNlLHY9YS5oeWRyYXRlVGV4dEluc3RhbmNlLHk9bnVsbCx1PW51bGwsej0hMTtyZXR1cm57ZW50ZXJIeWRyYXRpb25TdGF0ZTpmdW5jdGlvbihhKXt1PVxuayhhLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKTt5PWE7cmV0dXJuIHo9ITB9LHJlc2V0SHlkcmF0aW9uU3RhdGU6ZnVuY3Rpb24oKXt1PXk9bnVsbDt6PSExfSx0cnlUb0NsYWltTmV4dEh5ZHJhdGFibGVJbnN0YW5jZTpmdW5jdGlvbihhKXtpZih6KXt2YXIgZD11O2lmKGQpe2lmKCFjKGEsZCkpe2Q9aChkKTtpZighZHx8IWMoYSxkKSl7YS5lZmZlY3RUYWd8PTI7ej0hMTt5PWE7cmV0dXJufWIoeSx1KX15PWE7dT1rKGQpfWVsc2UgYS5lZmZlY3RUYWd8PTIsej0hMSx5PWF9fSxwcmVwYXJlVG9IeWRyYXRlSG9zdEluc3RhbmNlOmZ1bmN0aW9uKGEsYixjKXtiPXEoYS5zdGF0ZU5vZGUsYS50eXBlLGEubWVtb2l6ZWRQcm9wcyxiLGMsYSk7YS51cGRhdGVRdWV1ZT1iO3JldHVybiBudWxsIT09Yj8hMDohMX0scHJlcGFyZVRvSHlkcmF0ZUhvc3RUZXh0SW5zdGFuY2U6ZnVuY3Rpb24oYSl7cmV0dXJuIHYoYS5zdGF0ZU5vZGUsYS5tZW1vaXplZFByb3BzLGEpfSxwb3BIeWRyYXRpb25TdGF0ZTpmdW5jdGlvbihhKXtpZihhIT09XG55KXJldHVybiExO2lmKCF6KXJldHVybiBkKGEpLHo9ITAsITE7dmFyIGM9YS50eXBlO2lmKDUhPT1hLnRhZ3x8XCJoZWFkXCIhPT1jJiZcImJvZHlcIiE9PWMmJiFlKGMsYS5tZW1vaXplZFByb3BzKSlmb3IoYz11O2M7KWIoYSxjKSxjPWgoYyk7ZChhKTt1PXk/aChhLnN0YXRlTm9kZSk6bnVsbDtyZXR1cm4hMH19fVxuZnVuY3Rpb24ga2YoYSl7ZnVuY3Rpb24gYihhKXtRYj1qYT0hMDt2YXIgYj1hLnN0YXRlTm9kZTtiLmN1cnJlbnQ9PT1hP0UoXCIxNzdcIik6dm9pZCAwO2IuaXNSZWFkeUZvckNvbW1pdD0hMTtpZC5jdXJyZW50PW51bGw7aWYoMTxhLmVmZmVjdFRhZylpZihudWxsIT09YS5sYXN0RWZmZWN0KXthLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1hO3ZhciBjPWEuZmlyc3RFZmZlY3R9ZWxzZSBjPWE7ZWxzZSBjPWEuZmlyc3RFZmZlY3Q7eWcoKTtmb3IodD1jO251bGwhPT10Oyl7dmFyIGQ9ITEsZT12b2lkIDA7dHJ5e2Zvcig7bnVsbCE9PXQ7KXt2YXIgZj10LmVmZmVjdFRhZztmJjE2JiZ6Zyh0KTtpZihmJjEyOCl7dmFyIGc9dC5hbHRlcm5hdGU7bnVsbCE9PWcmJkFnKGcpfXN3aXRjaChmJi0yNDIpe2Nhc2UgMjpOZSh0KTt0LmVmZmVjdFRhZyY9LTM7YnJlYWs7Y2FzZSA2Ok5lKHQpO3QuZWZmZWN0VGFnJj0tMztPZSh0LmFsdGVybmF0ZSx0KTticmVhaztjYXNlIDQ6T2UodC5hbHRlcm5hdGUsXG50KTticmVhaztjYXNlIDg6U2M9ITAsQmcodCksU2M9ITF9dD10Lm5leHRFZmZlY3R9fWNhdGNoKFRjKXtkPSEwLGU9VGN9ZCYmKG51bGw9PT10P0UoXCIxNzhcIik6dm9pZCAwLGgodCxlKSxudWxsIT09dCYmKHQ9dC5uZXh0RWZmZWN0KSl9Q2coKTtiLmN1cnJlbnQ9YTtmb3IodD1jO251bGwhPT10Oyl7Yz0hMTtkPXZvaWQgMDt0cnl7Zm9yKDtudWxsIT09dDspe3ZhciBrPXQuZWZmZWN0VGFnO2smMzYmJkRnKHQuYWx0ZXJuYXRlLHQpO2smMTI4JiZFZyh0KTtpZihrJjY0KXN3aXRjaChlPXQsZj12b2lkIDAsbnVsbCE9PVImJihmPVIuZ2V0KGUpLFJbXCJkZWxldGVcIl0oZSksbnVsbD09ZiYmbnVsbCE9PWUuYWx0ZXJuYXRlJiYoZT1lLmFsdGVybmF0ZSxmPVIuZ2V0KGUpLFJbXCJkZWxldGVcIl0oZSkpKSxudWxsPT1mP0UoXCIxODRcIik6dm9pZCAwLGUudGFnKXtjYXNlIDI6ZS5zdGF0ZU5vZGUuY29tcG9uZW50RGlkQ2F0Y2goZi5lcnJvcix7Y29tcG9uZW50U3RhY2s6Zi5jb21wb25lbnRTdGFja30pO1xuYnJlYWs7Y2FzZSAzOm51bGw9PT1jYSYmKGNhPWYuZXJyb3IpO2JyZWFrO2RlZmF1bHQ6RShcIjE1N1wiKX12YXIgUWM9dC5uZXh0RWZmZWN0O3QubmV4dEVmZmVjdD1udWxsO3Q9UWN9fWNhdGNoKFRjKXtjPSEwLGQ9VGN9YyYmKG51bGw9PT10P0UoXCIxNzhcIik6dm9pZCAwLGgodCxkKSxudWxsIT09dCYmKHQ9dC5uZXh0RWZmZWN0KSl9amE9UWI9ITE7XCJmdW5jdGlvblwiPT09dHlwZW9mIERlJiZEZShhLnN0YXRlTm9kZSk7aGEmJihoYS5mb3JFYWNoKEcpLGhhPW51bGwpO251bGwhPT1jYSYmKGE9Y2EsY2E9bnVsbCxPYihhKSk7Yj1iLmN1cnJlbnQuZXhwaXJhdGlvblRpbWU7MD09PWImJihxYT1SPW51bGwpO3JldHVybiBifWZ1bmN0aW9uIGMoYSl7Zm9yKDs7KXt2YXIgYj1GZyhhLmFsdGVybmF0ZSxhLEgpLGM9YVtcInJldHVyblwiXSxkPWEuc2libGluZzt2YXIgZT1hO2lmKDIxNDc0ODM2NDc9PT1IfHwyMTQ3NDgzNjQ3IT09ZS5leHBpcmF0aW9uVGltZSl7aWYoMiE9PWUudGFnJiYzIT09XG5lLnRhZyl2YXIgZj0wO2Vsc2UgZj1lLnVwZGF0ZVF1ZXVlLGY9bnVsbD09PWY/MDpmLmV4cGlyYXRpb25UaW1lO2Zvcih2YXIgZz1lLmNoaWxkO251bGwhPT1nOykwIT09Zy5leHBpcmF0aW9uVGltZSYmKDA9PT1mfHxmPmcuZXhwaXJhdGlvblRpbWUpJiYoZj1nLmV4cGlyYXRpb25UaW1lKSxnPWcuc2libGluZztlLmV4cGlyYXRpb25UaW1lPWZ9aWYobnVsbCE9PWIpcmV0dXJuIGI7bnVsbCE9PWMmJihudWxsPT09Yy5maXJzdEVmZmVjdCYmKGMuZmlyc3RFZmZlY3Q9YS5maXJzdEVmZmVjdCksbnVsbCE9PWEubGFzdEVmZmVjdCYmKG51bGwhPT1jLmxhc3RFZmZlY3QmJihjLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1hLmZpcnN0RWZmZWN0KSxjLmxhc3RFZmZlY3Q9YS5sYXN0RWZmZWN0KSwxPGEuZWZmZWN0VGFnJiYobnVsbCE9PWMubGFzdEVmZmVjdD9jLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1hOmMuZmlyc3RFZmZlY3Q9YSxjLmxhc3RFZmZlY3Q9YSkpO2lmKG51bGwhPT1kKXJldHVybiBkO1xuaWYobnVsbCE9PWMpYT1jO2Vsc2V7YS5zdGF0ZU5vZGUuaXNSZWFkeUZvckNvbW1pdD0hMDticmVha319cmV0dXJuIG51bGx9ZnVuY3Rpb24gZChhKXt2YXIgYj1yZyhhLmFsdGVybmF0ZSxhLEgpO251bGw9PT1iJiYoYj1jKGEpKTtpZC5jdXJyZW50PW51bGw7cmV0dXJuIGJ9ZnVuY3Rpb24gZShhKXt2YXIgYj1HZyhhLmFsdGVybmF0ZSxhLEgpO251bGw9PT1iJiYoYj1jKGEpKTtpZC5jdXJyZW50PW51bGw7cmV0dXJuIGJ9ZnVuY3Rpb24gZihhKXtpZihudWxsIT09Uil7aWYoISgwPT09SHx8SD5hKSlpZihIPD1VYylmb3IoO251bGwhPT1GOylGPWsoRik/ZShGKTpkKEYpO2Vsc2UgZm9yKDtudWxsIT09RiYmIUEoKTspRj1rKEYpP2UoRik6ZChGKX1lbHNlIGlmKCEoMD09PUh8fEg+YSkpaWYoSDw9VWMpZm9yKDtudWxsIT09RjspRj1kKEYpO2Vsc2UgZm9yKDtudWxsIT09RiYmIUEoKTspRj1kKEYpfWZ1bmN0aW9uIGcoYSxiKXtqYT9FKFwiMjQzXCIpOnZvaWQgMDtqYT0hMDthLmlzUmVhZHlGb3JDb21taXQ9XG4hMTtpZihhIT09cmF8fGIhPT1IfHxudWxsPT09Ril7Zm9yKDstMTxoZTspZ2VbaGVdPW51bGwsaGUtLTtqZT1EO2llLmN1cnJlbnQ9RDtYLmN1cnJlbnQ9ITE7eCgpO3JhPWE7SD1iO0Y9c2UocmEuY3VycmVudCxudWxsLGIpfXZhciBjPSExLGQ9bnVsbDt0cnl7ZihiKX1jYXRjaChSYyl7Yz0hMCxkPVJjfWZvcig7Yzspe2lmKGViKXtjYT1kO2JyZWFrfXZhciBnPUY7aWYobnVsbD09PWcpZWI9ITA7ZWxzZXt2YXIgaz1oKGcsZCk7bnVsbD09PWs/RShcIjE4M1wiKTp2b2lkIDA7aWYoIWViKXt0cnl7Yz1rO2Q9Yjtmb3Ioaz1jO251bGwhPT1nOyl7c3dpdGNoKGcudGFnKXtjYXNlIDI6bmUoZyk7YnJlYWs7Y2FzZSA1OnFnKGcpO2JyZWFrO2Nhc2UgMzpwKGcpO2JyZWFrO2Nhc2UgNDpwKGcpfWlmKGc9PT1rfHxnLmFsdGVybmF0ZT09PWspYnJlYWs7Zz1nW1wicmV0dXJuXCJdfUY9ZShjKTtmKGQpfWNhdGNoKFJjKXtjPSEwO2Q9UmM7Y29udGludWV9YnJlYWt9fX1iPWNhO2ViPWphPSExO2NhPVxubnVsbDtudWxsIT09YiYmT2IoYik7cmV0dXJuIGEuaXNSZWFkeUZvckNvbW1pdD9hLmN1cnJlbnQuYWx0ZXJuYXRlOm51bGx9ZnVuY3Rpb24gaChhLGIpe3ZhciBjPWlkLmN1cnJlbnQ9bnVsbCxkPSExLGU9ITEsZj1udWxsO2lmKDM9PT1hLnRhZyljPWEscShhKSYmKGViPSEwKTtlbHNlIGZvcih2YXIgZz1hW1wicmV0dXJuXCJdO251bGwhPT1nJiZudWxsPT09YzspezI9PT1nLnRhZz9cImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5zdGF0ZU5vZGUuY29tcG9uZW50RGlkQ2F0Y2gmJihkPSEwLGY9amQoZyksYz1nLGU9ITApOjM9PT1nLnRhZyYmKGM9Zyk7aWYocShnKSl7aWYoU2N8fG51bGwhPT1oYSYmKGhhLmhhcyhnKXx8bnVsbCE9PWcuYWx0ZXJuYXRlJiZoYS5oYXMoZy5hbHRlcm5hdGUpKSlyZXR1cm4gbnVsbDtjPW51bGw7ZT0hMX1nPWdbXCJyZXR1cm5cIl19aWYobnVsbCE9PWMpe251bGw9PT1xYSYmKHFhPW5ldyBTZXQpO3FhLmFkZChjKTt2YXIgaD1cIlwiO2c9YTtkb3thOnN3aXRjaChnLnRhZyl7Y2FzZSAwOmNhc2UgMTpjYXNlIDI6Y2FzZSA1OnZhciBrPVxuZy5fZGVidWdPd25lcixRYz1nLl9kZWJ1Z1NvdXJjZTt2YXIgbT1qZChnKTt2YXIgbj1udWxsO2smJihuPWpkKGspKTtrPVFjO209XCJcXG4gICAgaW4gXCIrKG18fFwiVW5rbm93blwiKSsoaz9cIiAoYXQgXCIray5maWxlTmFtZS5yZXBsYWNlKC9eLipbXFxcXFxcL10vLFwiXCIpK1wiOlwiK2subGluZU51bWJlcitcIilcIjpuP1wiIChjcmVhdGVkIGJ5IFwiK24rXCIpXCI6XCJcIik7YnJlYWsgYTtkZWZhdWx0Om09XCJcIn1oKz1tO2c9Z1tcInJldHVyblwiXX13aGlsZShnKTtnPWg7YT1qZChhKTtudWxsPT09UiYmKFI9bmV3IE1hcCk7Yj17Y29tcG9uZW50TmFtZTphLGNvbXBvbmVudFN0YWNrOmcsZXJyb3I6YixlcnJvckJvdW5kYXJ5OmQ/Yy5zdGF0ZU5vZGU6bnVsbCxlcnJvckJvdW5kYXJ5Rm91bmQ6ZCxlcnJvckJvdW5kYXJ5TmFtZTpmLHdpbGxSZXRyeTplfTtSLnNldChjLGIpO3RyeXt2YXIgcD1iLmVycm9yO3AmJnAuc3VwcHJlc3NSZWFjdEVycm9yTG9nZ2luZ3x8Y29uc29sZS5lcnJvcihwKX1jYXRjaChWYyl7VmMmJlxuVmMuc3VwcHJlc3NSZWFjdEVycm9yTG9nZ2luZ3x8Y29uc29sZS5lcnJvcihWYyl9UWI/KG51bGw9PT1oYSYmKGhhPW5ldyBTZXQpLGhhLmFkZChjKSk6RyhjKTtyZXR1cm4gY31udWxsPT09Y2EmJihjYT1iKTtyZXR1cm4gbnVsbH1mdW5jdGlvbiBrKGEpe3JldHVybiBudWxsIT09UiYmKFIuaGFzKGEpfHxudWxsIT09YS5hbHRlcm5hdGUmJlIuaGFzKGEuYWx0ZXJuYXRlKSl9ZnVuY3Rpb24gcShhKXtyZXR1cm4gbnVsbCE9PXFhJiYocWEuaGFzKGEpfHxudWxsIT09YS5hbHRlcm5hdGUmJnFhLmhhcyhhLmFsdGVybmF0ZSkpfWZ1bmN0aW9uIHYoKXtyZXR1cm4gMjAqKCgoSSgpKzEwMCkvMjB8MCkrMSl9ZnVuY3Rpb24geShhKXtyZXR1cm4gMCE9PWthP2thOmphP1FiPzE6SDohSGd8fGEuaW50ZXJuYWxDb250ZXh0VGFnJjE/digpOjF9ZnVuY3Rpb24gdShhLGIpe3JldHVybiB6KGEsYiwhMSl9ZnVuY3Rpb24geihhLGIpe2Zvcig7bnVsbCE9PWE7KXtpZigwPT09YS5leHBpcmF0aW9uVGltZXx8XG5hLmV4cGlyYXRpb25UaW1lPmIpYS5leHBpcmF0aW9uVGltZT1iO251bGwhPT1hLmFsdGVybmF0ZSYmKDA9PT1hLmFsdGVybmF0ZS5leHBpcmF0aW9uVGltZXx8YS5hbHRlcm5hdGUuZXhwaXJhdGlvblRpbWU+YikmJihhLmFsdGVybmF0ZS5leHBpcmF0aW9uVGltZT1iKTtpZihudWxsPT09YVtcInJldHVyblwiXSlpZigzPT09YS50YWcpe3ZhciBjPWEuc3RhdGVOb2RlOyFqYSYmYz09PXJhJiZiPEgmJihGPXJhPW51bGwsSD0wKTt2YXIgZD1jLGU9YjtSYj5JZyYmRShcIjE4NVwiKTtpZihudWxsPT09ZC5uZXh0U2NoZWR1bGVkUm9vdClkLnJlbWFpbmluZ0V4cGlyYXRpb25UaW1lPWUsbnVsbD09PU8/KHNhPU89ZCxkLm5leHRTY2hlZHVsZWRSb290PWQpOihPPU8ubmV4dFNjaGVkdWxlZFJvb3Q9ZCxPLm5leHRTY2hlZHVsZWRSb290PXNhKTtlbHNle3ZhciBmPWQucmVtYWluaW5nRXhwaXJhdGlvblRpbWU7aWYoMD09PWZ8fGU8ZilkLnJlbWFpbmluZ0V4cGlyYXRpb25UaW1lPWV9RmF8fChsYT9cblNiJiYobWE9ZCxuYT0xLG0obWEsbmEpKToxPT09ZT93KDEsbnVsbCk6TChlKSk7IWphJiZjPT09cmEmJmI8SCYmKEY9cmE9bnVsbCxIPTApfWVsc2UgYnJlYWs7YT1hW1wicmV0dXJuXCJdfX1mdW5jdGlvbiBHKGEpe3ooYSwxLCEwKX1mdW5jdGlvbiBJKCl7cmV0dXJuIFVjPSgoV2MoKS1QZSkvMTB8MCkrMn1mdW5jdGlvbiBMKGEpe2lmKDAhPT1UYil7aWYoYT5UYilyZXR1cm47SmcoWGMpfXZhciBiPVdjKCktUGU7VGI9YTtYYz1LZyhKLHt0aW1lb3V0OjEwKihhLTIpLWJ9KX1mdW5jdGlvbiBOKCl7dmFyIGE9MCxiPW51bGw7aWYobnVsbCE9PU8pZm9yKHZhciBjPU8sZD1zYTtudWxsIT09ZDspe3ZhciBlPWQucmVtYWluaW5nRXhwaXJhdGlvblRpbWU7aWYoMD09PWUpe251bGw9PT1jfHxudWxsPT09Tz9FKFwiMjQ0XCIpOnZvaWQgMDtpZihkPT09ZC5uZXh0U2NoZWR1bGVkUm9vdCl7c2E9Tz1kLm5leHRTY2hlZHVsZWRSb290PW51bGw7YnJlYWt9ZWxzZSBpZihkPT09c2Epc2E9ZT1kLm5leHRTY2hlZHVsZWRSb290LFxuTy5uZXh0U2NoZWR1bGVkUm9vdD1lLGQubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDtlbHNlIGlmKGQ9PT1PKXtPPWM7Ty5uZXh0U2NoZWR1bGVkUm9vdD1zYTtkLm5leHRTY2hlZHVsZWRSb290PW51bGw7YnJlYWt9ZWxzZSBjLm5leHRTY2hlZHVsZWRSb290PWQubmV4dFNjaGVkdWxlZFJvb3QsZC5uZXh0U2NoZWR1bGVkUm9vdD1udWxsO2Q9Yy5uZXh0U2NoZWR1bGVkUm9vdH1lbHNle2lmKDA9PT1hfHxlPGEpYT1lLGI9ZDtpZihkPT09TylicmVhaztjPWQ7ZD1kLm5leHRTY2hlZHVsZWRSb290fX1jPW1hO251bGwhPT1jJiZjPT09Yj9SYisrOlJiPTA7bWE9YjtuYT1hfWZ1bmN0aW9uIEooYSl7dygwLGEpfWZ1bmN0aW9uIHcoYSxiKXtmYj1iO2ZvcihOKCk7bnVsbCE9PW1hJiYwIT09bmEmJigwPT09YXx8bmE8PWEpJiYhWWM7KW0obWEsbmEpLE4oKTtudWxsIT09ZmImJihUYj0wLFhjPS0xKTswIT09bmEmJkwobmEpO2ZiPW51bGw7WWM9ITE7UmI9MDtpZihVYil0aHJvdyBhPVpjLFpjPVxubnVsbCxVYj0hMSxhO31mdW5jdGlvbiBtKGEsYyl7RmE/RShcIjI0NVwiKTp2b2lkIDA7RmE9ITA7aWYoYzw9SSgpKXt2YXIgZD1hLmZpbmlzaGVkV29yaztudWxsIT09ZD8oYS5maW5pc2hlZFdvcms9bnVsbCxhLnJlbWFpbmluZ0V4cGlyYXRpb25UaW1lPWIoZCkpOihhLmZpbmlzaGVkV29yaz1udWxsLGQ9ZyhhLGMpLG51bGwhPT1kJiYoYS5yZW1haW5pbmdFeHBpcmF0aW9uVGltZT1iKGQpKSl9ZWxzZSBkPWEuZmluaXNoZWRXb3JrLG51bGwhPT1kPyhhLmZpbmlzaGVkV29yaz1udWxsLGEucmVtYWluaW5nRXhwaXJhdGlvblRpbWU9YihkKSk6KGEuZmluaXNoZWRXb3JrPW51bGwsZD1nKGEsYyksbnVsbCE9PWQmJihBKCk/YS5maW5pc2hlZFdvcms9ZDphLnJlbWFpbmluZ0V4cGlyYXRpb25UaW1lPWIoZCkpKTtGYT0hMX1mdW5jdGlvbiBBKCl7cmV0dXJuIG51bGw9PT1mYnx8ZmIudGltZVJlbWFpbmluZygpPkxnPyExOlljPSEwfWZ1bmN0aW9uIE9iKGEpe251bGw9PT1tYT9FKFwiMjQ2XCIpOlxudm9pZCAwO21hLnJlbWFpbmluZ0V4cGlyYXRpb25UaW1lPTA7VWJ8fChVYj0hMCxaYz1hKX12YXIgcj1oZihhKSxuPWpmKGEpLHA9ci5wb3BIb3N0Q29udGFpbmVyLHFnPXIucG9wSG9zdENvbnRleHQseD1yLnJlc2V0SG9zdENvbnRhaW5lcixNZT1kZihhLHIsbix1LHkpLHJnPU1lLmJlZ2luV29yayxHZz1NZS5iZWdpbkZhaWxlZFdvcmssRmc9ZWYoYSxyLG4pLmNvbXBsZXRlV29yaztyPWZmKGEsaCk7dmFyIHpnPXIuY29tbWl0UmVzZXRUZXh0Q29udGVudCxOZT1yLmNvbW1pdFBsYWNlbWVudCxCZz1yLmNvbW1pdERlbGV0aW9uLE9lPXIuY29tbWl0V29yayxEZz1yLmNvbW1pdExpZmVDeWNsZXMsRWc9ci5jb21taXRBdHRhY2hSZWYsQWc9ci5jb21taXREZXRhY2hSZWYsV2M9YS5ub3csS2c9YS5zY2hlZHVsZURlZmVycmVkQ2FsbGJhY2ssSmc9YS5jYW5jZWxEZWZlcnJlZENhbGxiYWNrLEhnPWEudXNlU3luY1NjaGVkdWxpbmcseWc9YS5wcmVwYXJlRm9yQ29tbWl0LENnPWEucmVzZXRBZnRlckNvbW1pdCxcblBlPVdjKCksVWM9MixrYT0wLGphPSExLEY9bnVsbCxyYT1udWxsLEg9MCx0PW51bGwsUj1udWxsLHFhPW51bGwsaGE9bnVsbCxjYT1udWxsLGViPSExLFFiPSExLFNjPSExLHNhPW51bGwsTz1udWxsLFRiPTAsWGM9LTEsRmE9ITEsbWE9bnVsbCxuYT0wLFljPSExLFViPSExLFpjPW51bGwsZmI9bnVsbCxsYT0hMSxTYj0hMSxJZz0xRTMsUmI9MCxMZz0xO3JldHVybntjb21wdXRlQXN5bmNFeHBpcmF0aW9uOnYsY29tcHV0ZUV4cGlyYXRpb25Gb3JGaWJlcjp5LHNjaGVkdWxlV29yazp1LGJhdGNoZWRVcGRhdGVzOmZ1bmN0aW9uKGEsYil7dmFyIGM9bGE7bGE9ITA7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7KGxhPWMpfHxGYXx8dygxLG51bGwpfX0sdW5iYXRjaGVkVXBkYXRlczpmdW5jdGlvbihhKXtpZihsYSYmIVNiKXtTYj0hMDt0cnl7cmV0dXJuIGEoKX1maW5hbGx5e1NiPSExfX1yZXR1cm4gYSgpfSxmbHVzaFN5bmM6ZnVuY3Rpb24oYSl7dmFyIGI9bGE7bGE9ITA7dHJ5e2E6e3ZhciBjPVxua2E7a2E9MTt0cnl7dmFyIGQ9YSgpO2JyZWFrIGF9ZmluYWxseXtrYT1jfWQ9dm9pZCAwfXJldHVybiBkfWZpbmFsbHl7bGE9YixGYT9FKFwiMTg3XCIpOnZvaWQgMCx3KDEsbnVsbCl9fSxkZWZlcnJlZFVwZGF0ZXM6ZnVuY3Rpb24oYSl7dmFyIGI9a2E7a2E9digpO3RyeXtyZXR1cm4gYSgpfWZpbmFsbHl7a2E9Yn19fX1cbmZ1bmN0aW9uIGxmKGEpe2Z1bmN0aW9uIGIoYSl7YT1vZChhKTtyZXR1cm4gbnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZX12YXIgYz1hLmdldFB1YmxpY0luc3RhbmNlO2E9a2YoYSk7dmFyIGQ9YS5jb21wdXRlQXN5bmNFeHBpcmF0aW9uLGU9YS5jb21wdXRlRXhwaXJhdGlvbkZvckZpYmVyLGY9YS5zY2hlZHVsZVdvcms7cmV0dXJue2NyZWF0ZUNvbnRhaW5lcjpmdW5jdGlvbihhLGIpe3ZhciBjPW5ldyBZKDMsbnVsbCwwKTthPXtjdXJyZW50OmMsY29udGFpbmVySW5mbzphLHBlbmRpbmdDaGlsZHJlbjpudWxsLHJlbWFpbmluZ0V4cGlyYXRpb25UaW1lOjAsaXNSZWFkeUZvckNvbW1pdDohMSxmaW5pc2hlZFdvcms6bnVsbCxjb250ZXh0Om51bGwscGVuZGluZ0NvbnRleHQ6bnVsbCxoeWRyYXRlOmIsbmV4dFNjaGVkdWxlZFJvb3Q6bnVsbH07cmV0dXJuIGMuc3RhdGVOb2RlPWF9LHVwZGF0ZUNvbnRhaW5lcjpmdW5jdGlvbihhLGIsYyxxKXt2YXIgZz1iLmN1cnJlbnQ7aWYoYyl7Yz1cbmMuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgaDtiOnsyPT09a2QoYykmJjI9PT1jLnRhZz92b2lkIDA6RShcIjE3MFwiKTtmb3IoaD1jOzMhPT1oLnRhZzspe2lmKGxlKGgpKXtoPWguc3RhdGVOb2RlLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0O2JyZWFrIGJ9KGg9aFtcInJldHVyblwiXSk/dm9pZCAwOkUoXCIxNzFcIil9aD1oLnN0YXRlTm9kZS5jb250ZXh0fWM9bGUoYyk/cGUoYyxoKTpofWVsc2UgYz1EO251bGw9PT1iLmNvbnRleHQ/Yi5jb250ZXh0PWM6Yi5wZW5kaW5nQ29udGV4dD1jO2I9cTtiPXZvaWQgMD09PWI/bnVsbDpiO3E9bnVsbCE9YSYmbnVsbCE9YS50eXBlJiZudWxsIT1hLnR5cGUucHJvdG90eXBlJiYhMD09PWEudHlwZS5wcm90b3R5cGUudW5zdGFibGVfaXNBc3luY1JlYWN0Q29tcG9uZW50P2QoKTplKGcpO0hlKGcse2V4cGlyYXRpb25UaW1lOnEscGFydGlhbFN0YXRlOntlbGVtZW50OmF9LGNhbGxiYWNrOmIsaXNSZXBsYWNlOiExLGlzRm9yY2VkOiExLFxubmV4dENhbGxiYWNrOm51bGwsbmV4dDpudWxsfSk7ZihnLHEpfSxiYXRjaGVkVXBkYXRlczphLmJhdGNoZWRVcGRhdGVzLHVuYmF0Y2hlZFVwZGF0ZXM6YS51bmJhdGNoZWRVcGRhdGVzLGRlZmVycmVkVXBkYXRlczphLmRlZmVycmVkVXBkYXRlcyxmbHVzaFN5bmM6YS5mbHVzaFN5bmMsZ2V0UHVibGljUm9vdEluc3RhbmNlOmZ1bmN0aW9uKGEpe2E9YS5jdXJyZW50O2lmKCFhLmNoaWxkKXJldHVybiBudWxsO3N3aXRjaChhLmNoaWxkLnRhZyl7Y2FzZSA1OnJldHVybiBjKGEuY2hpbGQuc3RhdGVOb2RlKTtkZWZhdWx0OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZX19LGZpbmRIb3N0SW5zdGFuY2U6YixmaW5kSG9zdEluc3RhbmNlV2l0aE5vUG9ydGFsczpmdW5jdGlvbihhKXthPXBkKGEpO3JldHVybiBudWxsPT09YT9udWxsOmEuc3RhdGVOb2RlfSxpbmplY3RJbnRvRGV2VG9vbHM6ZnVuY3Rpb24oYSl7dmFyIGM9YS5maW5kRmliZXJCeUhvc3RJbnN0YW5jZTtyZXR1cm4gQ2UoQih7fSxcbmEse2ZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyOmZ1bmN0aW9uKGEpe3JldHVybiBiKGEpfSxmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTpmdW5jdGlvbihhKXtyZXR1cm4gYz9jKGEpOm51bGx9fSkpfX19dmFyIG1mPU9iamVjdC5mcmVlemUoe2RlZmF1bHQ6bGZ9KSxuZj1tZiYmbGZ8fG1mLG9mPW5mW1wiZGVmYXVsdFwiXT9uZltcImRlZmF1bHRcIl06bmY7ZnVuY3Rpb24gcGYoYSxiLGMpe3ZhciBkPTM8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzNdP2FyZ3VtZW50c1szXTpudWxsO3JldHVybnskJHR5cGVvZjpVZSxrZXk6bnVsbD09ZD9udWxsOlwiXCIrZCxjaGlsZHJlbjphLGNvbnRhaW5lckluZm86YixpbXBsZW1lbnRhdGlvbjpjfX12YXIgcWY9XCJvYmplY3RcIj09PXR5cGVvZiBwZXJmb3JtYW5jZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHBlcmZvcm1hbmNlLm5vdyxyZj12b2lkIDA7cmY9cWY/ZnVuY3Rpb24oKXtyZXR1cm4gcGVyZm9ybWFuY2Uubm93KCl9OmZ1bmN0aW9uKCl7cmV0dXJuIERhdGUubm93KCl9O1xudmFyIHNmPXZvaWQgMCx0Zj12b2lkIDA7XG5pZihsLmNhblVzZURPTSlpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgcmVxdWVzdElkbGVDYWxsYmFja3x8XCJmdW5jdGlvblwiIT09dHlwZW9mIGNhbmNlbElkbGVDYWxsYmFjayl7dmFyIHVmPW51bGwsdmY9ITEsd2Y9LTEseGY9ITEseWY9MCx6Zj0zMyxBZj0zMyxCZjtCZj1xZj97ZGlkVGltZW91dDohMSx0aW1lUmVtYWluaW5nOmZ1bmN0aW9uKCl7dmFyIGE9eWYtcGVyZm9ybWFuY2Uubm93KCk7cmV0dXJuIDA8YT9hOjB9fTp7ZGlkVGltZW91dDohMSx0aW1lUmVtYWluaW5nOmZ1bmN0aW9uKCl7dmFyIGE9eWYtRGF0ZS5ub3coKTtyZXR1cm4gMDxhP2E6MH19O3ZhciBDZj1cIl9fcmVhY3RJZGxlQ2FsbGJhY2skXCIrTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMik7d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJtZXNzYWdlXCIsZnVuY3Rpb24oYSl7aWYoYS5zb3VyY2U9PT13aW5kb3cmJmEuZGF0YT09PUNmKXt2Zj0hMTthPXJmKCk7aWYoMD49eWYtYSlpZigtMSE9PXdmJiZ3Zjw9XG5hKUJmLmRpZFRpbWVvdXQ9ITA7ZWxzZXt4Znx8KHhmPSEwLHJlcXVlc3RBbmltYXRpb25GcmFtZShEZikpO3JldHVybn1lbHNlIEJmLmRpZFRpbWVvdXQ9ITE7d2Y9LTE7YT11Zjt1Zj1udWxsO251bGwhPT1hJiZhKEJmKX19LCExKTt2YXIgRGY9ZnVuY3Rpb24oYSl7eGY9ITE7dmFyIGI9YS15ZitBZjtiPEFmJiZ6ZjxBZj8oOD5iJiYoYj04KSxBZj1iPHpmP3pmOmIpOnpmPWI7eWY9YStBZjt2Znx8KHZmPSEwLHdpbmRvdy5wb3N0TWVzc2FnZShDZixcIipcIikpfTtzZj1mdW5jdGlvbihhLGIpe3VmPWE7bnVsbCE9YiYmXCJudW1iZXJcIj09PXR5cGVvZiBiLnRpbWVvdXQmJih3Zj1yZigpK2IudGltZW91dCk7eGZ8fCh4Zj0hMCxyZXF1ZXN0QW5pbWF0aW9uRnJhbWUoRGYpKTtyZXR1cm4gMH07dGY9ZnVuY3Rpb24oKXt1Zj1udWxsO3ZmPSExO3dmPS0xfX1lbHNlIHNmPXdpbmRvdy5yZXF1ZXN0SWRsZUNhbGxiYWNrLHRmPXdpbmRvdy5jYW5jZWxJZGxlQ2FsbGJhY2s7ZWxzZSBzZj1mdW5jdGlvbihhKXtyZXR1cm4gc2V0VGltZW91dChmdW5jdGlvbigpe2Eoe3RpbWVSZW1haW5pbmc6ZnVuY3Rpb24oKXtyZXR1cm4gSW5maW5pdHl9fSl9KX0sXG50Zj1mdW5jdGlvbihhKXtjbGVhclRpbWVvdXQoYSl9O3ZhciBFZj0vXls6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRF1bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRcXC0uMC05XFx1MDBCN1xcdTAzMDAtXFx1MDM2RlxcdTIwM0YtXFx1MjA0MF0qJC8sRmY9e30sR2Y9e307XG5mdW5jdGlvbiBIZihhKXtpZihHZi5oYXNPd25Qcm9wZXJ0eShhKSlyZXR1cm4hMDtpZihGZi5oYXNPd25Qcm9wZXJ0eShhKSlyZXR1cm4hMTtpZihFZi50ZXN0KGEpKXJldHVybiBHZlthXT0hMDtGZlthXT0hMDtyZXR1cm4hMX1cbmZ1bmN0aW9uIElmKGEsYixjKXt2YXIgZD13YShiKTtpZihkJiZ2YShiLGMpKXt2YXIgZT1kLm11dGF0aW9uTWV0aG9kO2U/ZShhLGMpOm51bGw9PWN8fGQuaGFzQm9vbGVhblZhbHVlJiYhY3x8ZC5oYXNOdW1lcmljVmFsdWUmJmlzTmFOKGMpfHxkLmhhc1Bvc2l0aXZlTnVtZXJpY1ZhbHVlJiYxPmN8fGQuaGFzT3ZlcmxvYWRlZEJvb2xlYW5WYWx1ZSYmITE9PT1jP0pmKGEsYik6ZC5tdXN0VXNlUHJvcGVydHk/YVtkLnByb3BlcnR5TmFtZV09YzooYj1kLmF0dHJpYnV0ZU5hbWUsKGU9ZC5hdHRyaWJ1dGVOYW1lc3BhY2UpP2Euc2V0QXR0cmlidXRlTlMoZSxiLFwiXCIrYyk6ZC5oYXNCb29sZWFuVmFsdWV8fGQuaGFzT3ZlcmxvYWRlZEJvb2xlYW5WYWx1ZSYmITA9PT1jP2Euc2V0QXR0cmlidXRlKGIsXCJcIik6YS5zZXRBdHRyaWJ1dGUoYixcIlwiK2MpKX1lbHNlIEtmKGEsYix2YShiLGMpP2M6bnVsbCl9XG5mdW5jdGlvbiBLZihhLGIsYyl7SGYoYikmJihudWxsPT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOmEuc2V0QXR0cmlidXRlKGIsXCJcIitjKSl9ZnVuY3Rpb24gSmYoYSxiKXt2YXIgYz13YShiKTtjPyhiPWMubXV0YXRpb25NZXRob2QpP2IoYSx2b2lkIDApOmMubXVzdFVzZVByb3BlcnR5P2FbYy5wcm9wZXJ0eU5hbWVdPWMuaGFzQm9vbGVhblZhbHVlPyExOlwiXCI6YS5yZW1vdmVBdHRyaWJ1dGUoYy5hdHRyaWJ1dGVOYW1lKTphLnJlbW92ZUF0dHJpYnV0ZShiKX1cbmZ1bmN0aW9uIExmKGEsYil7dmFyIGM9Yi52YWx1ZSxkPWIuY2hlY2tlZDtyZXR1cm4gQih7dHlwZTp2b2lkIDAsc3RlcDp2b2lkIDAsbWluOnZvaWQgMCxtYXg6dm9pZCAwfSxiLHtkZWZhdWx0Q2hlY2tlZDp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCx2YWx1ZTpudWxsIT1jP2M6YS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZSxjaGVja2VkOm51bGwhPWQ/ZDphLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWR9KX1mdW5jdGlvbiBNZihhLGIpe3ZhciBjPWIuZGVmYXVsdFZhbHVlO2EuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbENoZWNrZWQ6bnVsbCE9Yi5jaGVja2VkP2IuY2hlY2tlZDpiLmRlZmF1bHRDaGVja2VkLGluaXRpYWxWYWx1ZTpudWxsIT1iLnZhbHVlP2IudmFsdWU6Yyxjb250cm9sbGVkOlwiY2hlY2tib3hcIj09PWIudHlwZXx8XCJyYWRpb1wiPT09Yi50eXBlP251bGwhPWIuY2hlY2tlZDpudWxsIT1iLnZhbHVlfX1cbmZ1bmN0aW9uIE5mKGEsYil7Yj1iLmNoZWNrZWQ7bnVsbCE9YiYmSWYoYSxcImNoZWNrZWRcIixiKX1mdW5jdGlvbiBPZihhLGIpe05mKGEsYik7dmFyIGM9Yi52YWx1ZTtpZihudWxsIT1jKWlmKDA9PT1jJiZcIlwiPT09YS52YWx1ZSlhLnZhbHVlPVwiMFwiO2Vsc2UgaWYoXCJudW1iZXJcIj09PWIudHlwZSl7aWYoYj1wYXJzZUZsb2F0KGEudmFsdWUpfHwwLGMhPWJ8fGM9PWImJmEudmFsdWUhPWMpYS52YWx1ZT1cIlwiK2N9ZWxzZSBhLnZhbHVlIT09XCJcIitjJiYoYS52YWx1ZT1cIlwiK2MpO2Vsc2UgbnVsbD09Yi52YWx1ZSYmbnVsbCE9Yi5kZWZhdWx0VmFsdWUmJmEuZGVmYXVsdFZhbHVlIT09XCJcIitiLmRlZmF1bHRWYWx1ZSYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrYi5kZWZhdWx0VmFsdWUpLG51bGw9PWIuY2hlY2tlZCYmbnVsbCE9Yi5kZWZhdWx0Q2hlY2tlZCYmKGEuZGVmYXVsdENoZWNrZWQ9ISFiLmRlZmF1bHRDaGVja2VkKX1cbmZ1bmN0aW9uIFBmKGEsYil7c3dpdGNoKGIudHlwZSl7Y2FzZSBcInN1Ym1pdFwiOmNhc2UgXCJyZXNldFwiOmJyZWFrO2Nhc2UgXCJjb2xvclwiOmNhc2UgXCJkYXRlXCI6Y2FzZSBcImRhdGV0aW1lXCI6Y2FzZSBcImRhdGV0aW1lLWxvY2FsXCI6Y2FzZSBcIm1vbnRoXCI6Y2FzZSBcInRpbWVcIjpjYXNlIFwid2Vla1wiOmEudmFsdWU9XCJcIjthLnZhbHVlPWEuZGVmYXVsdFZhbHVlO2JyZWFrO2RlZmF1bHQ6YS52YWx1ZT1hLnZhbHVlfWI9YS5uYW1lO1wiXCIhPT1iJiYoYS5uYW1lPVwiXCIpO2EuZGVmYXVsdENoZWNrZWQ9IWEuZGVmYXVsdENoZWNrZWQ7YS5kZWZhdWx0Q2hlY2tlZD0hYS5kZWZhdWx0Q2hlY2tlZDtcIlwiIT09YiYmKGEubmFtZT1iKX1mdW5jdGlvbiBRZihhKXt2YXIgYj1cIlwiO2FhLkNoaWxkcmVuLmZvckVhY2goYSxmdW5jdGlvbihhKXtudWxsPT1hfHxcInN0cmluZ1wiIT09dHlwZW9mIGEmJlwibnVtYmVyXCIhPT10eXBlb2YgYXx8KGIrPWEpfSk7cmV0dXJuIGJ9XG5mdW5jdGlvbiBSZihhLGIpe2E9Qih7Y2hpbGRyZW46dm9pZCAwfSxiKTtpZihiPVFmKGIuY2hpbGRyZW4pKWEuY2hpbGRyZW49YjtyZXR1cm4gYX1mdW5jdGlvbiBTZihhLGIsYyxkKXthPWEub3B0aW9ucztpZihiKXtiPXt9O2Zvcih2YXIgZT0wO2U8Yy5sZW5ndGg7ZSsrKWJbXCIkXCIrY1tlXV09ITA7Zm9yKGM9MDtjPGEubGVuZ3RoO2MrKyllPWIuaGFzT3duUHJvcGVydHkoXCIkXCIrYVtjXS52YWx1ZSksYVtjXS5zZWxlY3RlZCE9PWUmJihhW2NdLnNlbGVjdGVkPWUpLGUmJmQmJihhW2NdLmRlZmF1bHRTZWxlY3RlZD0hMCl9ZWxzZXtjPVwiXCIrYztiPW51bGw7Zm9yKGU9MDtlPGEubGVuZ3RoO2UrKyl7aWYoYVtlXS52YWx1ZT09PWMpe2FbZV0uc2VsZWN0ZWQ9ITA7ZCYmKGFbZV0uZGVmYXVsdFNlbGVjdGVkPSEwKTtyZXR1cm59bnVsbCE9PWJ8fGFbZV0uZGlzYWJsZWR8fChiPWFbZV0pfW51bGwhPT1iJiYoYi5zZWxlY3RlZD0hMCl9fVxuZnVuY3Rpb24gVGYoYSxiKXt2YXIgYz1iLnZhbHVlO2EuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbFZhbHVlOm51bGwhPWM/YzpiLmRlZmF1bHRWYWx1ZSx3YXNNdWx0aXBsZTohIWIubXVsdGlwbGV9fWZ1bmN0aW9uIFVmKGEsYil7bnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTD9FKFwiOTFcIik6dm9pZCAwO3JldHVybiBCKHt9LGIse3ZhbHVlOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLGNoaWxkcmVuOlwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZX0pfWZ1bmN0aW9uIFZmKGEsYil7dmFyIGM9Yi52YWx1ZTtudWxsPT1jJiYoYz1iLmRlZmF1bHRWYWx1ZSxiPWIuY2hpbGRyZW4sbnVsbCE9YiYmKG51bGwhPWM/RShcIjkyXCIpOnZvaWQgMCxBcnJheS5pc0FycmF5KGIpJiYoMT49Yi5sZW5ndGg/dm9pZCAwOkUoXCI5M1wiKSxiPWJbMF0pLGM9XCJcIitiKSxudWxsPT1jJiYoYz1cIlwiKSk7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsVmFsdWU6XCJcIitjfX1cbmZ1bmN0aW9uIFdmKGEsYil7dmFyIGM9Yi52YWx1ZTtudWxsIT1jJiYoYz1cIlwiK2MsYyE9PWEudmFsdWUmJihhLnZhbHVlPWMpLG51bGw9PWIuZGVmYXVsdFZhbHVlJiYoYS5kZWZhdWx0VmFsdWU9YykpO251bGwhPWIuZGVmYXVsdFZhbHVlJiYoYS5kZWZhdWx0VmFsdWU9Yi5kZWZhdWx0VmFsdWUpfWZ1bmN0aW9uIFhmKGEpe3ZhciBiPWEudGV4dENvbnRlbnQ7Yj09PWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWUmJihhLnZhbHVlPWIpfXZhciBZZj17aHRtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIixtYXRobWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCIsc3ZnOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIn07XG5mdW5jdGlvbiBaZihhKXtzd2l0Y2goYSl7Y2FzZSBcInN2Z1wiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIjtjYXNlIFwibWF0aFwiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiO2RlZmF1bHQ6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCJ9fWZ1bmN0aW9uICRmKGEsYil7cmV0dXJuIG51bGw9PWF8fFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiPT09YT9aZihiKTpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI9PT1hJiZcImZvcmVpZ25PYmplY3RcIj09PWI/XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI6YX1cbnZhciBhZz12b2lkIDAsYmc9ZnVuY3Rpb24oYSl7cmV0dXJuXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBNU0FwcCYmTVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24/ZnVuY3Rpb24oYixjLGQsZSl7TVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24oZnVuY3Rpb24oKXtyZXR1cm4gYShiLGMsZCxlKX0pfTphfShmdW5jdGlvbihhLGIpe2lmKGEubmFtZXNwYWNlVVJJIT09WWYuc3ZnfHxcImlubmVySFRNTFwiaW4gYSlhLmlubmVySFRNTD1iO2Vsc2V7YWc9YWd8fGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7YWcuaW5uZXJIVE1MPVwiXFx4M2NzdmdcXHgzZVwiK2IrXCJcXHgzYy9zdmdcXHgzZVwiO2ZvcihiPWFnLmZpcnN0Q2hpbGQ7YS5maXJzdENoaWxkOylhLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCk7Zm9yKDtiLmZpcnN0Q2hpbGQ7KWEuYXBwZW5kQ2hpbGQoYi5maXJzdENoaWxkKX19KTtcbmZ1bmN0aW9uIGNnKGEsYil7aWYoYil7dmFyIGM9YS5maXJzdENoaWxkO2lmKGMmJmM9PT1hLmxhc3RDaGlsZCYmMz09PWMubm9kZVR5cGUpe2Mubm9kZVZhbHVlPWI7cmV0dXJufX1hLnRleHRDb250ZW50PWJ9XG52YXIgZGc9e2FuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiEwLGJvcmRlckltYWdlT3V0c2V0OiEwLGJvcmRlckltYWdlU2xpY2U6ITAsYm9yZGVySW1hZ2VXaWR0aDohMCxib3hGbGV4OiEwLGJveEZsZXhHcm91cDohMCxib3hPcmRpbmFsR3JvdXA6ITAsY29sdW1uQ291bnQ6ITAsY29sdW1uczohMCxmbGV4OiEwLGZsZXhHcm93OiEwLGZsZXhQb3NpdGl2ZTohMCxmbGV4U2hyaW5rOiEwLGZsZXhOZWdhdGl2ZTohMCxmbGV4T3JkZXI6ITAsZ3JpZFJvdzohMCxncmlkUm93RW5kOiEwLGdyaWRSb3dTcGFuOiEwLGdyaWRSb3dTdGFydDohMCxncmlkQ29sdW1uOiEwLGdyaWRDb2x1bW5FbmQ6ITAsZ3JpZENvbHVtblNwYW46ITAsZ3JpZENvbHVtblN0YXJ0OiEwLGZvbnRXZWlnaHQ6ITAsbGluZUNsYW1wOiEwLGxpbmVIZWlnaHQ6ITAsb3BhY2l0eTohMCxvcmRlcjohMCxvcnBoYW5zOiEwLHRhYlNpemU6ITAsd2lkb3dzOiEwLHpJbmRleDohMCx6b29tOiEwLGZpbGxPcGFjaXR5OiEwLGZsb29kT3BhY2l0eTohMCxcbnN0b3BPcGFjaXR5OiEwLHN0cm9rZURhc2hhcnJheTohMCxzdHJva2VEYXNob2Zmc2V0OiEwLHN0cm9rZU1pdGVybGltaXQ6ITAsc3Ryb2tlT3BhY2l0eTohMCxzdHJva2VXaWR0aDohMH0sZWc9W1wiV2Via2l0XCIsXCJtc1wiLFwiTW96XCIsXCJPXCJdO09iamVjdC5rZXlzKGRnKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe2VnLmZvckVhY2goZnVuY3Rpb24oYil7Yj1iK2EuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrYS5zdWJzdHJpbmcoMSk7ZGdbYl09ZGdbYV19KX0pO1xuZnVuY3Rpb24gZmcoYSxiKXthPWEuc3R5bGU7Zm9yKHZhciBjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9MD09PWMuaW5kZXhPZihcIi0tXCIpO3ZhciBlPWM7dmFyIGY9YltjXTtlPW51bGw9PWZ8fFwiYm9vbGVhblwiPT09dHlwZW9mIGZ8fFwiXCI9PT1mP1wiXCI6ZHx8XCJudW1iZXJcIiE9PXR5cGVvZiBmfHwwPT09Znx8ZGcuaGFzT3duUHJvcGVydHkoZSkmJmRnW2VdPyhcIlwiK2YpLnRyaW0oKTpmK1wicHhcIjtcImZsb2F0XCI9PT1jJiYoYz1cImNzc0Zsb2F0XCIpO2Q/YS5zZXRQcm9wZXJ0eShjLGUpOmFbY109ZX19dmFyIGdnPUIoe21lbnVpdGVtOiEwfSx7YXJlYTohMCxiYXNlOiEwLGJyOiEwLGNvbDohMCxlbWJlZDohMCxocjohMCxpbWc6ITAsaW5wdXQ6ITAsa2V5Z2VuOiEwLGxpbms6ITAsbWV0YTohMCxwYXJhbTohMCxzb3VyY2U6ITAsdHJhY2s6ITAsd2JyOiEwfSk7XG5mdW5jdGlvbiBoZyhhLGIsYyl7YiYmKGdnW2FdJiYobnVsbCE9Yi5jaGlsZHJlbnx8bnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTD9FKFwiMTM3XCIsYSxjKCkpOnZvaWQgMCksbnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmKG51bGwhPWIuY2hpbGRyZW4/RShcIjYwXCIpOnZvaWQgMCxcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJlwiX19odG1sXCJpbiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MP3ZvaWQgMDpFKFwiNjFcIikpLG51bGwhPWIuc3R5bGUmJlwib2JqZWN0XCIhPT10eXBlb2YgYi5zdHlsZT9FKFwiNjJcIixjKCkpOnZvaWQgMCl9XG5mdW5jdGlvbiBpZyhhLGIpe2lmKC0xPT09YS5pbmRleE9mKFwiLVwiKSlyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGIuaXM7c3dpdGNoKGEpe2Nhc2UgXCJhbm5vdGF0aW9uLXhtbFwiOmNhc2UgXCJjb2xvci1wcm9maWxlXCI6Y2FzZSBcImZvbnQtZmFjZVwiOmNhc2UgXCJmb250LWZhY2Utc3JjXCI6Y2FzZSBcImZvbnQtZmFjZS11cmlcIjpjYXNlIFwiZm9udC1mYWNlLWZvcm1hdFwiOmNhc2UgXCJmb250LWZhY2UtbmFtZVwiOmNhc2UgXCJtaXNzaW5nLWdseXBoXCI6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMH19dmFyIGpnPVlmLmh0bWwsa2c9Qy50aGF0UmV0dXJucyhcIlwiKTtcbmZ1bmN0aW9uIGxnKGEsYil7YT05PT09YS5ub2RlVHlwZXx8MTE9PT1hLm5vZGVUeXBlP2E6YS5vd25lckRvY3VtZW50O3ZhciBjPUhkKGEpO2I9U2FbYl07Zm9yKHZhciBkPTA7ZDxiLmxlbmd0aDtkKyspe3ZhciBlPWJbZF07Yy5oYXNPd25Qcm9wZXJ0eShlKSYmY1tlXXx8KFwidG9wU2Nyb2xsXCI9PT1lP3dkKFwidG9wU2Nyb2xsXCIsXCJzY3JvbGxcIixhKTpcInRvcEZvY3VzXCI9PT1lfHxcInRvcEJsdXJcIj09PWU/KHdkKFwidG9wRm9jdXNcIixcImZvY3VzXCIsYSksd2QoXCJ0b3BCbHVyXCIsXCJibHVyXCIsYSksYy50b3BCbHVyPSEwLGMudG9wRm9jdXM9ITApOlwidG9wQ2FuY2VsXCI9PT1lPyh5YyhcImNhbmNlbFwiLCEwKSYmd2QoXCJ0b3BDYW5jZWxcIixcImNhbmNlbFwiLGEpLGMudG9wQ2FuY2VsPSEwKTpcInRvcENsb3NlXCI9PT1lPyh5YyhcImNsb3NlXCIsITApJiZ3ZChcInRvcENsb3NlXCIsXCJjbG9zZVwiLGEpLGMudG9wQ2xvc2U9ITApOkRkLmhhc093blByb3BlcnR5KGUpJiZVKGUsRGRbZV0sYSksY1tlXT0hMCl9fVxudmFyIG1nPXt0b3BBYm9ydDpcImFib3J0XCIsdG9wQ2FuUGxheTpcImNhbnBsYXlcIix0b3BDYW5QbGF5VGhyb3VnaDpcImNhbnBsYXl0aHJvdWdoXCIsdG9wRHVyYXRpb25DaGFuZ2U6XCJkdXJhdGlvbmNoYW5nZVwiLHRvcEVtcHRpZWQ6XCJlbXB0aWVkXCIsdG9wRW5jcnlwdGVkOlwiZW5jcnlwdGVkXCIsdG9wRW5kZWQ6XCJlbmRlZFwiLHRvcEVycm9yOlwiZXJyb3JcIix0b3BMb2FkZWREYXRhOlwibG9hZGVkZGF0YVwiLHRvcExvYWRlZE1ldGFkYXRhOlwibG9hZGVkbWV0YWRhdGFcIix0b3BMb2FkU3RhcnQ6XCJsb2Fkc3RhcnRcIix0b3BQYXVzZTpcInBhdXNlXCIsdG9wUGxheTpcInBsYXlcIix0b3BQbGF5aW5nOlwicGxheWluZ1wiLHRvcFByb2dyZXNzOlwicHJvZ3Jlc3NcIix0b3BSYXRlQ2hhbmdlOlwicmF0ZWNoYW5nZVwiLHRvcFNlZWtlZDpcInNlZWtlZFwiLHRvcFNlZWtpbmc6XCJzZWVraW5nXCIsdG9wU3RhbGxlZDpcInN0YWxsZWRcIix0b3BTdXNwZW5kOlwic3VzcGVuZFwiLHRvcFRpbWVVcGRhdGU6XCJ0aW1ldXBkYXRlXCIsdG9wVm9sdW1lQ2hhbmdlOlwidm9sdW1lY2hhbmdlXCIsXG50b3BXYWl0aW5nOlwid2FpdGluZ1wifTtmdW5jdGlvbiBuZyhhLGIsYyxkKXtjPTk9PT1jLm5vZGVUeXBlP2M6Yy5vd25lckRvY3VtZW50O2Q9PT1qZyYmKGQ9WmYoYSkpO2Q9PT1qZz9cInNjcmlwdFwiPT09YT8oYT1jLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksYS5pbm5lckhUTUw9XCJcXHgzY3NjcmlwdFxceDNlXFx4M2Mvc2NyaXB0XFx4M2VcIixhPWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKSk6YT1cInN0cmluZ1wiPT09dHlwZW9mIGIuaXM/Yy5jcmVhdGVFbGVtZW50KGEse2lzOmIuaXN9KTpjLmNyZWF0ZUVsZW1lbnQoYSk6YT1jLmNyZWF0ZUVsZW1lbnROUyhkLGEpO3JldHVybiBhfWZ1bmN0aW9uIG9nKGEsYil7cmV0dXJuKDk9PT1iLm5vZGVUeXBlP2I6Yi5vd25lckRvY3VtZW50KS5jcmVhdGVUZXh0Tm9kZShhKX1cbmZ1bmN0aW9uIHBnKGEsYixjLGQpe3ZhciBlPWlnKGIsYyk7c3dpdGNoKGIpe2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6VShcInRvcExvYWRcIixcImxvYWRcIixhKTt2YXIgZj1jO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihmIGluIG1nKW1nLmhhc093blByb3BlcnR5KGYpJiZVKGYsbWdbZl0sYSk7Zj1jO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpVKFwidG9wRXJyb3JcIixcImVycm9yXCIsYSk7Zj1jO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpVKFwidG9wRXJyb3JcIixcImVycm9yXCIsYSk7VShcInRvcExvYWRcIixcImxvYWRcIixhKTtmPWM7YnJlYWs7Y2FzZSBcImZvcm1cIjpVKFwidG9wUmVzZXRcIixcInJlc2V0XCIsYSk7VShcInRvcFN1Ym1pdFwiLFwic3VibWl0XCIsYSk7Zj1jO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6VShcInRvcFRvZ2dsZVwiLFwidG9nZ2xlXCIsYSk7Zj1jO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOk1mKGEsYyk7Zj1MZihhLGMpO1UoXCJ0b3BJbnZhbGlkXCIsXCJpbnZhbGlkXCIsYSk7XG5sZyhkLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmY9UmYoYSxjKTticmVhaztjYXNlIFwic2VsZWN0XCI6VGYoYSxjKTtmPUIoe30sYyx7dmFsdWU6dm9pZCAwfSk7VShcInRvcEludmFsaWRcIixcImludmFsaWRcIixhKTtsZyhkLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6VmYoYSxjKTtmPVVmKGEsYyk7VShcInRvcEludmFsaWRcIixcImludmFsaWRcIixhKTtsZyhkLFwib25DaGFuZ2VcIik7YnJlYWs7ZGVmYXVsdDpmPWN9aGcoYixmLGtnKTt2YXIgZz1mLGg7Zm9yKGggaW4gZylpZihnLmhhc093blByb3BlcnR5KGgpKXt2YXIgaz1nW2hdO1wic3R5bGVcIj09PWg/ZmcoYSxrLGtnKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1oPyhrPWs/ay5fX2h0bWw6dm9pZCAwLG51bGwhPWsmJmJnKGEsaykpOlwiY2hpbGRyZW5cIj09PWg/XCJzdHJpbmdcIj09PXR5cGVvZiBrPyhcInRleHRhcmVhXCIhPT1ifHxcIlwiIT09aykmJmNnKGEsayk6XCJudW1iZXJcIj09PXR5cGVvZiBrJiZjZyhhLFxuXCJcIitrKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09aCYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWgmJlwiYXV0b0ZvY3VzXCIhPT1oJiYoUmEuaGFzT3duUHJvcGVydHkoaCk/bnVsbCE9ayYmbGcoZCxoKTplP0tmKGEsaCxrKTpudWxsIT1rJiZJZihhLGgsaykpfXN3aXRjaChiKXtjYXNlIFwiaW5wdXRcIjpCYyhhKTtQZihhLGMpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOkJjKGEpO1hmKGEsYyk7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOm51bGwhPWMudmFsdWUmJmEuc2V0QXR0cmlidXRlKFwidmFsdWVcIixjLnZhbHVlKTticmVhaztjYXNlIFwic2VsZWN0XCI6YS5tdWx0aXBsZT0hIWMubXVsdGlwbGU7Yj1jLnZhbHVlO251bGwhPWI/U2YoYSwhIWMubXVsdGlwbGUsYiwhMSk6bnVsbCE9Yy5kZWZhdWx0VmFsdWUmJlNmKGEsISFjLm11bHRpcGxlLGMuZGVmYXVsdFZhbHVlLCEwKTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLm9uQ2xpY2smJihhLm9uY2xpY2s9XG5DKX19XG5mdW5jdGlvbiBzZyhhLGIsYyxkLGUpe3ZhciBmPW51bGw7c3dpdGNoKGIpe2Nhc2UgXCJpbnB1dFwiOmM9TGYoYSxjKTtkPUxmKGEsZCk7Zj1bXTticmVhaztjYXNlIFwib3B0aW9uXCI6Yz1SZihhLGMpO2Q9UmYoYSxkKTtmPVtdO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpjPUIoe30sYyx7dmFsdWU6dm9pZCAwfSk7ZD1CKHt9LGQse3ZhbHVlOnZvaWQgMH0pO2Y9W107YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6Yz1VZihhLGMpO2Q9VWYoYSxkKTtmPVtdO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiIT09dHlwZW9mIGMub25DbGljayYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGQub25DbGljayYmKGEub25jbGljaz1DKX1oZyhiLGQsa2cpO3ZhciBnLGg7YT1udWxsO2ZvcihnIGluIGMpaWYoIWQuaGFzT3duUHJvcGVydHkoZykmJmMuaGFzT3duUHJvcGVydHkoZykmJm51bGwhPWNbZ10paWYoXCJzdHlsZVwiPT09Zylmb3IoaCBpbiBiPWNbZ10sYiliLmhhc093blByb3BlcnR5KGgpJiYoYXx8KGE9e30pLGFbaF09XG5cIlwiKTtlbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiIT09ZyYmXCJjaGlsZHJlblwiIT09ZyYmXCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWcmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1nJiZcImF1dG9Gb2N1c1wiIT09ZyYmKFJhLmhhc093blByb3BlcnR5KGcpP2Z8fChmPVtdKTooZj1mfHxbXSkucHVzaChnLG51bGwpKTtmb3IoZyBpbiBkKXt2YXIgaz1kW2ddO2I9bnVsbCE9Yz9jW2ddOnZvaWQgMDtpZihkLmhhc093blByb3BlcnR5KGcpJiZrIT09YiYmKG51bGwhPWt8fG51bGwhPWIpKWlmKFwic3R5bGVcIj09PWcpaWYoYil7Zm9yKGggaW4gYikhYi5oYXNPd25Qcm9wZXJ0eShoKXx8ayYmay5oYXNPd25Qcm9wZXJ0eShoKXx8KGF8fChhPXt9KSxhW2hdPVwiXCIpO2ZvcihoIGluIGspay5oYXNPd25Qcm9wZXJ0eShoKSYmYltoXSE9PWtbaF0mJihhfHwoYT17fSksYVtoXT1rW2hdKX1lbHNlIGF8fChmfHwoZj1bXSksZi5wdXNoKGcsYSkpLGE9aztlbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09XG5nPyhrPWs/ay5fX2h0bWw6dm9pZCAwLGI9Yj9iLl9faHRtbDp2b2lkIDAsbnVsbCE9ayYmYiE9PWsmJihmPWZ8fFtdKS5wdXNoKGcsXCJcIitrKSk6XCJjaGlsZHJlblwiPT09Zz9iPT09a3x8XCJzdHJpbmdcIiE9PXR5cGVvZiBrJiZcIm51bWJlclwiIT09dHlwZW9mIGt8fChmPWZ8fFtdKS5wdXNoKGcsXCJcIitrKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09ZyYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWcmJihSYS5oYXNPd25Qcm9wZXJ0eShnKT8obnVsbCE9ayYmbGcoZSxnKSxmfHxiPT09a3x8KGY9W10pKTooZj1mfHxbXSkucHVzaChnLGspKX1hJiYoZj1mfHxbXSkucHVzaChcInN0eWxlXCIsYSk7cmV0dXJuIGZ9XG5mdW5jdGlvbiB0ZyhhLGIsYyxkLGUpe1wiaW5wdXRcIj09PWMmJlwicmFkaW9cIj09PWUudHlwZSYmbnVsbCE9ZS5uYW1lJiZOZihhLGUpO2lnKGMsZCk7ZD1pZyhjLGUpO2Zvcih2YXIgZj0wO2Y8Yi5sZW5ndGg7Zis9Mil7dmFyIGc9YltmXSxoPWJbZisxXTtcInN0eWxlXCI9PT1nP2ZnKGEsaCxrZyk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Zz9iZyhhLGgpOlwiY2hpbGRyZW5cIj09PWc/Y2coYSxoKTpkP251bGwhPWg/S2YoYSxnLGgpOmEucmVtb3ZlQXR0cmlidXRlKGcpOm51bGwhPWg/SWYoYSxnLGgpOkpmKGEsZyl9c3dpdGNoKGMpe2Nhc2UgXCJpbnB1dFwiOk9mKGEsZSk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6V2YoYSxlKTticmVhaztjYXNlIFwic2VsZWN0XCI6YS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZT12b2lkIDAsYj1hLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGUsYS5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlPSEhZS5tdWx0aXBsZSxjPWUudmFsdWUsbnVsbCE9Yz9TZihhLFxuISFlLm11bHRpcGxlLGMsITEpOmIhPT0hIWUubXVsdGlwbGUmJihudWxsIT1lLmRlZmF1bHRWYWx1ZT9TZihhLCEhZS5tdWx0aXBsZSxlLmRlZmF1bHRWYWx1ZSwhMCk6U2YoYSwhIWUubXVsdGlwbGUsZS5tdWx0aXBsZT9bXTpcIlwiLCExKSl9fVxuZnVuY3Rpb24gdWcoYSxiLGMsZCxlKXtzd2l0Y2goYil7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpVKFwidG9wTG9hZFwiLFwibG9hZFwiLGEpO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcih2YXIgZiBpbiBtZyltZy5oYXNPd25Qcm9wZXJ0eShmKSYmVShmLG1nW2ZdLGEpO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpVKFwidG9wRXJyb3JcIixcImVycm9yXCIsYSk7YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOlUoXCJ0b3BFcnJvclwiLFwiZXJyb3JcIixhKTtVKFwidG9wTG9hZFwiLFwibG9hZFwiLGEpO2JyZWFrO2Nhc2UgXCJmb3JtXCI6VShcInRvcFJlc2V0XCIsXCJyZXNldFwiLGEpO1UoXCJ0b3BTdWJtaXRcIixcInN1Ym1pdFwiLGEpO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6VShcInRvcFRvZ2dsZVwiLFwidG9nZ2xlXCIsYSk7YnJlYWs7Y2FzZSBcImlucHV0XCI6TWYoYSxjKTtVKFwidG9wSW52YWxpZFwiLFwiaW52YWxpZFwiLGEpO2xnKGUsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwic2VsZWN0XCI6VGYoYSxjKTtcblUoXCJ0b3BJbnZhbGlkXCIsXCJpbnZhbGlkXCIsYSk7bGcoZSxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOlZmKGEsYyksVShcInRvcEludmFsaWRcIixcImludmFsaWRcIixhKSxsZyhlLFwib25DaGFuZ2VcIil9aGcoYixjLGtnKTtkPW51bGw7Zm9yKHZhciBnIGluIGMpYy5oYXNPd25Qcm9wZXJ0eShnKSYmKGY9Y1tnXSxcImNoaWxkcmVuXCI9PT1nP1wic3RyaW5nXCI9PT10eXBlb2YgZj9hLnRleHRDb250ZW50IT09ZiYmKGQ9W1wiY2hpbGRyZW5cIixmXSk6XCJudW1iZXJcIj09PXR5cGVvZiBmJiZhLnRleHRDb250ZW50IT09XCJcIitmJiYoZD1bXCJjaGlsZHJlblwiLFwiXCIrZl0pOlJhLmhhc093blByb3BlcnR5KGcpJiZudWxsIT1mJiZsZyhlLGcpKTtzd2l0Y2goYil7Y2FzZSBcImlucHV0XCI6QmMoYSk7UGYoYSxjKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpCYyhhKTtYZihhLGMpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpjYXNlIFwib3B0aW9uXCI6YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5vbkNsaWNrJiZcbihhLm9uY2xpY2s9Qyl9cmV0dXJuIGR9ZnVuY3Rpb24gdmcoYSxiKXtyZXR1cm4gYS5ub2RlVmFsdWUhPT1ifVxudmFyIHdnPU9iamVjdC5mcmVlemUoe2NyZWF0ZUVsZW1lbnQ6bmcsY3JlYXRlVGV4dE5vZGU6b2csc2V0SW5pdGlhbFByb3BlcnRpZXM6cGcsZGlmZlByb3BlcnRpZXM6c2csdXBkYXRlUHJvcGVydGllczp0ZyxkaWZmSHlkcmF0ZWRQcm9wZXJ0aWVzOnVnLGRpZmZIeWRyYXRlZFRleHQ6dmcsd2FybkZvclVubWF0Y2hlZFRleHQ6ZnVuY3Rpb24oKXt9LHdhcm5Gb3JEZWxldGVkSHlkcmF0YWJsZUVsZW1lbnQ6ZnVuY3Rpb24oKXt9LHdhcm5Gb3JEZWxldGVkSHlkcmF0YWJsZVRleHQ6ZnVuY3Rpb24oKXt9LHdhcm5Gb3JJbnNlcnRlZEh5ZHJhdGVkRWxlbWVudDpmdW5jdGlvbigpe30sd2FybkZvckluc2VydGVkSHlkcmF0ZWRUZXh0OmZ1bmN0aW9uKCl7fSxyZXN0b3JlQ29udHJvbGxlZFN0YXRlOmZ1bmN0aW9uKGEsYixjKXtzd2l0Y2goYil7Y2FzZSBcImlucHV0XCI6T2YoYSxjKTtiPWMubmFtZTtpZihcInJhZGlvXCI9PT1jLnR5cGUmJm51bGwhPWIpe2ZvcihjPWE7Yy5wYXJlbnROb2RlOyljPVxuYy5wYXJlbnROb2RlO2M9Yy5xdWVyeVNlbGVjdG9yQWxsKFwiaW5wdXRbbmFtZVxceDNkXCIrSlNPTi5zdHJpbmdpZnkoXCJcIitiKSsnXVt0eXBlXFx4M2RcInJhZGlvXCJdJyk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKyl7dmFyIGQ9Y1tiXTtpZihkIT09YSYmZC5mb3JtPT09YS5mb3JtKXt2YXIgZT1yYihkKTtlP3ZvaWQgMDpFKFwiOTBcIik7Q2MoZCk7T2YoZCxlKX19fWJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOldmKGEsYyk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9Yy52YWx1ZSxudWxsIT1iJiZTZihhLCEhYy5tdWx0aXBsZSxiLCExKX19fSk7bmMuaW5qZWN0RmliZXJDb250cm9sbGVkSG9zdENvbXBvbmVudCh3Zyk7dmFyIHhnPW51bGwsTWc9bnVsbDtmdW5jdGlvbiBOZyhhKXtyZXR1cm4hKCFhfHwxIT09YS5ub2RlVHlwZSYmOSE9PWEubm9kZVR5cGUmJjExIT09YS5ub2RlVHlwZSYmKDghPT1hLm5vZGVUeXBlfHxcIiByZWFjdC1tb3VudC1wb2ludC11bnN0YWJsZSBcIiE9PWEubm9kZVZhbHVlKSl9XG5mdW5jdGlvbiBPZyhhKXthPWE/OT09PWEubm9kZVR5cGU/YS5kb2N1bWVudEVsZW1lbnQ6YS5maXJzdENoaWxkOm51bGw7cmV0dXJuISghYXx8MSE9PWEubm9kZVR5cGV8fCFhLmhhc0F0dHJpYnV0ZShcImRhdGEtcmVhY3Ryb290XCIpKX1cbnZhciBaPW9mKHtnZXRSb290SG9zdENvbnRleHQ6ZnVuY3Rpb24oYSl7dmFyIGI9YS5ub2RlVHlwZTtzd2l0Y2goYil7Y2FzZSA5OmNhc2UgMTE6YT0oYT1hLmRvY3VtZW50RWxlbWVudCk/YS5uYW1lc3BhY2VVUkk6JGYobnVsbCxcIlwiKTticmVhaztkZWZhdWx0OmI9OD09PWI/YS5wYXJlbnROb2RlOmEsYT1iLm5hbWVzcGFjZVVSSXx8bnVsbCxiPWIudGFnTmFtZSxhPSRmKGEsYil9cmV0dXJuIGF9LGdldENoaWxkSG9zdENvbnRleHQ6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gJGYoYSxiKX0sZ2V0UHVibGljSW5zdGFuY2U6ZnVuY3Rpb24oYSl7cmV0dXJuIGF9LHByZXBhcmVGb3JDb21taXQ6ZnVuY3Rpb24oKXt4Zz10ZDt2YXIgYT1kYSgpO2lmKEtkKGEpKXtpZihcInNlbGVjdGlvblN0YXJ0XCJpbiBhKXZhciBiPXtzdGFydDphLnNlbGVjdGlvblN0YXJ0LGVuZDphLnNlbGVjdGlvbkVuZH07ZWxzZSBhOnt2YXIgYz13aW5kb3cuZ2V0U2VsZWN0aW9uJiZ3aW5kb3cuZ2V0U2VsZWN0aW9uKCk7XG5pZihjJiYwIT09Yy5yYW5nZUNvdW50KXtiPWMuYW5jaG9yTm9kZTt2YXIgZD1jLmFuY2hvck9mZnNldCxlPWMuZm9jdXNOb2RlO2M9Yy5mb2N1c09mZnNldDt0cnl7Yi5ub2RlVHlwZSxlLm5vZGVUeXBlfWNhdGNoKHope2I9bnVsbDticmVhayBhfXZhciBmPTAsZz0tMSxoPS0xLGs9MCxxPTAsdj1hLHk9bnVsbDtiOmZvcig7Oyl7Zm9yKHZhciB1Ozspe3YhPT1ifHwwIT09ZCYmMyE9PXYubm9kZVR5cGV8fChnPWYrZCk7diE9PWV8fDAhPT1jJiYzIT09di5ub2RlVHlwZXx8KGg9ZitjKTszPT09di5ub2RlVHlwZSYmKGYrPXYubm9kZVZhbHVlLmxlbmd0aCk7aWYobnVsbD09PSh1PXYuZmlyc3RDaGlsZCkpYnJlYWs7eT12O3Y9dX1mb3IoOzspe2lmKHY9PT1hKWJyZWFrIGI7eT09PWImJisraz09PWQmJihnPWYpO3k9PT1lJiYrK3E9PT1jJiYoaD1mKTtpZihudWxsIT09KHU9di5uZXh0U2libGluZykpYnJlYWs7dj15O3k9di5wYXJlbnROb2RlfXY9dX1iPS0xPT09Z3x8LTE9PT1oP251bGw6XG57c3RhcnQ6ZyxlbmQ6aH19ZWxzZSBiPW51bGx9Yj1ifHx7c3RhcnQ6MCxlbmQ6MH19ZWxzZSBiPW51bGw7TWc9e2ZvY3VzZWRFbGVtOmEsc2VsZWN0aW9uUmFuZ2U6Yn07dWQoITEpfSxyZXNldEFmdGVyQ29tbWl0OmZ1bmN0aW9uKCl7dmFyIGE9TWcsYj1kYSgpLGM9YS5mb2N1c2VkRWxlbSxkPWEuc2VsZWN0aW9uUmFuZ2U7aWYoYiE9PWMmJmZhKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCxjKSl7aWYoS2QoYykpaWYoYj1kLnN0YXJ0LGE9ZC5lbmQsdm9pZCAwPT09YSYmKGE9YiksXCJzZWxlY3Rpb25TdGFydFwiaW4gYyljLnNlbGVjdGlvblN0YXJ0PWIsYy5zZWxlY3Rpb25FbmQ9TWF0aC5taW4oYSxjLnZhbHVlLmxlbmd0aCk7ZWxzZSBpZih3aW5kb3cuZ2V0U2VsZWN0aW9uKXtiPXdpbmRvdy5nZXRTZWxlY3Rpb24oKTt2YXIgZT1jW0ViKCldLmxlbmd0aDthPU1hdGgubWluKGQuc3RhcnQsZSk7ZD12b2lkIDA9PT1kLmVuZD9hOk1hdGgubWluKGQuZW5kLGUpOyFiLmV4dGVuZCYmYT5cbmQmJihlPWQsZD1hLGE9ZSk7ZT1KZChjLGEpO3ZhciBmPUpkKGMsZCk7aWYoZSYmZiYmKDEhPT1iLnJhbmdlQ291bnR8fGIuYW5jaG9yTm9kZSE9PWUubm9kZXx8Yi5hbmNob3JPZmZzZXQhPT1lLm9mZnNldHx8Yi5mb2N1c05vZGUhPT1mLm5vZGV8fGIuZm9jdXNPZmZzZXQhPT1mLm9mZnNldCkpe3ZhciBnPWRvY3VtZW50LmNyZWF0ZVJhbmdlKCk7Zy5zZXRTdGFydChlLm5vZGUsZS5vZmZzZXQpO2IucmVtb3ZlQWxsUmFuZ2VzKCk7YT5kPyhiLmFkZFJhbmdlKGcpLGIuZXh0ZW5kKGYubm9kZSxmLm9mZnNldCkpOihnLnNldEVuZChmLm5vZGUsZi5vZmZzZXQpLGIuYWRkUmFuZ2UoZykpfX1iPVtdO2ZvcihhPWM7YT1hLnBhcmVudE5vZGU7KTE9PT1hLm5vZGVUeXBlJiZiLnB1c2goe2VsZW1lbnQ6YSxsZWZ0OmEuc2Nyb2xsTGVmdCx0b3A6YS5zY3JvbGxUb3B9KTtpYShjKTtmb3IoYz0wO2M8Yi5sZW5ndGg7YysrKWE9YltjXSxhLmVsZW1lbnQuc2Nyb2xsTGVmdD1hLmxlZnQsYS5lbGVtZW50LnNjcm9sbFRvcD1cbmEudG9wfU1nPW51bGw7dWQoeGcpO3hnPW51bGx9LGNyZWF0ZUluc3RhbmNlOmZ1bmN0aW9uKGEsYixjLGQsZSl7YT1uZyhhLGIsYyxkKTthW1FdPWU7YVtvYl09YjtyZXR1cm4gYX0sYXBwZW5kSW5pdGlhbENoaWxkOmZ1bmN0aW9uKGEsYil7YS5hcHBlbmRDaGlsZChiKX0sZmluYWxpemVJbml0aWFsQ2hpbGRyZW46ZnVuY3Rpb24oYSxiLGMsZCl7cGcoYSxiLGMsZCk7YTp7c3dpdGNoKGIpe2Nhc2UgXCJidXR0b25cIjpjYXNlIFwiaW5wdXRcIjpjYXNlIFwic2VsZWN0XCI6Y2FzZSBcInRleHRhcmVhXCI6YT0hIWMuYXV0b0ZvY3VzO2JyZWFrIGF9YT0hMX1yZXR1cm4gYX0scHJlcGFyZVVwZGF0ZTpmdW5jdGlvbihhLGIsYyxkLGUpe3JldHVybiBzZyhhLGIsYyxkLGUpfSxzaG91bGRTZXRUZXh0Q29udGVudDpmdW5jdGlvbihhLGIpe3JldHVyblwidGV4dGFyZWFcIj09PWF8fFwic3RyaW5nXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJudW1iZXJcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm9iamVjdFwiPT09XG50eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9PWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJlwic3RyaW5nXCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTC5fX2h0bWx9LHNob3VsZERlcHJpb3JpdGl6ZVN1YnRyZWU6ZnVuY3Rpb24oYSxiKXtyZXR1cm4hIWIuaGlkZGVufSxjcmVhdGVUZXh0SW5zdGFuY2U6ZnVuY3Rpb24oYSxiLGMsZCl7YT1vZyhhLGIpO2FbUV09ZDtyZXR1cm4gYX0sbm93OnJmLG11dGF0aW9uOntjb21taXRNb3VudDpmdW5jdGlvbihhKXthLmZvY3VzKCl9LGNvbW1pdFVwZGF0ZTpmdW5jdGlvbihhLGIsYyxkLGUpe2Fbb2JdPWU7dGcoYSxiLGMsZCxlKX0scmVzZXRUZXh0Q29udGVudDpmdW5jdGlvbihhKXthLnRleHRDb250ZW50PVwiXCJ9LGNvbW1pdFRleHRVcGRhdGU6ZnVuY3Rpb24oYSxiLGMpe2Eubm9kZVZhbHVlPWN9LGFwcGVuZENoaWxkOmZ1bmN0aW9uKGEsYil7YS5hcHBlbmRDaGlsZChiKX0sYXBwZW5kQ2hpbGRUb0NvbnRhaW5lcjpmdW5jdGlvbihhLFxuYil7OD09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlLmluc2VydEJlZm9yZShiLGEpOmEuYXBwZW5kQ2hpbGQoYil9LGluc2VydEJlZm9yZTpmdW5jdGlvbihhLGIsYyl7YS5pbnNlcnRCZWZvcmUoYixjKX0saW5zZXJ0SW5Db250YWluZXJCZWZvcmU6ZnVuY3Rpb24oYSxiLGMpezg9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoYixjKTphLmluc2VydEJlZm9yZShiLGMpfSxyZW1vdmVDaGlsZDpmdW5jdGlvbihhLGIpe2EucmVtb3ZlQ2hpbGQoYil9LHJlbW92ZUNoaWxkRnJvbUNvbnRhaW5lcjpmdW5jdGlvbihhLGIpezg9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChiKTphLnJlbW92ZUNoaWxkKGIpfX0saHlkcmF0aW9uOntjYW5IeWRyYXRlSW5zdGFuY2U6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gMSE9PWEubm9kZVR5cGV8fGIudG9Mb3dlckNhc2UoKSE9PWEubm9kZU5hbWUudG9Mb3dlckNhc2UoKT9udWxsOmF9LGNhbkh5ZHJhdGVUZXh0SW5zdGFuY2U6ZnVuY3Rpb24oYSxcbmIpe3JldHVyblwiXCI9PT1ifHwzIT09YS5ub2RlVHlwZT9udWxsOmF9LGdldE5leHRIeWRyYXRhYmxlU2libGluZzpmdW5jdGlvbihhKXtmb3IoYT1hLm5leHRTaWJsaW5nO2EmJjEhPT1hLm5vZGVUeXBlJiYzIT09YS5ub2RlVHlwZTspYT1hLm5leHRTaWJsaW5nO3JldHVybiBhfSxnZXRGaXJzdEh5ZHJhdGFibGVDaGlsZDpmdW5jdGlvbihhKXtmb3IoYT1hLmZpcnN0Q2hpbGQ7YSYmMSE9PWEubm9kZVR5cGUmJjMhPT1hLm5vZGVUeXBlOylhPWEubmV4dFNpYmxpbmc7cmV0dXJuIGF9LGh5ZHJhdGVJbnN0YW5jZTpmdW5jdGlvbihhLGIsYyxkLGUsZil7YVtRXT1mO2Fbb2JdPWM7cmV0dXJuIHVnKGEsYixjLGUsZCl9LGh5ZHJhdGVUZXh0SW5zdGFuY2U6ZnVuY3Rpb24oYSxiLGMpe2FbUV09YztyZXR1cm4gdmcoYSxiKX0sZGlkTm90TWF0Y2hIeWRyYXRlZENvbnRhaW5lclRleHRJbnN0YW5jZTpmdW5jdGlvbigpe30sZGlkTm90TWF0Y2hIeWRyYXRlZFRleHRJbnN0YW5jZTpmdW5jdGlvbigpe30sXG5kaWROb3RIeWRyYXRlQ29udGFpbmVySW5zdGFuY2U6ZnVuY3Rpb24oKXt9LGRpZE5vdEh5ZHJhdGVJbnN0YW5jZTpmdW5jdGlvbigpe30sZGlkTm90RmluZEh5ZHJhdGFibGVDb250YWluZXJJbnN0YW5jZTpmdW5jdGlvbigpe30sZGlkTm90RmluZEh5ZHJhdGFibGVDb250YWluZXJUZXh0SW5zdGFuY2U6ZnVuY3Rpb24oKXt9LGRpZE5vdEZpbmRIeWRyYXRhYmxlSW5zdGFuY2U6ZnVuY3Rpb24oKXt9LGRpZE5vdEZpbmRIeWRyYXRhYmxlVGV4dEluc3RhbmNlOmZ1bmN0aW9uKCl7fX0sc2NoZWR1bGVEZWZlcnJlZENhbGxiYWNrOnNmLGNhbmNlbERlZmVycmVkQ2FsbGJhY2s6dGYsdXNlU3luY1NjaGVkdWxpbmc6ITB9KTtyYz1aLmJhdGNoZWRVcGRhdGVzO1xuZnVuY3Rpb24gUGcoYSxiLGMsZCxlKXtOZyhjKT92b2lkIDA6RShcIjIwMFwiKTt2YXIgZj1jLl9yZWFjdFJvb3RDb250YWluZXI7aWYoZilaLnVwZGF0ZUNvbnRhaW5lcihiLGYsYSxlKTtlbHNle2Q9ZHx8T2coYyk7aWYoIWQpZm9yKGY9dm9pZCAwO2Y9Yy5sYXN0Q2hpbGQ7KWMucmVtb3ZlQ2hpbGQoZik7dmFyIGc9Wi5jcmVhdGVDb250YWluZXIoYyxkKTtmPWMuX3JlYWN0Um9vdENvbnRhaW5lcj1nO1oudW5iYXRjaGVkVXBkYXRlcyhmdW5jdGlvbigpe1oudXBkYXRlQ29udGFpbmVyKGIsZyxhLGUpfSl9cmV0dXJuIFouZ2V0UHVibGljUm9vdEluc3RhbmNlKGYpfWZ1bmN0aW9uIFFnKGEsYil7dmFyIGM9Mjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGw7TmcoYik/dm9pZCAwOkUoXCIyMDBcIik7cmV0dXJuIHBmKGEsYixudWxsLGMpfVxuZnVuY3Rpb24gUmcoYSxiKXt0aGlzLl9yZWFjdFJvb3RDb250YWluZXI9Wi5jcmVhdGVDb250YWluZXIoYSxiKX1SZy5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKGEsYil7Wi51cGRhdGVDb250YWluZXIoYSx0aGlzLl9yZWFjdFJvb3RDb250YWluZXIsbnVsbCxiKX07UmcucHJvdG90eXBlLnVubW91bnQ9ZnVuY3Rpb24oYSl7Wi51cGRhdGVDb250YWluZXIobnVsbCx0aGlzLl9yZWFjdFJvb3RDb250YWluZXIsbnVsbCxhKX07XG52YXIgU2c9e2NyZWF0ZVBvcnRhbDpRZyxmaW5kRE9NTm9kZTpmdW5jdGlvbihhKXtpZihudWxsPT1hKXJldHVybiBudWxsO2lmKDE9PT1hLm5vZGVUeXBlKXJldHVybiBhO3ZhciBiPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjtpZihiKXJldHVybiBaLmZpbmRIb3N0SW5zdGFuY2UoYik7XCJmdW5jdGlvblwiPT09dHlwZW9mIGEucmVuZGVyP0UoXCIxODhcIik6RShcIjIxM1wiLE9iamVjdC5rZXlzKGEpKX0saHlkcmF0ZTpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIFBnKG51bGwsYSxiLCEwLGMpfSxyZW5kZXI6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBQZyhudWxsLGEsYiwhMSxjKX0sdW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXI6ZnVuY3Rpb24oYSxiLGMsZCl7bnVsbD09YXx8dm9pZCAwPT09YS5fcmVhY3RJbnRlcm5hbEZpYmVyP0UoXCIzOFwiKTp2b2lkIDA7cmV0dXJuIFBnKGEsYixjLCExLGQpfSx1bm1vdW50Q29tcG9uZW50QXROb2RlOmZ1bmN0aW9uKGEpe05nKGEpP3ZvaWQgMDpcbkUoXCI0MFwiKTtyZXR1cm4gYS5fcmVhY3RSb290Q29udGFpbmVyPyhaLnVuYmF0Y2hlZFVwZGF0ZXMoZnVuY3Rpb24oKXtQZyhudWxsLG51bGwsYSwhMSxmdW5jdGlvbigpe2EuX3JlYWN0Um9vdENvbnRhaW5lcj1udWxsfSl9KSwhMCk6ITF9LHVuc3RhYmxlX2NyZWF0ZVBvcnRhbDpRZyx1bnN0YWJsZV9iYXRjaGVkVXBkYXRlczp0Yyx1bnN0YWJsZV9kZWZlcnJlZFVwZGF0ZXM6Wi5kZWZlcnJlZFVwZGF0ZXMsZmx1c2hTeW5jOlouZmx1c2hTeW5jLF9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEOntFdmVudFBsdWdpbkh1YjptYixFdmVudFBsdWdpblJlZ2lzdHJ5OlZhLEV2ZW50UHJvcGFnYXRvcnM6Q2IsUmVhY3RDb250cm9sbGVkQ29tcG9uZW50OnFjLFJlYWN0RE9NQ29tcG9uZW50VHJlZTpzYixSZWFjdERPTUV2ZW50TGlzdGVuZXI6eGR9fTtcblouaW5qZWN0SW50b0RldlRvb2xzKHtmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTpwYixidW5kbGVUeXBlOjAsdmVyc2lvbjpcIjE2LjIuMFwiLHJlbmRlcmVyUGFja2FnZU5hbWU6XCJyZWFjdC1kb21cIn0pO3ZhciBUZz1PYmplY3QuZnJlZXplKHtkZWZhdWx0OlNnfSksVWc9VGcmJlNnfHxUZzttb2R1bGUuZXhwb3J0cz1VZ1tcImRlZmF1bHRcIl0/VWdbXCJkZWZhdWx0XCJdOlVnO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBjaGVja0RDRSgpIHtcbiAgLyogZ2xvYmFsIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyAqL1xuICBpZiAoXG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyA9PT0gJ3VuZGVmaW5lZCcgfHxcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFICE9PSAnZnVuY3Rpb24nXG4gICkge1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIC8vIFRoaXMgYnJhbmNoIGlzIHVucmVhY2hhYmxlIGJlY2F1c2UgdGhpcyBmdW5jdGlvbiBpcyBvbmx5IGNhbGxlZFxuICAgIC8vIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgY29uZGl0aW9uIGlzIHRydWUgb25seSBpbiBkZXZlbG9wbWVudC5cbiAgICAvLyBUaGVyZWZvcmUgaWYgdGhlIGJyYW5jaCBpcyBzdGlsbCBoZXJlLCBkZWFkIGNvZGUgZWxpbWluYXRpb24gd2Fzbid0XG4gICAgLy8gcHJvcGVybHkgYXBwbGllZC5cbiAgICAvLyBEb24ndCBjaGFuZ2UgdGhlIG1lc3NhZ2UuIFJlYWN0IERldlRvb2xzIHJlbGllcyBvbiBpdC4gQWxzbyBtYWtlIHN1cmVcbiAgICAvLyB0aGlzIG1lc3NhZ2UgZG9lc24ndCBvY2N1ciBlbHNld2hlcmUgaW4gdGhpcyBmdW5jdGlvbiwgb3IgaXQgd2lsbCBjYXVzZVxuICAgIC8vIGEgZmFsc2UgcG9zaXRpdmUuXG4gICAgdGhyb3cgbmV3IEVycm9yKCdeX14nKTtcbiAgfVxuICB0cnkge1xuICAgIC8vIFZlcmlmeSB0aGF0IHRoZSBjb2RlIGFib3ZlIGhhcyBiZWVuIGRlYWQgY29kZSBlbGltaW5hdGVkIChEQ0UnZCkuXG4gICAgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFKGNoZWNrRENFKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgLy8gRGV2VG9vbHMgc2hvdWxkbid0IGNyYXNoIFJlYWN0LCBubyBtYXR0ZXIgd2hhdC5cbiAgICAvLyBXZSBzaG91bGQgc3RpbGwgcmVwb3J0IGluIGNhc2Ugd2UgYnJlYWsgdGhpcyBjb2RlLlxuICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgfVxufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICAvLyBEQ0UgY2hlY2sgc2hvdWxkIGhhcHBlbiBiZWZvcmUgUmVhY3RET00gYnVuZGxlIGV4ZWN1dGVzIHNvIHRoYXRcbiAgLy8gRGV2VG9vbHMgY2FuIHJlcG9ydCBiYWQgbWluaWZpY2F0aW9uIGR1cmluZyBpbmplY3Rpb24uXG4gIGNoZWNrRENFKCk7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi4yLjBcbiAqIHJlYWN0LnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO3ZhciBtPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLG49cmVxdWlyZShcImZianMvbGliL2VtcHR5T2JqZWN0XCIpLHA9cmVxdWlyZShcImZianMvbGliL2VtcHR5RnVuY3Rpb25cIikscT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2xbXCJmb3JcIl0scj1xP1N5bWJvbFtcImZvclwiXShcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMsdD1xP1N5bWJvbFtcImZvclwiXShcInJlYWN0LmNhbGxcIik6NjAxMDQsdT1xP1N5bWJvbFtcImZvclwiXShcInJlYWN0LnJldHVyblwiKTo2MDEwNSx2PXE/U3ltYm9sW1wiZm9yXCJdKFwicmVhY3QucG9ydGFsXCIpOjYwMTA2LHc9cT9TeW1ib2xbXCJmb3JcIl0oXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyx4PVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtcbmZ1bmN0aW9uIHkoYSl7Zm9yKHZhciBiPWFyZ3VtZW50cy5sZW5ndGgtMSxlPVwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0IGh0dHA6Ly9mYWNlYm9vay5naXRodWIuaW8vcmVhY3QvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50XFx4M2RcIithLGM9MDtjPGI7YysrKWUrPVwiXFx4MjZhcmdzW11cXHgzZFwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbYysxXSk7Yj1FcnJvcihlK1wiIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIik7Yi5uYW1lPVwiSW52YXJpYW50IFZpb2xhdGlvblwiO2IuZnJhbWVzVG9Qb3A9MTt0aHJvdyBiO31cbnZhciB6PXtpc01vdW50ZWQ6ZnVuY3Rpb24oKXtyZXR1cm4hMX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oKXt9fTtmdW5jdGlvbiBBKGEsYixlKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPW47dGhpcy51cGRhdGVyPWV8fHp9QS5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudD17fTtBLnByb3RvdHlwZS5zZXRTdGF0ZT1mdW5jdGlvbihhLGIpe1wib2JqZWN0XCIhPT10eXBlb2YgYSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJm51bGwhPWE/eShcIjg1XCIpOnZvaWQgMDt0aGlzLnVwZGF0ZXIuZW5xdWV1ZVNldFN0YXRlKHRoaXMsYSxiLFwic2V0U3RhdGVcIil9O0EucHJvdG90eXBlLmZvcmNlVXBkYXRlPWZ1bmN0aW9uKGEpe3RoaXMudXBkYXRlci5lbnF1ZXVlRm9yY2VVcGRhdGUodGhpcyxhLFwiZm9yY2VVcGRhdGVcIil9O1xuZnVuY3Rpb24gQihhLGIsZSl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1uO3RoaXMudXBkYXRlcj1lfHx6fWZ1bmN0aW9uIEMoKXt9Qy5wcm90b3R5cGU9QS5wcm90b3R5cGU7dmFyIEQ9Qi5wcm90b3R5cGU9bmV3IEM7RC5jb25zdHJ1Y3Rvcj1CO20oRCxBLnByb3RvdHlwZSk7RC5pc1B1cmVSZWFjdENvbXBvbmVudD0hMDtmdW5jdGlvbiBFKGEsYixlKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPW47dGhpcy51cGRhdGVyPWV8fHp9dmFyIEY9RS5wcm90b3R5cGU9bmV3IEM7Ri5jb25zdHJ1Y3Rvcj1FO20oRixBLnByb3RvdHlwZSk7Ri51bnN0YWJsZV9pc0FzeW5jUmVhY3RDb21wb25lbnQ9ITA7Ri5yZW5kZXI9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5wcm9wcy5jaGlsZHJlbn07dmFyIEc9e2N1cnJlbnQ6bnVsbH0sSD1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LEk9e2tleTohMCxyZWY6ITAsX19zZWxmOiEwLF9fc291cmNlOiEwfTtcbmZ1bmN0aW9uIEooYSxiLGUpe3ZhciBjLGQ9e30sZz1udWxsLGs9bnVsbDtpZihudWxsIT1iKWZvcihjIGluIHZvaWQgMCE9PWIucmVmJiYoaz1iLnJlZiksdm9pZCAwIT09Yi5rZXkmJihnPVwiXCIrYi5rZXkpLGIpSC5jYWxsKGIsYykmJiFJLmhhc093blByb3BlcnR5KGMpJiYoZFtjXT1iW2NdKTt2YXIgZj1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWYpZC5jaGlsZHJlbj1lO2Vsc2UgaWYoMTxmKXtmb3IodmFyIGg9QXJyYXkoZiksbD0wO2w8ZjtsKyspaFtsXT1hcmd1bWVudHNbbCsyXTtkLmNoaWxkcmVuPWh9aWYoYSYmYS5kZWZhdWx0UHJvcHMpZm9yKGMgaW4gZj1hLmRlZmF1bHRQcm9wcyxmKXZvaWQgMD09PWRbY10mJihkW2NdPWZbY10pO3JldHVybnskJHR5cGVvZjpyLHR5cGU6YSxrZXk6ZyxyZWY6ayxwcm9wczpkLF9vd25lcjpHLmN1cnJlbnR9fWZ1bmN0aW9uIEsoYSl7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmYS4kJHR5cGVvZj09PXJ9XG5mdW5jdGlvbiBlc2NhcGUoYSl7dmFyIGI9e1wiXFx4M2RcIjpcIlxceDNkMFwiLFwiOlwiOlwiXFx4M2QyXCJ9O3JldHVyblwiJFwiKyhcIlwiK2EpLnJlcGxhY2UoL1s9Ol0vZyxmdW5jdGlvbihhKXtyZXR1cm4gYlthXX0pfXZhciBMPS9cXC8rL2csTT1bXTtmdW5jdGlvbiBOKGEsYixlLGMpe2lmKE0ubGVuZ3RoKXt2YXIgZD1NLnBvcCgpO2QucmVzdWx0PWE7ZC5rZXlQcmVmaXg9YjtkLmZ1bmM9ZTtkLmNvbnRleHQ9YztkLmNvdW50PTA7cmV0dXJuIGR9cmV0dXJue3Jlc3VsdDphLGtleVByZWZpeDpiLGZ1bmM6ZSxjb250ZXh0OmMsY291bnQ6MH19ZnVuY3Rpb24gTyhhKXthLnJlc3VsdD1udWxsO2Eua2V5UHJlZml4PW51bGw7YS5mdW5jPW51bGw7YS5jb250ZXh0PW51bGw7YS5jb3VudD0wOzEwPk0ubGVuZ3RoJiZNLnB1c2goYSl9XG5mdW5jdGlvbiBQKGEsYixlLGMpe3ZhciBkPXR5cGVvZiBhO2lmKFwidW5kZWZpbmVkXCI9PT1kfHxcImJvb2xlYW5cIj09PWQpYT1udWxsO3ZhciBnPSExO2lmKG51bGw9PT1hKWc9ITA7ZWxzZSBzd2l0Y2goZCl7Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJudW1iZXJcIjpnPSEwO2JyZWFrO2Nhc2UgXCJvYmplY3RcIjpzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSByOmNhc2UgdDpjYXNlIHU6Y2FzZSB2Omc9ITB9fWlmKGcpcmV0dXJuIGUoYyxhLFwiXCI9PT1iP1wiLlwiK1EoYSwwKTpiKSwxO2c9MDtiPVwiXCI9PT1iP1wiLlwiOmIrXCI6XCI7aWYoQXJyYXkuaXNBcnJheShhKSlmb3IodmFyIGs9MDtrPGEubGVuZ3RoO2srKyl7ZD1hW2tdO3ZhciBmPWIrUShkLGspO2crPVAoZCxmLGUsYyl9ZWxzZSBpZihudWxsPT09YXx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiBhP2Y9bnVsbDooZj14JiZhW3hdfHxhW1wiQEBpdGVyYXRvclwiXSxmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBmP2Y6bnVsbCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGYpZm9yKGE9XG5mLmNhbGwoYSksaz0wOyEoZD1hLm5leHQoKSkuZG9uZTspZD1kLnZhbHVlLGY9YitRKGQsaysrKSxnKz1QKGQsZixlLGMpO2Vsc2VcIm9iamVjdFwiPT09ZCYmKGU9XCJcIithLHkoXCIzMVwiLFwiW29iamVjdCBPYmplY3RdXCI9PT1lP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYSkuam9pbihcIiwgXCIpK1wifVwiOmUsXCJcIikpO3JldHVybiBnfWZ1bmN0aW9uIFEoYSxiKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZudWxsIT1hLmtleT9lc2NhcGUoYS5rZXkpOmIudG9TdHJpbmcoMzYpfWZ1bmN0aW9uIFIoYSxiKXthLmZ1bmMuY2FsbChhLmNvbnRleHQsYixhLmNvdW50KyspfVxuZnVuY3Rpb24gUyhhLGIsZSl7dmFyIGM9YS5yZXN1bHQsZD1hLmtleVByZWZpeDthPWEuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyk7QXJyYXkuaXNBcnJheShhKT9UKGEsYyxlLHAudGhhdFJldHVybnNBcmd1bWVudCk6bnVsbCE9YSYmKEsoYSkmJihiPWQrKCFhLmtleXx8YiYmYi5rZXk9PT1hLmtleT9cIlwiOihcIlwiK2Eua2V5KS5yZXBsYWNlKEwsXCIkXFx4MjYvXCIpK1wiL1wiKStlLGE9eyQkdHlwZW9mOnIsdHlwZTphLnR5cGUsa2V5OmIscmVmOmEucmVmLHByb3BzOmEucHJvcHMsX293bmVyOmEuX293bmVyfSksYy5wdXNoKGEpKX1mdW5jdGlvbiBUKGEsYixlLGMsZCl7dmFyIGc9XCJcIjtudWxsIT1lJiYoZz0oXCJcIitlKS5yZXBsYWNlKEwsXCIkXFx4MjYvXCIpK1wiL1wiKTtiPU4oYixnLGMsZCk7bnVsbD09YXx8UChhLFwiXCIsUyxiKTtPKGIpfVxudmFyIFU9e0NoaWxkcmVuOnttYXA6ZnVuY3Rpb24oYSxiLGUpe2lmKG51bGw9PWEpcmV0dXJuIGE7dmFyIGM9W107VChhLGMsbnVsbCxiLGUpO3JldHVybiBjfSxmb3JFYWNoOmZ1bmN0aW9uKGEsYixlKXtpZihudWxsPT1hKXJldHVybiBhO2I9TihudWxsLG51bGwsYixlKTtudWxsPT1hfHxQKGEsXCJcIixSLGIpO08oYil9LGNvdW50OmZ1bmN0aW9uKGEpe3JldHVybiBudWxsPT1hPzA6UChhLFwiXCIscC50aGF0UmV0dXJuc051bGwsbnVsbCl9LHRvQXJyYXk6ZnVuY3Rpb24oYSl7dmFyIGI9W107VChhLGIsbnVsbCxwLnRoYXRSZXR1cm5zQXJndW1lbnQpO3JldHVybiBifSxvbmx5OmZ1bmN0aW9uKGEpe0soYSk/dm9pZCAwOnkoXCIxNDNcIik7cmV0dXJuIGF9fSxDb21wb25lbnQ6QSxQdXJlQ29tcG9uZW50OkIsdW5zdGFibGVfQXN5bmNDb21wb25lbnQ6RSxGcmFnbWVudDp3LGNyZWF0ZUVsZW1lbnQ6SixjbG9uZUVsZW1lbnQ6ZnVuY3Rpb24oYSxiLGUpe3ZhciBjPW0oe30sYS5wcm9wcyksXG5kPWEua2V5LGc9YS5yZWYsaz1hLl9vd25lcjtpZihudWxsIT1iKXt2b2lkIDAhPT1iLnJlZiYmKGc9Yi5yZWYsaz1HLmN1cnJlbnQpO3ZvaWQgMCE9PWIua2V5JiYoZD1cIlwiK2Iua2V5KTtpZihhLnR5cGUmJmEudHlwZS5kZWZhdWx0UHJvcHMpdmFyIGY9YS50eXBlLmRlZmF1bHRQcm9wcztmb3IoaCBpbiBiKUguY2FsbChiLGgpJiYhSS5oYXNPd25Qcm9wZXJ0eShoKSYmKGNbaF09dm9pZCAwPT09YltoXSYmdm9pZCAwIT09Zj9mW2hdOmJbaF0pfXZhciBoPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09aCljLmNoaWxkcmVuPWU7ZWxzZSBpZigxPGgpe2Y9QXJyYXkoaCk7Zm9yKHZhciBsPTA7bDxoO2wrKylmW2xdPWFyZ3VtZW50c1tsKzJdO2MuY2hpbGRyZW49Zn1yZXR1cm57JCR0eXBlb2Y6cix0eXBlOmEudHlwZSxrZXk6ZCxyZWY6Zyxwcm9wczpjLF9vd25lcjprfX0sY3JlYXRlRmFjdG9yeTpmdW5jdGlvbihhKXt2YXIgYj1KLmJpbmQobnVsbCxhKTtiLnR5cGU9YTtyZXR1cm4gYn0sXG5pc1ZhbGlkRWxlbWVudDpLLHZlcnNpb246XCIxNi4yLjBcIixfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDp7UmVhY3RDdXJyZW50T3duZXI6Ryxhc3NpZ246bX19LFY9T2JqZWN0LmZyZWV6ZSh7ZGVmYXVsdDpVfSksVz1WJiZVfHxWO21vZHVsZS5leHBvcnRzPVdbXCJkZWZhdWx0XCJdP1dbXCJkZWZhdWx0XCJdOlc7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsImlmICh0eXBlb2YgT2JqZWN0LmNyZWF0ZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAvLyBpbXBsZW1lbnRhdGlvbiBmcm9tIHN0YW5kYXJkIG5vZGUuanMgJ3V0aWwnIG1vZHVsZVxuICBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGluaGVyaXRzKGN0b3IsIHN1cGVyQ3Rvcikge1xuICAgIGN0b3Iuc3VwZXJfID0gc3VwZXJDdG9yXG4gICAgY3Rvci5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ3Rvci5wcm90b3R5cGUsIHtcbiAgICAgIGNvbnN0cnVjdG9yOiB7XG4gICAgICAgIHZhbHVlOiBjdG9yLFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgICAgfVxuICAgIH0pO1xuICB9O1xufSBlbHNlIHtcbiAgLy8gb2xkIHNjaG9vbCBzaGltIGZvciBvbGQgYnJvd3NlcnNcbiAgbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpbmhlcml0cyhjdG9yLCBzdXBlckN0b3IpIHtcbiAgICBjdG9yLnN1cGVyXyA9IHN1cGVyQ3RvclxuICAgIHZhciBUZW1wQ3RvciA9IGZ1bmN0aW9uICgpIHt9XG4gICAgVGVtcEN0b3IucHJvdG90eXBlID0gc3VwZXJDdG9yLnByb3RvdHlwZVxuICAgIGN0b3IucHJvdG90eXBlID0gbmV3IFRlbXBDdG9yKClcbiAgICBjdG9yLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IGN0b3JcbiAgfVxufVxuIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpc0J1ZmZlcihhcmcpIHtcbiAgcmV0dXJuIGFyZyAmJiB0eXBlb2YgYXJnID09PSAnb2JqZWN0J1xuICAgICYmIHR5cGVvZiBhcmcuY29weSA9PT0gJ2Z1bmN0aW9uJ1xuICAgICYmIHR5cGVvZiBhcmcuZmlsbCA9PT0gJ2Z1bmN0aW9uJ1xuICAgICYmIHR5cGVvZiBhcmcucmVhZFVJbnQ4ID09PSAnZnVuY3Rpb24nO1xufSIsIi8vIENvcHlyaWdodCBKb3llbnQsIEluYy4gYW5kIG90aGVyIE5vZGUgY29udHJpYnV0b3JzLlxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhXG4vLyBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlXG4vLyBcIlNvZnR3YXJlXCIpLCB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmdcbi8vIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCxcbi8vIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXRcbi8vIHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZVxuLy8gZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWRcbi8vIGluIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1Ncbi8vIE9SIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0Zcbi8vIE1FUkNIQU5UQUJJTElUWSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU5cbi8vIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLFxuLy8gREFNQUdFUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SXG4vLyBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFXG4vLyBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLlxuXG52YXIgZm9ybWF0UmVnRXhwID0gLyVbc2RqJV0vZztcbmV4cG9ydHMuZm9ybWF0ID0gZnVuY3Rpb24oZikge1xuICBpZiAoIWlzU3RyaW5nKGYpKSB7XG4gICAgdmFyIG9iamVjdHMgPSBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgb2JqZWN0cy5wdXNoKGluc3BlY3QoYXJndW1lbnRzW2ldKSk7XG4gICAgfVxuICAgIHJldHVybiBvYmplY3RzLmpvaW4oJyAnKTtcbiAgfVxuXG4gIHZhciBpID0gMTtcbiAgdmFyIGFyZ3MgPSBhcmd1bWVudHM7XG4gIHZhciBsZW4gPSBhcmdzLmxlbmd0aDtcbiAgdmFyIHN0ciA9IFN0cmluZyhmKS5yZXBsYWNlKGZvcm1hdFJlZ0V4cCwgZnVuY3Rpb24oeCkge1xuICAgIGlmICh4ID09PSAnJSUnKSByZXR1cm4gJyUnO1xuICAgIGlmIChpID49IGxlbikgcmV0dXJuIHg7XG4gICAgc3dpdGNoICh4KSB7XG4gICAgICBjYXNlICclcyc6IHJldHVybiBTdHJpbmcoYXJnc1tpKytdKTtcbiAgICAgIGNhc2UgJyVkJzogcmV0dXJuIE51bWJlcihhcmdzW2krK10pO1xuICAgICAgY2FzZSAnJWonOlxuICAgICAgICB0cnkge1xuICAgICAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShhcmdzW2krK10pO1xuICAgICAgICB9IGNhdGNoIChfKSB7XG4gICAgICAgICAgcmV0dXJuICdbQ2lyY3VsYXJdJztcbiAgICAgICAgfVxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIHg7XG4gICAgfVxuICB9KTtcbiAgZm9yICh2YXIgeCA9IGFyZ3NbaV07IGkgPCBsZW47IHggPSBhcmdzWysraV0pIHtcbiAgICBpZiAoaXNOdWxsKHgpIHx8ICFpc09iamVjdCh4KSkge1xuICAgICAgc3RyICs9ICcgJyArIHg7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0ciArPSAnICcgKyBpbnNwZWN0KHgpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gc3RyO1xufTtcblxuXG4vLyBNYXJrIHRoYXQgYSBtZXRob2Qgc2hvdWxkIG5vdCBiZSB1c2VkLlxuLy8gUmV0dXJucyBhIG1vZGlmaWVkIGZ1bmN0aW9uIHdoaWNoIHdhcm5zIG9uY2UgYnkgZGVmYXVsdC5cbi8vIElmIC0tbm8tZGVwcmVjYXRpb24gaXMgc2V0LCB0aGVuIGl0IGlzIGEgbm8tb3AuXG5leHBvcnRzLmRlcHJlY2F0ZSA9IGZ1bmN0aW9uKGZuLCBtc2cpIHtcbiAgLy8gQWxsb3cgZm9yIGRlcHJlY2F0aW5nIHRoaW5ncyBpbiB0aGUgcHJvY2VzcyBvZiBzdGFydGluZyB1cC5cbiAgaWYgKGlzVW5kZWZpbmVkKGdsb2JhbC5wcm9jZXNzKSkge1xuICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBleHBvcnRzLmRlcHJlY2F0ZShmbiwgbXNnKS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIH07XG4gIH1cblxuICBpZiAocHJvY2Vzcy5ub0RlcHJlY2F0aW9uID09PSB0cnVlKSB7XG4gICAgcmV0dXJuIGZuO1xuICB9XG5cbiAgdmFyIHdhcm5lZCA9IGZhbHNlO1xuICBmdW5jdGlvbiBkZXByZWNhdGVkKCkge1xuICAgIGlmICghd2FybmVkKSB7XG4gICAgICBpZiAocHJvY2Vzcy50aHJvd0RlcHJlY2F0aW9uKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihtc2cpO1xuICAgICAgfSBlbHNlIGlmIChwcm9jZXNzLnRyYWNlRGVwcmVjYXRpb24pIHtcbiAgICAgICAgY29uc29sZS50cmFjZShtc2cpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihtc2cpO1xuICAgICAgfVxuICAgICAgd2FybmVkID0gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGZuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gIH1cblxuICByZXR1cm4gZGVwcmVjYXRlZDtcbn07XG5cblxudmFyIGRlYnVncyA9IHt9O1xudmFyIGRlYnVnRW52aXJvbjtcbmV4cG9ydHMuZGVidWdsb2cgPSBmdW5jdGlvbihzZXQpIHtcbiAgaWYgKGlzVW5kZWZpbmVkKGRlYnVnRW52aXJvbikpXG4gICAgZGVidWdFbnZpcm9uID0gcHJvY2Vzcy5lbnYuTk9ERV9ERUJVRyB8fCAnJztcbiAgc2V0ID0gc2V0LnRvVXBwZXJDYXNlKCk7XG4gIGlmICghZGVidWdzW3NldF0pIHtcbiAgICBpZiAobmV3IFJlZ0V4cCgnXFxcXGInICsgc2V0ICsgJ1xcXFxiJywgJ2knKS50ZXN0KGRlYnVnRW52aXJvbikpIHtcbiAgICAgIHZhciBwaWQgPSBwcm9jZXNzLnBpZDtcbiAgICAgIGRlYnVnc1tzZXRdID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBtc2cgPSBleHBvcnRzLmZvcm1hdC5hcHBseShleHBvcnRzLCBhcmd1bWVudHMpO1xuICAgICAgICBjb25zb2xlLmVycm9yKCclcyAlZDogJXMnLCBzZXQsIHBpZCwgbXNnKTtcbiAgICAgIH07XG4gICAgfSBlbHNlIHtcbiAgICAgIGRlYnVnc1tzZXRdID0gZnVuY3Rpb24oKSB7fTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGRlYnVnc1tzZXRdO1xufTtcblxuXG4vKipcbiAqIEVjaG9zIHRoZSB2YWx1ZSBvZiBhIHZhbHVlLiBUcnlzIHRvIHByaW50IHRoZSB2YWx1ZSBvdXRcbiAqIGluIHRoZSBiZXN0IHdheSBwb3NzaWJsZSBnaXZlbiB0aGUgZGlmZmVyZW50IHR5cGVzLlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmogVGhlIG9iamVjdCB0byBwcmludCBvdXQuXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0cyBPcHRpb25hbCBvcHRpb25zIG9iamVjdCB0aGF0IGFsdGVycyB0aGUgb3V0cHV0LlxuICovXG4vKiBsZWdhY3k6IG9iaiwgc2hvd0hpZGRlbiwgZGVwdGgsIGNvbG9ycyovXG5mdW5jdGlvbiBpbnNwZWN0KG9iaiwgb3B0cykge1xuICAvLyBkZWZhdWx0IG9wdGlvbnNcbiAgdmFyIGN0eCA9IHtcbiAgICBzZWVuOiBbXSxcbiAgICBzdHlsaXplOiBzdHlsaXplTm9Db2xvclxuICB9O1xuICAvLyBsZWdhY3kuLi5cbiAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPj0gMykgY3R4LmRlcHRoID0gYXJndW1lbnRzWzJdO1xuICBpZiAoYXJndW1lbnRzLmxlbmd0aCA+PSA0KSBjdHguY29sb3JzID0gYXJndW1lbnRzWzNdO1xuICBpZiAoaXNCb29sZWFuKG9wdHMpKSB7XG4gICAgLy8gbGVnYWN5Li4uXG4gICAgY3R4LnNob3dIaWRkZW4gPSBvcHRzO1xuICB9IGVsc2UgaWYgKG9wdHMpIHtcbiAgICAvLyBnb3QgYW4gXCJvcHRpb25zXCIgb2JqZWN0XG4gICAgZXhwb3J0cy5fZXh0ZW5kKGN0eCwgb3B0cyk7XG4gIH1cbiAgLy8gc2V0IGRlZmF1bHQgb3B0aW9uc1xuICBpZiAoaXNVbmRlZmluZWQoY3R4LnNob3dIaWRkZW4pKSBjdHguc2hvd0hpZGRlbiA9IGZhbHNlO1xuICBpZiAoaXNVbmRlZmluZWQoY3R4LmRlcHRoKSkgY3R4LmRlcHRoID0gMjtcbiAgaWYgKGlzVW5kZWZpbmVkKGN0eC5jb2xvcnMpKSBjdHguY29sb3JzID0gZmFsc2U7XG4gIGlmIChpc1VuZGVmaW5lZChjdHguY3VzdG9tSW5zcGVjdCkpIGN0eC5jdXN0b21JbnNwZWN0ID0gdHJ1ZTtcbiAgaWYgKGN0eC5jb2xvcnMpIGN0eC5zdHlsaXplID0gc3R5bGl6ZVdpdGhDb2xvcjtcbiAgcmV0dXJuIGZvcm1hdFZhbHVlKGN0eCwgb2JqLCBjdHguZGVwdGgpO1xufVxuZXhwb3J0cy5pbnNwZWN0ID0gaW5zcGVjdDtcblxuXG4vLyBodHRwOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0FOU0lfZXNjYXBlX2NvZGUjZ3JhcGhpY3Ncbmluc3BlY3QuY29sb3JzID0ge1xuICAnYm9sZCcgOiBbMSwgMjJdLFxuICAnaXRhbGljJyA6IFszLCAyM10sXG4gICd1bmRlcmxpbmUnIDogWzQsIDI0XSxcbiAgJ2ludmVyc2UnIDogWzcsIDI3XSxcbiAgJ3doaXRlJyA6IFszNywgMzldLFxuICAnZ3JleScgOiBbOTAsIDM5XSxcbiAgJ2JsYWNrJyA6IFszMCwgMzldLFxuICAnYmx1ZScgOiBbMzQsIDM5XSxcbiAgJ2N5YW4nIDogWzM2LCAzOV0sXG4gICdncmVlbicgOiBbMzIsIDM5XSxcbiAgJ21hZ2VudGEnIDogWzM1LCAzOV0sXG4gICdyZWQnIDogWzMxLCAzOV0sXG4gICd5ZWxsb3cnIDogWzMzLCAzOV1cbn07XG5cbi8vIERvbid0IHVzZSAnYmx1ZScgbm90IHZpc2libGUgb24gY21kLmV4ZVxuaW5zcGVjdC5zdHlsZXMgPSB7XG4gICdzcGVjaWFsJzogJ2N5YW4nLFxuICAnbnVtYmVyJzogJ3llbGxvdycsXG4gICdib29sZWFuJzogJ3llbGxvdycsXG4gICd1bmRlZmluZWQnOiAnZ3JleScsXG4gICdudWxsJzogJ2JvbGQnLFxuICAnc3RyaW5nJzogJ2dyZWVuJyxcbiAgJ2RhdGUnOiAnbWFnZW50YScsXG4gIC8vIFwibmFtZVwiOiBpbnRlbnRpb25hbGx5IG5vdCBzdHlsaW5nXG4gICdyZWdleHAnOiAncmVkJ1xufTtcblxuXG5mdW5jdGlvbiBzdHlsaXplV2l0aENvbG9yKHN0ciwgc3R5bGVUeXBlKSB7XG4gIHZhciBzdHlsZSA9IGluc3BlY3Quc3R5bGVzW3N0eWxlVHlwZV07XG5cbiAgaWYgKHN0eWxlKSB7XG4gICAgcmV0dXJuICdcXHUwMDFiWycgKyBpbnNwZWN0LmNvbG9yc1tzdHlsZV1bMF0gKyAnbScgKyBzdHIgK1xuICAgICAgICAgICAnXFx1MDAxYlsnICsgaW5zcGVjdC5jb2xvcnNbc3R5bGVdWzFdICsgJ20nO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBzdHI7XG4gIH1cbn1cblxuXG5mdW5jdGlvbiBzdHlsaXplTm9Db2xvcihzdHIsIHN0eWxlVHlwZSkge1xuICByZXR1cm4gc3RyO1xufVxuXG5cbmZ1bmN0aW9uIGFycmF5VG9IYXNoKGFycmF5KSB7XG4gIHZhciBoYXNoID0ge307XG5cbiAgYXJyYXkuZm9yRWFjaChmdW5jdGlvbih2YWwsIGlkeCkge1xuICAgIGhhc2hbdmFsXSA9IHRydWU7XG4gIH0pO1xuXG4gIHJldHVybiBoYXNoO1xufVxuXG5cbmZ1bmN0aW9uIGZvcm1hdFZhbHVlKGN0eCwgdmFsdWUsIHJlY3Vyc2VUaW1lcykge1xuICAvLyBQcm92aWRlIGEgaG9vayBmb3IgdXNlci1zcGVjaWZpZWQgaW5zcGVjdCBmdW5jdGlvbnMuXG4gIC8vIENoZWNrIHRoYXQgdmFsdWUgaXMgYW4gb2JqZWN0IHdpdGggYW4gaW5zcGVjdCBmdW5jdGlvbiBvbiBpdFxuICBpZiAoY3R4LmN1c3RvbUluc3BlY3QgJiZcbiAgICAgIHZhbHVlICYmXG4gICAgICBpc0Z1bmN0aW9uKHZhbHVlLmluc3BlY3QpICYmXG4gICAgICAvLyBGaWx0ZXIgb3V0IHRoZSB1dGlsIG1vZHVsZSwgaXQncyBpbnNwZWN0IGZ1bmN0aW9uIGlzIHNwZWNpYWxcbiAgICAgIHZhbHVlLmluc3BlY3QgIT09IGV4cG9ydHMuaW5zcGVjdCAmJlxuICAgICAgLy8gQWxzbyBmaWx0ZXIgb3V0IGFueSBwcm90b3R5cGUgb2JqZWN0cyB1c2luZyB0aGUgY2lyY3VsYXIgY2hlY2suXG4gICAgICAhKHZhbHVlLmNvbnN0cnVjdG9yICYmIHZhbHVlLmNvbnN0cnVjdG9yLnByb3RvdHlwZSA9PT0gdmFsdWUpKSB7XG4gICAgdmFyIHJldCA9IHZhbHVlLmluc3BlY3QocmVjdXJzZVRpbWVzLCBjdHgpO1xuICAgIGlmICghaXNTdHJpbmcocmV0KSkge1xuICAgICAgcmV0ID0gZm9ybWF0VmFsdWUoY3R4LCByZXQsIHJlY3Vyc2VUaW1lcyk7XG4gICAgfVxuICAgIHJldHVybiByZXQ7XG4gIH1cblxuICAvLyBQcmltaXRpdmUgdHlwZXMgY2Fubm90IGhhdmUgcHJvcGVydGllc1xuICB2YXIgcHJpbWl0aXZlID0gZm9ybWF0UHJpbWl0aXZlKGN0eCwgdmFsdWUpO1xuICBpZiAocHJpbWl0aXZlKSB7XG4gICAgcmV0dXJuIHByaW1pdGl2ZTtcbiAgfVxuXG4gIC8vIExvb2sgdXAgdGhlIGtleXMgb2YgdGhlIG9iamVjdC5cbiAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyh2YWx1ZSk7XG4gIHZhciB2aXNpYmxlS2V5cyA9IGFycmF5VG9IYXNoKGtleXMpO1xuXG4gIGlmIChjdHguc2hvd0hpZGRlbikge1xuICAgIGtleXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh2YWx1ZSk7XG4gIH1cblxuICAvLyBJRSBkb2Vzbid0IG1ha2UgZXJyb3IgZmllbGRzIG5vbi1lbnVtZXJhYmxlXG4gIC8vIGh0dHA6Ly9tc2RuLm1pY3Jvc29mdC5jb20vZW4tdXMvbGlicmFyeS9pZS9kd3c1MnNidCh2PXZzLjk0KS5hc3B4XG4gIGlmIChpc0Vycm9yKHZhbHVlKVxuICAgICAgJiYgKGtleXMuaW5kZXhPZignbWVzc2FnZScpID49IDAgfHwga2V5cy5pbmRleE9mKCdkZXNjcmlwdGlvbicpID49IDApKSB7XG4gICAgcmV0dXJuIGZvcm1hdEVycm9yKHZhbHVlKTtcbiAgfVxuXG4gIC8vIFNvbWUgdHlwZSBvZiBvYmplY3Qgd2l0aG91dCBwcm9wZXJ0aWVzIGNhbiBiZSBzaG9ydGN1dHRlZC5cbiAgaWYgKGtleXMubGVuZ3RoID09PSAwKSB7XG4gICAgaWYgKGlzRnVuY3Rpb24odmFsdWUpKSB7XG4gICAgICB2YXIgbmFtZSA9IHZhbHVlLm5hbWUgPyAnOiAnICsgdmFsdWUubmFtZSA6ICcnO1xuICAgICAgcmV0dXJuIGN0eC5zdHlsaXplKCdbRnVuY3Rpb24nICsgbmFtZSArICddJywgJ3NwZWNpYWwnKTtcbiAgICB9XG4gICAgaWYgKGlzUmVnRXhwKHZhbHVlKSkge1xuICAgICAgcmV0dXJuIGN0eC5zdHlsaXplKFJlZ0V4cC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2YWx1ZSksICdyZWdleHAnKTtcbiAgICB9XG4gICAgaWYgKGlzRGF0ZSh2YWx1ZSkpIHtcbiAgICAgIHJldHVybiBjdHguc3R5bGl6ZShEYXRlLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHZhbHVlKSwgJ2RhdGUnKTtcbiAgICB9XG4gICAgaWYgKGlzRXJyb3IodmFsdWUpKSB7XG4gICAgICByZXR1cm4gZm9ybWF0RXJyb3IodmFsdWUpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBiYXNlID0gJycsIGFycmF5ID0gZmFsc2UsIGJyYWNlcyA9IFsneycsICd9J107XG5cbiAgLy8gTWFrZSBBcnJheSBzYXkgdGhhdCB0aGV5IGFyZSBBcnJheVxuICBpZiAoaXNBcnJheSh2YWx1ZSkpIHtcbiAgICBhcnJheSA9IHRydWU7XG4gICAgYnJhY2VzID0gWydbJywgJ10nXTtcbiAgfVxuXG4gIC8vIE1ha2UgZnVuY3Rpb25zIHNheSB0aGF0IHRoZXkgYXJlIGZ1bmN0aW9uc1xuICBpZiAoaXNGdW5jdGlvbih2YWx1ZSkpIHtcbiAgICB2YXIgbiA9IHZhbHVlLm5hbWUgPyAnOiAnICsgdmFsdWUubmFtZSA6ICcnO1xuICAgIGJhc2UgPSAnIFtGdW5jdGlvbicgKyBuICsgJ10nO1xuICB9XG5cbiAgLy8gTWFrZSBSZWdFeHBzIHNheSB0aGF0IHRoZXkgYXJlIFJlZ0V4cHNcbiAgaWYgKGlzUmVnRXhwKHZhbHVlKSkge1xuICAgIGJhc2UgPSAnICcgKyBSZWdFeHAucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodmFsdWUpO1xuICB9XG5cbiAgLy8gTWFrZSBkYXRlcyB3aXRoIHByb3BlcnRpZXMgZmlyc3Qgc2F5IHRoZSBkYXRlXG4gIGlmIChpc0RhdGUodmFsdWUpKSB7XG4gICAgYmFzZSA9ICcgJyArIERhdGUucHJvdG90eXBlLnRvVVRDU3RyaW5nLmNhbGwodmFsdWUpO1xuICB9XG5cbiAgLy8gTWFrZSBlcnJvciB3aXRoIG1lc3NhZ2UgZmlyc3Qgc2F5IHRoZSBlcnJvclxuICBpZiAoaXNFcnJvcih2YWx1ZSkpIHtcbiAgICBiYXNlID0gJyAnICsgZm9ybWF0RXJyb3IodmFsdWUpO1xuICB9XG5cbiAgaWYgKGtleXMubGVuZ3RoID09PSAwICYmICghYXJyYXkgfHwgdmFsdWUubGVuZ3RoID09IDApKSB7XG4gICAgcmV0dXJuIGJyYWNlc1swXSArIGJhc2UgKyBicmFjZXNbMV07XG4gIH1cblxuICBpZiAocmVjdXJzZVRpbWVzIDwgMCkge1xuICAgIGlmIChpc1JlZ0V4cCh2YWx1ZSkpIHtcbiAgICAgIHJldHVybiBjdHguc3R5bGl6ZShSZWdFeHAucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodmFsdWUpLCAncmVnZXhwJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBjdHguc3R5bGl6ZSgnW09iamVjdF0nLCAnc3BlY2lhbCcpO1xuICAgIH1cbiAgfVxuXG4gIGN0eC5zZWVuLnB1c2godmFsdWUpO1xuXG4gIHZhciBvdXRwdXQ7XG4gIGlmIChhcnJheSkge1xuICAgIG91dHB1dCA9IGZvcm1hdEFycmF5KGN0eCwgdmFsdWUsIHJlY3Vyc2VUaW1lcywgdmlzaWJsZUtleXMsIGtleXMpO1xuICB9IGVsc2Uge1xuICAgIG91dHB1dCA9IGtleXMubWFwKGZ1bmN0aW9uKGtleSkge1xuICAgICAgcmV0dXJuIGZvcm1hdFByb3BlcnR5KGN0eCwgdmFsdWUsIHJlY3Vyc2VUaW1lcywgdmlzaWJsZUtleXMsIGtleSwgYXJyYXkpO1xuICAgIH0pO1xuICB9XG5cbiAgY3R4LnNlZW4ucG9wKCk7XG5cbiAgcmV0dXJuIHJlZHVjZVRvU2luZ2xlU3RyaW5nKG91dHB1dCwgYmFzZSwgYnJhY2VzKTtcbn1cblxuXG5mdW5jdGlvbiBmb3JtYXRQcmltaXRpdmUoY3R4LCB2YWx1ZSkge1xuICBpZiAoaXNVbmRlZmluZWQodmFsdWUpKVxuICAgIHJldHVybiBjdHguc3R5bGl6ZSgndW5kZWZpbmVkJywgJ3VuZGVmaW5lZCcpO1xuICBpZiAoaXNTdHJpbmcodmFsdWUpKSB7XG4gICAgdmFyIHNpbXBsZSA9ICdcXCcnICsgSlNPTi5zdHJpbmdpZnkodmFsdWUpLnJlcGxhY2UoL15cInxcIiQvZywgJycpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAucmVwbGFjZSgvJy9nLCBcIlxcXFwnXCIpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAucmVwbGFjZSgvXFxcXFwiL2csICdcIicpICsgJ1xcJyc7XG4gICAgcmV0dXJuIGN0eC5zdHlsaXplKHNpbXBsZSwgJ3N0cmluZycpO1xuICB9XG4gIGlmIChpc051bWJlcih2YWx1ZSkpXG4gICAgcmV0dXJuIGN0eC5zdHlsaXplKCcnICsgdmFsdWUsICdudW1iZXInKTtcbiAgaWYgKGlzQm9vbGVhbih2YWx1ZSkpXG4gICAgcmV0dXJuIGN0eC5zdHlsaXplKCcnICsgdmFsdWUsICdib29sZWFuJyk7XG4gIC8vIEZvciBzb21lIHJlYXNvbiB0eXBlb2YgbnVsbCBpcyBcIm9iamVjdFwiLCBzbyBzcGVjaWFsIGNhc2UgaGVyZS5cbiAgaWYgKGlzTnVsbCh2YWx1ZSkpXG4gICAgcmV0dXJuIGN0eC5zdHlsaXplKCdudWxsJywgJ251bGwnKTtcbn1cblxuXG5mdW5jdGlvbiBmb3JtYXRFcnJvcih2YWx1ZSkge1xuICByZXR1cm4gJ1snICsgRXJyb3IucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodmFsdWUpICsgJ10nO1xufVxuXG5cbmZ1bmN0aW9uIGZvcm1hdEFycmF5KGN0eCwgdmFsdWUsIHJlY3Vyc2VUaW1lcywgdmlzaWJsZUtleXMsIGtleXMpIHtcbiAgdmFyIG91dHB1dCA9IFtdO1xuICBmb3IgKHZhciBpID0gMCwgbCA9IHZhbHVlLmxlbmd0aDsgaSA8IGw7ICsraSkge1xuICAgIGlmIChoYXNPd25Qcm9wZXJ0eSh2YWx1ZSwgU3RyaW5nKGkpKSkge1xuICAgICAgb3V0cHV0LnB1c2goZm9ybWF0UHJvcGVydHkoY3R4LCB2YWx1ZSwgcmVjdXJzZVRpbWVzLCB2aXNpYmxlS2V5cyxcbiAgICAgICAgICBTdHJpbmcoaSksIHRydWUpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgb3V0cHV0LnB1c2goJycpO1xuICAgIH1cbiAgfVxuICBrZXlzLmZvckVhY2goZnVuY3Rpb24oa2V5KSB7XG4gICAgaWYgKCFrZXkubWF0Y2goL15cXGQrJC8pKSB7XG4gICAgICBvdXRwdXQucHVzaChmb3JtYXRQcm9wZXJ0eShjdHgsIHZhbHVlLCByZWN1cnNlVGltZXMsIHZpc2libGVLZXlzLFxuICAgICAgICAgIGtleSwgdHJ1ZSkpO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBvdXRwdXQ7XG59XG5cblxuZnVuY3Rpb24gZm9ybWF0UHJvcGVydHkoY3R4LCB2YWx1ZSwgcmVjdXJzZVRpbWVzLCB2aXNpYmxlS2V5cywga2V5LCBhcnJheSkge1xuICB2YXIgbmFtZSwgc3RyLCBkZXNjO1xuICBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih2YWx1ZSwga2V5KSB8fCB7IHZhbHVlOiB2YWx1ZVtrZXldIH07XG4gIGlmIChkZXNjLmdldCkge1xuICAgIGlmIChkZXNjLnNldCkge1xuICAgICAgc3RyID0gY3R4LnN0eWxpemUoJ1tHZXR0ZXIvU2V0dGVyXScsICdzcGVjaWFsJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0ciA9IGN0eC5zdHlsaXplKCdbR2V0dGVyXScsICdzcGVjaWFsJyk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGlmIChkZXNjLnNldCkge1xuICAgICAgc3RyID0gY3R4LnN0eWxpemUoJ1tTZXR0ZXJdJywgJ3NwZWNpYWwnKTtcbiAgICB9XG4gIH1cbiAgaWYgKCFoYXNPd25Qcm9wZXJ0eSh2aXNpYmxlS2V5cywga2V5KSkge1xuICAgIG5hbWUgPSAnWycgKyBrZXkgKyAnXSc7XG4gIH1cbiAgaWYgKCFzdHIpIHtcbiAgICBpZiAoY3R4LnNlZW4uaW5kZXhPZihkZXNjLnZhbHVlKSA8IDApIHtcbiAgICAgIGlmIChpc051bGwocmVjdXJzZVRpbWVzKSkge1xuICAgICAgICBzdHIgPSBmb3JtYXRWYWx1ZShjdHgsIGRlc2MudmFsdWUsIG51bGwpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc3RyID0gZm9ybWF0VmFsdWUoY3R4LCBkZXNjLnZhbHVlLCByZWN1cnNlVGltZXMgLSAxKTtcbiAgICAgIH1cbiAgICAgIGlmIChzdHIuaW5kZXhPZignXFxuJykgPiAtMSkge1xuICAgICAgICBpZiAoYXJyYXkpIHtcbiAgICAgICAgICBzdHIgPSBzdHIuc3BsaXQoJ1xcbicpLm1hcChmdW5jdGlvbihsaW5lKSB7XG4gICAgICAgICAgICByZXR1cm4gJyAgJyArIGxpbmU7XG4gICAgICAgICAgfSkuam9pbignXFxuJykuc3Vic3RyKDIpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHN0ciA9ICdcXG4nICsgc3RyLnNwbGl0KCdcXG4nKS5tYXAoZnVuY3Rpb24obGluZSkge1xuICAgICAgICAgICAgcmV0dXJuICcgICAnICsgbGluZTtcbiAgICAgICAgICB9KS5qb2luKCdcXG4nKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBzdHIgPSBjdHguc3R5bGl6ZSgnW0NpcmN1bGFyXScsICdzcGVjaWFsJyk7XG4gICAgfVxuICB9XG4gIGlmIChpc1VuZGVmaW5lZChuYW1lKSkge1xuICAgIGlmIChhcnJheSAmJiBrZXkubWF0Y2goL15cXGQrJC8pKSB7XG4gICAgICByZXR1cm4gc3RyO1xuICAgIH1cbiAgICBuYW1lID0gSlNPTi5zdHJpbmdpZnkoJycgKyBrZXkpO1xuICAgIGlmIChuYW1lLm1hdGNoKC9eXCIoW2EtekEtWl9dW2EtekEtWl8wLTldKilcIiQvKSkge1xuICAgICAgbmFtZSA9IG5hbWUuc3Vic3RyKDEsIG5hbWUubGVuZ3RoIC0gMik7XG4gICAgICBuYW1lID0gY3R4LnN0eWxpemUobmFtZSwgJ25hbWUnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgbmFtZSA9IG5hbWUucmVwbGFjZSgvJy9nLCBcIlxcXFwnXCIpXG4gICAgICAgICAgICAgICAgIC5yZXBsYWNlKC9cXFxcXCIvZywgJ1wiJylcbiAgICAgICAgICAgICAgICAgLnJlcGxhY2UoLyheXCJ8XCIkKS9nLCBcIidcIik7XG4gICAgICBuYW1lID0gY3R4LnN0eWxpemUobmFtZSwgJ3N0cmluZycpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBuYW1lICsgJzogJyArIHN0cjtcbn1cblxuXG5mdW5jdGlvbiByZWR1Y2VUb1NpbmdsZVN0cmluZyhvdXRwdXQsIGJhc2UsIGJyYWNlcykge1xuICB2YXIgbnVtTGluZXNFc3QgPSAwO1xuICB2YXIgbGVuZ3RoID0gb3V0cHV0LnJlZHVjZShmdW5jdGlvbihwcmV2LCBjdXIpIHtcbiAgICBudW1MaW5lc0VzdCsrO1xuICAgIGlmIChjdXIuaW5kZXhPZignXFxuJykgPj0gMCkgbnVtTGluZXNFc3QrKztcbiAgICByZXR1cm4gcHJldiArIGN1ci5yZXBsYWNlKC9cXHUwMDFiXFxbXFxkXFxkP20vZywgJycpLmxlbmd0aCArIDE7XG4gIH0sIDApO1xuXG4gIGlmIChsZW5ndGggPiA2MCkge1xuICAgIHJldHVybiBicmFjZXNbMF0gK1xuICAgICAgICAgICAoYmFzZSA9PT0gJycgPyAnJyA6IGJhc2UgKyAnXFxuICcpICtcbiAgICAgICAgICAgJyAnICtcbiAgICAgICAgICAgb3V0cHV0LmpvaW4oJyxcXG4gICcpICtcbiAgICAgICAgICAgJyAnICtcbiAgICAgICAgICAgYnJhY2VzWzFdO1xuICB9XG5cbiAgcmV0dXJuIGJyYWNlc1swXSArIGJhc2UgKyAnICcgKyBvdXRwdXQuam9pbignLCAnKSArICcgJyArIGJyYWNlc1sxXTtcbn1cblxuXG4vLyBOT1RFOiBUaGVzZSB0eXBlIGNoZWNraW5nIGZ1bmN0aW9ucyBpbnRlbnRpb25hbGx5IGRvbid0IHVzZSBgaW5zdGFuY2VvZmBcbi8vIGJlY2F1c2UgaXQgaXMgZnJhZ2lsZSBhbmQgY2FuIGJlIGVhc2lseSBmYWtlZCB3aXRoIGBPYmplY3QuY3JlYXRlKClgLlxuZnVuY3Rpb24gaXNBcnJheShhcikge1xuICByZXR1cm4gQXJyYXkuaXNBcnJheShhcik7XG59XG5leHBvcnRzLmlzQXJyYXkgPSBpc0FycmF5O1xuXG5mdW5jdGlvbiBpc0Jvb2xlYW4oYXJnKSB7XG4gIHJldHVybiB0eXBlb2YgYXJnID09PSAnYm9vbGVhbic7XG59XG5leHBvcnRzLmlzQm9vbGVhbiA9IGlzQm9vbGVhbjtcblxuZnVuY3Rpb24gaXNOdWxsKGFyZykge1xuICByZXR1cm4gYXJnID09PSBudWxsO1xufVxuZXhwb3J0cy5pc051bGwgPSBpc051bGw7XG5cbmZ1bmN0aW9uIGlzTnVsbE9yVW5kZWZpbmVkKGFyZykge1xuICByZXR1cm4gYXJnID09IG51bGw7XG59XG5leHBvcnRzLmlzTnVsbE9yVW5kZWZpbmVkID0gaXNOdWxsT3JVbmRlZmluZWQ7XG5cbmZ1bmN0aW9uIGlzTnVtYmVyKGFyZykge1xuICByZXR1cm4gdHlwZW9mIGFyZyA9PT0gJ251bWJlcic7XG59XG5leHBvcnRzLmlzTnVtYmVyID0gaXNOdW1iZXI7XG5cbmZ1bmN0aW9uIGlzU3RyaW5nKGFyZykge1xuICByZXR1cm4gdHlwZW9mIGFyZyA9PT0gJ3N0cmluZyc7XG59XG5leHBvcnRzLmlzU3RyaW5nID0gaXNTdHJpbmc7XG5cbmZ1bmN0aW9uIGlzU3ltYm9sKGFyZykge1xuICByZXR1cm4gdHlwZW9mIGFyZyA9PT0gJ3N5bWJvbCc7XG59XG5leHBvcnRzLmlzU3ltYm9sID0gaXNTeW1ib2w7XG5cbmZ1bmN0aW9uIGlzVW5kZWZpbmVkKGFyZykge1xuICByZXR1cm4gYXJnID09PSB2b2lkIDA7XG59XG5leHBvcnRzLmlzVW5kZWZpbmVkID0gaXNVbmRlZmluZWQ7XG5cbmZ1bmN0aW9uIGlzUmVnRXhwKHJlKSB7XG4gIHJldHVybiBpc09iamVjdChyZSkgJiYgb2JqZWN0VG9TdHJpbmcocmUpID09PSAnW29iamVjdCBSZWdFeHBdJztcbn1cbmV4cG9ydHMuaXNSZWdFeHAgPSBpc1JlZ0V4cDtcblxuZnVuY3Rpb24gaXNPYmplY3QoYXJnKSB7XG4gIHJldHVybiB0eXBlb2YgYXJnID09PSAnb2JqZWN0JyAmJiBhcmcgIT09IG51bGw7XG59XG5leHBvcnRzLmlzT2JqZWN0ID0gaXNPYmplY3Q7XG5cbmZ1bmN0aW9uIGlzRGF0ZShkKSB7XG4gIHJldHVybiBpc09iamVjdChkKSAmJiBvYmplY3RUb1N0cmluZyhkKSA9PT0gJ1tvYmplY3QgRGF0ZV0nO1xufVxuZXhwb3J0cy5pc0RhdGUgPSBpc0RhdGU7XG5cbmZ1bmN0aW9uIGlzRXJyb3IoZSkge1xuICByZXR1cm4gaXNPYmplY3QoZSkgJiZcbiAgICAgIChvYmplY3RUb1N0cmluZyhlKSA9PT0gJ1tvYmplY3QgRXJyb3JdJyB8fCBlIGluc3RhbmNlb2YgRXJyb3IpO1xufVxuZXhwb3J0cy5pc0Vycm9yID0gaXNFcnJvcjtcblxuZnVuY3Rpb24gaXNGdW5jdGlvbihhcmcpIHtcbiAgcmV0dXJuIHR5cGVvZiBhcmcgPT09ICdmdW5jdGlvbic7XG59XG5leHBvcnRzLmlzRnVuY3Rpb24gPSBpc0Z1bmN0aW9uO1xuXG5mdW5jdGlvbiBpc1ByaW1pdGl2ZShhcmcpIHtcbiAgcmV0dXJuIGFyZyA9PT0gbnVsbCB8fFxuICAgICAgICAgdHlwZW9mIGFyZyA9PT0gJ2Jvb2xlYW4nIHx8XG4gICAgICAgICB0eXBlb2YgYXJnID09PSAnbnVtYmVyJyB8fFxuICAgICAgICAgdHlwZW9mIGFyZyA9PT0gJ3N0cmluZycgfHxcbiAgICAgICAgIHR5cGVvZiBhcmcgPT09ICdzeW1ib2wnIHx8ICAvLyBFUzYgc3ltYm9sXG4gICAgICAgICB0eXBlb2YgYXJnID09PSAndW5kZWZpbmVkJztcbn1cbmV4cG9ydHMuaXNQcmltaXRpdmUgPSBpc1ByaW1pdGl2ZTtcblxuZXhwb3J0cy5pc0J1ZmZlciA9IHJlcXVpcmUoJy4vc3VwcG9ydC9pc0J1ZmZlcicpO1xuXG5mdW5jdGlvbiBvYmplY3RUb1N0cmluZyhvKSB7XG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobyk7XG59XG5cblxuZnVuY3Rpb24gcGFkKG4pIHtcbiAgcmV0dXJuIG4gPCAxMCA/ICcwJyArIG4udG9TdHJpbmcoMTApIDogbi50b1N0cmluZygxMCk7XG59XG5cblxudmFyIG1vbnRocyA9IFsnSmFuJywgJ0ZlYicsICdNYXInLCAnQXByJywgJ01heScsICdKdW4nLCAnSnVsJywgJ0F1ZycsICdTZXAnLFxuICAgICAgICAgICAgICAnT2N0JywgJ05vdicsICdEZWMnXTtcblxuLy8gMjYgRmViIDE2OjE5OjM0XG5mdW5jdGlvbiB0aW1lc3RhbXAoKSB7XG4gIHZhciBkID0gbmV3IERhdGUoKTtcbiAgdmFyIHRpbWUgPSBbcGFkKGQuZ2V0SG91cnMoKSksXG4gICAgICAgICAgICAgIHBhZChkLmdldE1pbnV0ZXMoKSksXG4gICAgICAgICAgICAgIHBhZChkLmdldFNlY29uZHMoKSldLmpvaW4oJzonKTtcbiAgcmV0dXJuIFtkLmdldERhdGUoKSwgbW9udGhzW2QuZ2V0TW9udGgoKV0sIHRpbWVdLmpvaW4oJyAnKTtcbn1cblxuXG4vLyBsb2cgaXMganVzdCBhIHRoaW4gd3JhcHBlciB0byBjb25zb2xlLmxvZyB0aGF0IHByZXBlbmRzIGEgdGltZXN0YW1wXG5leHBvcnRzLmxvZyA9IGZ1bmN0aW9uKCkge1xuICBjb25zb2xlLmxvZygnJXMgLSAlcycsIHRpbWVzdGFtcCgpLCBleHBvcnRzLmZvcm1hdC5hcHBseShleHBvcnRzLCBhcmd1bWVudHMpKTtcbn07XG5cblxuLyoqXG4gKiBJbmhlcml0IHRoZSBwcm90b3R5cGUgbWV0aG9kcyBmcm9tIG9uZSBjb25zdHJ1Y3RvciBpbnRvIGFub3RoZXIuXG4gKlxuICogVGhlIEZ1bmN0aW9uLnByb3RvdHlwZS5pbmhlcml0cyBmcm9tIGxhbmcuanMgcmV3cml0dGVuIGFzIGEgc3RhbmRhbG9uZVxuICogZnVuY3Rpb24gKG5vdCBvbiBGdW5jdGlvbi5wcm90b3R5cGUpLiBOT1RFOiBJZiB0aGlzIGZpbGUgaXMgdG8gYmUgbG9hZGVkXG4gKiBkdXJpbmcgYm9vdHN0cmFwcGluZyB0aGlzIGZ1bmN0aW9uIG5lZWRzIHRvIGJlIHJld3JpdHRlbiB1c2luZyBzb21lIG5hdGl2ZVxuICogZnVuY3Rpb25zIGFzIHByb3RvdHlwZSBzZXR1cCB1c2luZyBub3JtYWwgSmF2YVNjcmlwdCBkb2VzIG5vdCB3b3JrIGFzXG4gKiBleHBlY3RlZCBkdXJpbmcgYm9vdHN0cmFwcGluZyAoc2VlIG1pcnJvci5qcyBpbiByMTE0OTAzKS5cbiAqXG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSBjdG9yIENvbnN0cnVjdG9yIGZ1bmN0aW9uIHdoaWNoIG5lZWRzIHRvIGluaGVyaXQgdGhlXG4gKiAgICAgcHJvdG90eXBlLlxuICogQHBhcmFtIHtmdW5jdGlvbn0gc3VwZXJDdG9yIENvbnN0cnVjdG9yIGZ1bmN0aW9uIHRvIGluaGVyaXQgcHJvdG90eXBlIGZyb20uXG4gKi9cbmV4cG9ydHMuaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpO1xuXG5leHBvcnRzLl9leHRlbmQgPSBmdW5jdGlvbihvcmlnaW4sIGFkZCkge1xuICAvLyBEb24ndCBkbyBhbnl0aGluZyBpZiBhZGQgaXNuJ3QgYW4gb2JqZWN0XG4gIGlmICghYWRkIHx8ICFpc09iamVjdChhZGQpKSByZXR1cm4gb3JpZ2luO1xuXG4gIHZhciBrZXlzID0gT2JqZWN0LmtleXMoYWRkKTtcbiAgdmFyIGkgPSBrZXlzLmxlbmd0aDtcbiAgd2hpbGUgKGktLSkge1xuICAgIG9yaWdpbltrZXlzW2ldXSA9IGFkZFtrZXlzW2ldXTtcbiAgfVxuICByZXR1cm4gb3JpZ2luO1xufTtcblxuZnVuY3Rpb24gaGFzT3duUHJvcGVydHkob2JqLCBwcm9wKSB7XG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKTtcbn1cbiIsInZhciBnO1xyXG5cclxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcclxuZyA9IChmdW5jdGlvbigpIHtcclxuXHRyZXR1cm4gdGhpcztcclxufSkoKTtcclxuXHJcbnRyeSB7XHJcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXHJcblx0ZyA9IGcgfHwgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpIHx8ICgxLCBldmFsKShcInRoaXNcIik7XHJcbn0gY2F0Y2ggKGUpIHtcclxuXHQvLyBUaGlzIHdvcmtzIGlmIHRoZSB3aW5kb3cgcmVmZXJlbmNlIGlzIGF2YWlsYWJsZVxyXG5cdGlmICh0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKSBnID0gd2luZG93O1xyXG59XHJcblxyXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXHJcbi8vIFdlIHJldHVybiB1bmRlZmluZWQsIGluc3RlYWQgb2Ygbm90aGluZyBoZXJlLCBzbyBpdCdzXHJcbi8vIGVhc2llciB0byBoYW5kbGUgdGhpcyBjYXNlLiBpZighZ2xvYmFsKSB7IC4uLn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gZztcclxuIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IE1hcmtkb3duIGZyb20gJy4uL01hcmtkb3duL01hcmtkb3duJztcclxuaW1wb3J0ICcuL0FwcC5zY3NzJztcclxuXHJcbmNsYXNzIEFwcCBleHRlbmRzIENvbXBvbmVudCB7XHJcbiAgcmVuZGVyICgpIHtcclxuICAgIHJldHVybiAoXHJcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGFpbmVyXCI+XHJcbiAgICAgICAgPGhlYWRlcj5oZWFkZXI8L2hlYWRlcj5cclxuICAgICAgICA8TWFya2Rvd24gLz5cclxuICAgICAgICA8Zm9vdGVyPmZvb3RlcjwvZm9vdGVyPlxyXG4gICAgICA8L2Rpdj5cclxuICAgICk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBBcHA7XHJcbiIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCAnLi9FZGl0b3Iuc2Nzcyc7XHJcblxyXG5jbGFzcyBFZGl0b3IgZXh0ZW5kcyBDb21wb25lbnQge1xyXG4gIHJlbmRlciAoKSB7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICA8dGV4dGFyZWEgY2xhc3NOYW1lPVwiZWRpdG9yXCIgb25TY3JvbGw9e3RoaXMucHJvcHMuaGFuZGxlU2Nyb2xsfSBvbkNoYW5nZT17dGhpcy5wcm9wcy5oYW5kbGVUZXh0Q2hhbmdlfSBhdXRvRm9jdXM9XCJ0cnVlXCIgZGVmYXVsdFZhbHVlPXt0aGlzLnByb3BzLnRleHR9IC8+XHJcbiAgICApO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgRWRpdG9yO1xyXG4iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyBtYXJrZG93biB9IGZyb20gJ21hcmtkb3duJztcclxuaW1wb3J0IEVkaXRvciBmcm9tICcuLi9FZGl0b3IvRWRpdG9yJztcclxuaW1wb3J0IFByZXZpZXdlciBmcm9tICcuLi9QcmV2aWV3ZXIvUHJldmlld2VyJztcclxuaW1wb3J0ICcuL01hcmtkb3duLnNjc3MnO1xyXG5cclxuY29uc3QgaW5pdGlhbFRleHQgPSAnI1JlYWN0anNcXG4qIGdhbmVzaFxcbioga3VtYXJcXG4qIFtnYW5lc2hdKGt1bWFyKVxcbiMjIFJlYWN0anNcXG4jIyMgUmVhY3Rqcyc7XHJcblxyXG5jbGFzcyBNYXJrZG93biBleHRlbmRzIENvbXBvbmVudCB7XHJcbiAgY29uc3RydWN0b3IgKCkge1xyXG4gICAgc3VwZXIoKTtcclxuICAgIHRoaXMuc3RhdGUgPSB7XHJcbiAgICAgIHRleHQ6IGluaXRpYWxUZXh0LFxyXG4gICAgICBtZDogdGhpcy5nZXRNYXJrZG93bihpbml0aWFsVGV4dCksXHJcbiAgICAgIHNjcm9sbFBlcmNlbnRhZ2U6IDBcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICBnZXRNYXJrZG93biAodGV4dCkge1xyXG4gICAgcmV0dXJuIG1hcmtkb3duLnRvSFRNTCh0ZXh0LnRyaW0oKSk7XHJcbiAgfVxyXG5cclxuICBnZXRTY3JvbGxQZXJjZW50YWdlICh7IHNjcm9sbFRvcCwgc2Nyb2xsSGVpZ2h0LCBvZmZzZXRIZWlnaHQgfSkge1xyXG4gICAgcmV0dXJuIChzY3JvbGxUb3AgLyAoc2Nyb2xsSGVpZ2h0IC0gb2Zmc2V0SGVpZ2h0KSkgKiAxMDA7XHJcbiAgfVxyXG5cclxuICBoYW5kbGVTY3JvbGwgKGUpIHtcclxuICAgIGNvbnN0IHNjcm9sbFBlcmNlbnRhZ2UgPSB0aGlzLmdldFNjcm9sbFBlcmNlbnRhZ2UoZS50YXJnZXQpO1xyXG5cclxuICAgIHRoaXMuc2V0U3RhdGUoKCkgPT4gKHtcclxuICAgICAgc2Nyb2xsUGVyY2VudGFnZVxyXG4gICAgfSkpO1xyXG4gIH1cclxuXHJcbiAgaGFuZGxlVGV4dENoYW5nZSAoZSkge1xyXG4gICAgY29uc3QgdGV4dCA9IGUudGFyZ2V0LnZhbHVlO1xyXG4gICAgY29uc3QgbWQgPSB0aGlzLmdldE1hcmtkb3duKHRleHQpO1xyXG5cclxuICAgIHRoaXMuc2V0U3RhdGUoKCkgPT4gKHtcclxuICAgICAgbWQsXHJcbiAgICAgIHRleHRcclxuICAgIH0pKTtcclxuICB9XHJcblxyXG4gIHJlbmRlciAoKSB7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1hcmtkb3duXCI+XHJcbiAgICAgICAgPEVkaXRvclxyXG4gICAgICAgICAgaGFuZGxlVGV4dENoYW5nZT17ZSA9PiB0aGlzLmhhbmRsZVRleHRDaGFuZ2UoZSl9XHJcbiAgICAgICAgICBoYW5kbGVTY3JvbGw9e2UgPT4gdGhpcy5oYW5kbGVTY3JvbGwoZSl9XHJcbiAgICAgICAgICB0ZXh0PXt0aGlzLnN0YXRlLnRleHR9XHJcbiAgICAgICAgLz5cclxuICAgICAgICA8UHJldmlld2VyXHJcbiAgICAgICAgICBtYXJrZG93bj17dGhpcy5zdGF0ZS5tZH1cclxuICAgICAgICAgIHNjcm9sbFBlcmNlbnRhZ2U9e3RoaXMuc3RhdGUuc2Nyb2xsUGVyY2VudGFnZX1cclxuICAgICAgICAvPlxyXG4gICAgICA8L2Rpdj5cclxuICAgICk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBNYXJrZG93bjtcclxuIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0ICcuL1ByZXZpZXdlci5zY3NzJztcclxuXHJcbmNsYXNzIFByZXZpZXdlciBleHRlbmRzIENvbXBvbmVudCB7XHJcbiAgY29tcG9uZW50RGlkTW91bnQgKCkge1xyXG4gICAgdGhpcy5wcmV2aWV3ZXJFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByZXZpZXdlcicpO1xyXG4gIH1cclxuXHJcbiAgY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyAoKSB7XHJcbiAgICBjb25zdCBzY3JvbGxQZXJjZW50YWdlID1cclxuICAgICAgKHRoaXMucHJldmlld2VyRWxlbWVudC5zY3JvbGxIZWlnaHQgKiB0aGlzLnByb3BzLnNjcm9sbFBlcmNlbnRhZ2UpIC8gMTAwO1xyXG5cclxuICAgIHRoaXMucHJldmlld2VyRWxlbWVudC5zY3JvbGxUb3AgPSBNYXRoLnJvdW5kKHRoaXMucHJvcHMuc2Nyb2xsUGVyY2VudGFnZSkgPT09IDBcclxuICAgICAgPyAwXHJcbiAgICAgIDogc2Nyb2xsUGVyY2VudGFnZSArIDIwO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVyICgpIHtcclxuICAgIHJldHVybiAoXHJcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwicHJldmlld2VyXCIgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3sgX19odG1sOiB0aGlzLnByb3BzLm1hcmtkb3duIH19IC8+XHJcbiAgICApO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgUHJldmlld2VyO1xyXG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tJztcclxuaW1wb3J0IEFwcCBmcm9tICcuL0NvbXBvbmVudHMvQXBwL0FwcCc7XHJcbmltcG9ydCAnLi9pbmRleC5zY3NzJztcclxuXHJcblJlYWN0RE9NLnJlbmRlcig8QXBwIC8+LCBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjcm9vdCcpKTtcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==